{"version":3,"sources":["D:/src/mbrn/material-table/docz/examples/13-example-tree-data.mdx","D:/src/mbrn/material-table/docz/utils/Playground.jsx"],"names":["MDXContent","props","_this","Object","D_src_mbrn_material_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_src_mbrn_material_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_src_mbrn_material_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","D_src_mbrn_material_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","_utils_Playground__WEBPACK_IMPORTED_MODULE_8__","__position","__code","__scope","Playground","MaterialTable","__codesandbox","_src_material_table__WEBPACK_IMPORTED_MODULE_9__","data","surname","birthYear","birthCity","sex","type","parentId","columns","title","field","removable","lookup","34","63","parentChildData","row","rows","find","options","selection","React","Component","isMDXComponent","docz__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","codemirror__WEBPACK_IMPORTED_MODULE_1__","n","CodeMirror","defaults","viewportMargin","Infinity"],"mappings":"w8BASqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAAS,KAFGP,wEAIV,IAAAQ,EAC0BL,KAAKJ,MAA9BU,EADDD,EACCC,WAAeV,EADhBE,OAAAS,EAAA,EAAAT,CAAAO,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GACzBE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYV,MAAO,CAACiB,GAAK,sBAAvD,qBACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,yqDAA2sDC,QAAS,CAACrB,MAAOI,KAAOA,KAAKJ,MAAQA,EAAMsB,eAAWC,mBAAgBC,cAAa,aAC/zDZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,KAAM,CACJ,CAAET,GAAI,EAAGD,KAAM,IAAKW,QAAS,QAASC,UAAW,KAAMC,UAAW,GAAIC,IAAK,OAAQC,KAAM,SACzF,CAAEd,GAAI,EAAGD,KAAM,IAAKW,QAAS,QAASC,UAAW,KAAMC,UAAW,GAAIC,IAAK,SAAUC,KAAM,QAASC,SAAU,GAC9G,CAAEf,GAAI,EAAGD,KAAM,IAAKW,QAAS,QAASC,UAAW,KAAMC,UAAW,GAAIC,IAAK,SAAUC,KAAM,QAASC,SAAU,GAC9G,CAAEf,GAAI,EAAGD,KAAM,IAAKW,QAAS,QAASC,UAAW,KAAMC,UAAW,GAAIC,IAAK,SAAUC,KAAM,QAASC,SAAU,GAC9G,CAAEf,GAAI,EAAGD,KAAM,IAAKW,QAAS,QAASC,UAAW,KAAMC,UAAW,GAAIC,IAAK,SAAUC,KAAM,SAC3F,CAAEd,GAAI,EAAGD,KAAM,IAAKW,QAAS,QAASC,UAAW,KAAMC,UAAW,GAAIC,IAAK,SAAUC,KAAM,QAASC,SAAU,IAEhHC,QAAS,CACP,CAAEC,MAAO,WAAOC,MAAO,QACvB,CAAED,MAAO,cAAUC,MAAO,WAC1B,CAAED,MAAO,WAAYC,MAAO,OAC5B,CAAED,MAAO,OAAQC,MAAO,OAAQC,WAAW,GAC3C,CAAEF,MAAO,4BAAcC,MAAO,YAAaJ,KAAM,WACjD,CAAEG,MAAO,kBAAcC,MAAO,YAAaE,OAAQ,CAAEC,GAAI,gBAAYC,GAAI,yBAE3EL,MAAM,YAENM,gBAAiB,SAACC,EAAKC,GAAN,OAAeA,EAAKC,KAAK,SAAA9B,GAAC,OAAIA,EAAEI,KAAOwB,EAAIT,YAC5DY,QAAS,CACPC,WAAW,cAnCuBC,IAAMC,WA0C9ChD,EAAWiD,gBAAiB,8DCnD5B,IAAAC,EAAAC,EAAA,yCAAAC,EAAAD,EAAA,+CAAAA,EAAAE,EAAAD,GAGAE,EAAWC,SAASC,eAAiBC,IAEtBlC,MAAf","file":"static/js/docz-examples-13-example-tree-data.cec06b87.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Playground from '../utils/Playground'\nimport MaterialTable from '../../src/material-table'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"tree-data-example\"}}>{`Tree Data Example`}</MDXTag>\n<Playground __position={0} __code={'<MaterialTable\\n  data={[\\n    {\\n      id: 1,\\n      name: \\'a\\',\\n      surname: \\'Baran\\',\\n      birthYear: 1987,\\n      birthCity: 63,\\n      sex: \\'Male\\',\\n      type: \\'adult\\',\\n    },\\n    {\\n      id: 2,\\n      name: \\'b\\',\\n      surname: \\'Baran\\',\\n      birthYear: 1987,\\n      birthCity: 34,\\n      sex: \\'Female\\',\\n      type: \\'adult\\',\\n      parentId: 1,\\n    },\\n    {\\n      id: 3,\\n      name: \\'c\\',\\n      surname: \\'Baran\\',\\n      birthYear: 1987,\\n      birthCity: 34,\\n      sex: \\'Female\\',\\n      type: \\'child\\',\\n      parentId: 1,\\n    },\\n    {\\n      id: 4,\\n      name: \\'d\\',\\n      surname: \\'Baran\\',\\n      birthYear: 1987,\\n      birthCity: 34,\\n      sex: \\'Female\\',\\n      type: \\'child\\',\\n      parentId: 3,\\n    },\\n    {\\n      id: 5,\\n      name: \\'e\\',\\n      surname: \\'Baran\\',\\n      birthYear: 1987,\\n      birthCity: 34,\\n      sex: \\'Female\\',\\n      type: \\'child\\',\\n    },\\n    {\\n      id: 6,\\n      name: \\'f\\',\\n      surname: \\'Baran\\',\\n      birthYear: 1987,\\n      birthCity: 34,\\n      sex: \\'Female\\',\\n      type: \\'child\\',\\n      parentId: 5,\\n    },\\n  ]}\\n  columns={[\\n    { title: \\'Adı\\', field: \\'name\\' },\\n    { title: \\'Soyadı\\', field: \\'surname\\' },\\n    { title: \\'Cinsiyet\\', field: \\'sex\\' },\\n    { title: \\'Tipi\\', field: \\'type\\', removable: false },\\n    { title: \\'Doğum Yılı\\', field: \\'birthYear\\', type: \\'numeric\\' },\\n    {\\n      title: \\'Doğum Yeri\\',\\n      field: \\'birthCity\\',\\n      lookup: { 34: \\'İstanbul\\', 63: \\'Şanlıurfa\\' },\\n    },\\n  ]}\\n  title=\\\"Tree Data\\\"\\n  // how to choose a parent for a rowData\\n  parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\\n  options={{\\n    selection: true,\\n  }}\\n/>'} __scope={{props: this ? this.props : props,Playground,MaterialTable}} __codesandbox={`undefined`}>\n  <MaterialTable\n    data={[\n      { id: 1, name: 'a', surname: 'Baran', birthYear: 1987, birthCity: 63, sex: 'Male', type: 'adult' },\n      { id: 2, name: 'b', surname: 'Baran', birthYear: 1987, birthCity: 34, sex: 'Female', type: 'adult', parentId: 1 },\n      { id: 3, name: 'c', surname: 'Baran', birthYear: 1987, birthCity: 34, sex: 'Female', type: 'child', parentId: 1 },\n      { id: 4, name: 'd', surname: 'Baran', birthYear: 1987, birthCity: 34, sex: 'Female', type: 'child', parentId: 3 },\n      { id: 5, name: 'e', surname: 'Baran', birthYear: 1987, birthCity: 34, sex: 'Female', type: 'child' },\n      { id: 6, name: 'f', surname: 'Baran', birthYear: 1987, birthCity: 34, sex: 'Female', type: 'child', parentId: 5 },\n    ]}\n    columns={[\n      { title: 'Adı', field: 'name' },\n      { title: 'Soyadı', field: 'surname' },\n      { title: 'Cinsiyet', field: 'sex' },\n      { title: 'Tipi', field: 'type', removable: false },\n      { title: 'Doğum Yılı', field: 'birthYear', type: 'numeric' },\n      { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } },\n    ]}\n    title=\"Tree Data\"\n    // how to choose a parent for a rowData\n    parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n    options={{\n      selection: true,\n    }}\n  />\n</Playground>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  ","import {Playground} from 'docz';\r\nimport CodeMirror from 'codemirror';\r\n\r\nCodeMirror.defaults.viewportMargin = Infinity;\r\n\r\nexport default Playground;"],"sourceRoot":""}