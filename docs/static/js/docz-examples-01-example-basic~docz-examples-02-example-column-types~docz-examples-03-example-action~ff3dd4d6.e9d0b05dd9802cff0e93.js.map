{"version":3,"sources":["webpack:///./src/m-table-actions.js","webpack:///./src/m-table-body.js","webpack:///./src/m-table-body-row.js","webpack:///./src/m-table-groupbar.js","webpack:///./src/m-table-group-row.js","webpack:///./src/m-table-cell.js","webpack:///./src/form/form-field.js","webpack:///./src/m-table-edit-row.js","webpack:///./src/m-table-filter-row.js","webpack:///./src/m-table-header.js","webpack:///./src/m-table-pagination.js","webpack:///./src/m-table-toolbar.js","webpack:///./src/utils/data-manager.js","webpack:///./src/material-table.js"],"names":["MTableActions","action","index","_this","this","props","data","button","react","index_es","key","icon","color","disabled","onClick","event","stopPropagation","Object","assign","iconProps","fontSize","tooltip","title","_this2","actions","map","renderButton","React","defaultProps","MTableBody","emptyRowCount","renderData","localization","objectSpread_default","options","showEmptyDataSourceMessage","length","addColumn","selection","filter","a","isFreeAction","style","height","paging","emptyRowsWhenPaging","pageSize","paddingTop","paddingBottom","textAlign","colSpan","columns","emptyDataSourceMessage","toConsumableArray_default","Array","r","tableData","editing","components","EditRow","columnDef","hidden","icons","mode","onEditingCanceled","onEditingApproved","Row","level","onRowSelected","getFieldValue","detailPanel","path","currentPage","onToggleDetailPanel","onRowClick","isTreeData","onTreeExpandChanged","hasAnyEditingRow","groups","_this3","groupData","GroupRow","value","onGroupExpandChanged","_this4","col","groupOrder","sort","col1","col2","filtering","FilterRow","emptyCell","hasActions","actionsColumnIndex","onFilterChanged","onFilterSelectionChanged","filterRow","hasDetailPanel","renderGroupedRows","renderUngroupedRows","showAddRow","renderEmpty","MTableBodyRow","isOpen","transform","Cell","id","rowData","padding","width","display","Actions","checked","e","toString","onChange","paddingLeft","_this5","CustomIcon","_ref","transition","rotateIconStyle","showDetailPanel","DetailPanel","panel","render","iconButton","animation","openIcon","rowStyle","cursor","opacity","_this6","renderColumns","splice","renderSelectionColumn","push","renderActions","endPos","childRows","marginLeft","isTreeExpanded","renderDetailPanelColumn","forEach","_this$props","rowProps","objectWithoutProperties_default","selected","hover","getStyle","panelIndex","isArray","concat","MTableGroupbar","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","isDragging","draggableStyle","userSelect","margin","isDraggingOver","background","overflow","border","borderStyle","state","minHeight","react_beautiful_dnd_esm","droppableId","direction","placeholder","provided","snapshot","ref","innerRef","getListStyle","groupColumns","variant","groupedBy","draggableId","draggableProps","dragHandleProps","getItemStyle","onSortChanged","label","float","groupSort","SortArrow","boxShadow","textTransform","onDelete","onGroupRemoved","MTableGroupRow","detail","column","isExpanded","freeCells","i","lookup","undefined","emptyValue","MTableCell","disableClick","cellStyle","getEmptyValue","type","Check","ThirdStateCheck","Date","toLocaleDateString","toLocaleTimeString","toLocaleString","getCurrencyValue","currencySetting","Intl","NumberFormat","locale","currency","currencyCode","minimumFractionDigits","maximumFractionDigits","format","cellProps","align","indexOf","handleClickCell","children","getRenderValue","FormField","target","keys","material_ui_pickers_esm","utils","DateFnsUtils","clearable","InputProps","renderLookupField","renderBooleanField","renderDateField","renderTimeField","renderDateTimeField","renderCurrencyField","renderTextField","MTableEditRow","JSON","parse","stringify","field","form_field","setState","Clear","borderBottom","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MTableFilterRow","multiple","filterValue","input","renderValue","selecteds","join","primary","indeterminate","val","startAdornment","position","filterTooltip","Filter","dateInputElement","onDateInputChange","date","renderLookupFilter","renderBooleanFilter","includes","renderDateTypeFilter","renderDefaultFilter","getComponentForColumn","MTableHeader","headerStyle","sorting","active","orderBy","orderDirection","onOrderChange","grouping","isDragDisabled","selectedCount","dataCount","onAllSelected","headers","renderHeader","hasSelection","renderSelectionHeader","showActionsColumn","actionsHeaderIndex","renderActionsHeader","MTablePaginationInner","onChangePage","page","Math","max","ceil","count","rowsPerPage","classes","theme","className","root","firstTooltip","handleFirstPageButtonClick","aria-label","firstAriaLabel","LastPage","FirstPage","previousTooltip","handleBackButtonClick","previousAriaLabel","NextPage","PreviousPage","nextTooltip","handleNextButtonClick","nextAriaLabel","lastTooltip","handleLastPageButtonClick","lastAriaLabel","labelDisplayedRows","labelRowsPerPage","MTablePagination","withStyles","flexShrink","palette","text","secondary","spacing","unit","marginRight","withTheme","MTableToolbar","export","CsvBuilder","exportFileName","setDelimeter","exportDelimiter","setColumns","addRows","exportFile","exportButtonAnchorEl","columnsButtonAnchorEl","search","searchField","searchText","onSearchChanged","searchTooltip","Search","endAdornment","ResetSearch","searchFieldStyle","renderSearch","columnsButton","showColumnsTitle","currentTarget","showColumnsAriaLabel","ViewColumn","anchorEl","open","Boolean","onClose","fontWeight","addRemoveColumns","removable","control","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","Export","exportCsv","exportName","selectedRows","renderSelectedActions","renderDefaultActions","showTitle","nRowsSelected","replace","classNames","highlight","toolbarButtonAlignment","spacer","paddingRight","main","backgroundColor","lighten","light","dark","flex","DataManager","isDataType","reduce","result","current","byString","filtered","filterData","searched","searchData","grouped","treefied","treefyData","sorted","sortData","paged","pageData","sortedData","lastEditingRow","originalData","pagedData","filteredData","applyFilters","customFilterAndSearch","row","currentDate","selectedDate","currentDateToCompare","selectedDateToCompare","formatDate","currentHour","selectedHour","toUpperCase","searchedData","applySearch","searchable","some","defaultFilter","defaultGroupOrder","defaultGroupSort","parentFunc","columnId","filterSelectionChecked","findDataByPath","detailPanelType","lastDetailPanelRow","setCheck","element","d","groupedData","find","c","start","destination","source","min","end","slice","last","pop","unshift","shift","newGroup","o","s","split","n","x","dataType","b","list","_","customSort","tmpData","subData","object","colDef","group","g","oldGroup","findGroupByGroupPath","treefiedData","addRow","parent","sortGroups","sortGroupData","sortList","sortTree","item","startIndex","endIndex","MaterialTable","onSelectionChange","apply","arguments","_this$props2","onChangeRowsPerPage","_this$props3","query","isLoading","then","totalCount","dataManager","setData","getRenderState","debounce","changeSearchText","isRemoteData","onQueryChange","debounceInterval","filters","operator","calculatedProps","getProps","setDataManagerFields","isInit","defaultSortColumnIndex","defaultSortDirection","findIndex","defaultSort","changeApplySearch","changeApplyFilters","changeCurrentPage","initialPage","changePageSize","changeOrder","changePaging","changeParentFunc","parentChildData","changeDetailPanelType","nextProps","editable","onRowAdd","Add","changeRowEditing","onRowUpdate","Edit","onRowDelete","Delete","pagination","Pagination","toolbar","paginationToolbar","overflowX","rowsPerPageOptions","pageSizeOptions","ActionsComponent","subProps","m_table_pagination","from","to","onDragEnd","changeByDrag","Container","Toolbar","onSearchChange","changeColumnHidden","Groupbar","groupedColumn","changeGroupOrder","combine","reason","material_table_ScrollBar","double","doubleHorizontalScroll","header","Header","changeAllSelected","Body","changeFilterValue","onFilterChange","changeFilterSelectionChecked","changeRowSelected","changeDetailPanelVisibility","changeGroupExpand","changeTreeExpand","newData","oldData","catch","body","loadingType","top","left","renderFooter","verticalAlign","ScrollBar","DoubleScrollbar_default","Paper","TablePagination"],"mappings":"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","file":"static/js/docz-examples-01-example-basic~docz-examples-02-example-column-types~docz-examples-03-example-action~ff3dd4d6.7de8f235.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, IconButton, Tooltip } from '@material-ui/core';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableActions extends React.Component {\r\n  renderButton(action, index) {\r\n    if (typeof action === 'function') {\r\n      action = action(this.props.data);\r\n      if (!action) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const button = (\r\n      <span>\r\n        <IconButton\r\n          key={action.icon + '' + index}\r\n          color=\"inherit\"\r\n          disabled={action.disabled}          \r\n          onClick={(event) => {\r\n            if (action.onClick) {\r\n              action.onClick(event, this.props.data);\r\n              event.stopPropagation();\r\n            }\r\n          }}\r\n        >\r\n          {typeof action.icon === \"string\" ?\r\n            <Icon {...action.iconProps} fontSize=\"small\">{action.icon}</Icon>\r\n            :\r\n            <action.icon {...action.iconProps} />\r\n          }\r\n        </IconButton>\r\n      </span>\r\n    );\r\n\r\n    if (action.tooltip) {\r\n      return <Tooltip title={action.tooltip} key={action.tooltip + '' + index}>{button}</Tooltip>;\r\n    } else {\r\n      return button;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.actions) {\r\n      return this.props.actions.map((action, index) => (this.renderButton(action, index)));\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nMTableActions.defaultProps = {\r\n  actions: [],\r\n  data: {}\r\n};\r\n\r\nMTableActions.propTypes = {\r\n  actions: PropTypes.array.isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\r\n};\r\n\r\nexport default MTableActions;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableBody extends React.Component {\r\n  renderEmpty(emptyRowCount, renderData) {\r\n    const localization = { ...MTableBody.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {\r\n      let addColumn = 0;\r\n      if (this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)) {\r\n        addColumn = 1;\r\n      }\r\n      return (\r\n        <TableRow style={{ height: 49 * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1) }} key={'empty-' + 0} >\r\n          <TableCell style={{ paddingTop: 0, paddingBottom: 0, textAlign: 'center' }} colSpan={this.props.columns.length + addColumn} key=\"empty-\">\r\n            {localization.emptyDataSourceMessage}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    } else if (this.props.options.emptyRowsWhenPaging) {\r\n      return (\r\n        <React.Fragment>\r\n          {[...Array(emptyRowCount)].map((r, index) => <TableRow style={{ height: 49 }} key={'empty-' + index} />)}\r\n          {emptyRowCount > 0 && <TableRow style={{ height: 1 }} key={'empty-last1'} />}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderUngroupedRows(renderData) {\r\n    return renderData.map((data, index) => {\r\n      if (data.tableData.editing) {\r\n        return (\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            data={data}\r\n            icons={this.props.icons}\r\n            key={index}\r\n            mode={data.tableData.editing}\r\n            options={this.props.options}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <this.props.components.Row\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            data={data}\r\n            index={index}\r\n            key={index}\r\n            level={0}\r\n            options={this.props.options}\r\n            onRowSelected={this.props.onRowSelected}\r\n            actions={this.props.actions}\r\n            columns={this.props.columns}\r\n            getFieldValue={this.props.getFieldValue}\r\n            detailPanel={this.props.detailPanel}\r\n            path={[index + this.props.pageSize * this.props.currentPage]}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onRowClick={this.props.onRowClick}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  renderGroupedRows(groups, renderData) {\r\n    return renderData.map((groupData, index) => (\r\n      <this.props.components.GroupRow\r\n        actions={this.props.actions}\r\n        key={groupData.value || (\"\" + index)}\r\n        columns={this.props.columns}\r\n        components={this.props.components}\r\n        detailPanel={this.props.detailPanel}\r\n        getFieldValue={this.props.getFieldValue}\r\n        groupData={groupData}\r\n        groups={groups}\r\n        icons={this.props.icons}\r\n        level={0}\r\n        path={[index + this.props.pageSize * this.props.currentPage]}\r\n        onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n        onRowSelected={this.props.onRowSelected}\r\n        onRowClick={this.props.onRowClick}\r\n        onEditingCanceled={this.props.onEditingCanceled}\r\n        onEditingApproved={this.props.onEditingApproved}\r\n        onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n        onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n        options={this.props.options}\r\n        isTreeData={this.props.isTreeData}\r\n        hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    let renderData = this.props.renderData;\r\n    const groups = this.props.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    let emptyRowCount = 0;\r\n    if (this.props.options.paging) {\r\n      emptyRowCount = this.props.pageSize - renderData.length;\r\n    }\r\n\r\n    return (\r\n      <TableBody>\r\n        {this.props.options.filtering &&\r\n          <this.props.components.FilterRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            icons={this.props.icons}\r\n            emptyCell={this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            hasActions={(this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            actionsColumnIndex={this.props.options.actionsColumnIndex}\r\n            onFilterChanged={this.props.onFilterChanged}\r\n            selection={this.props.options.selection}\r\n            onFilterSelectionChanged={this.props.onFilterSelectionChanged}\r\n            localization={{ ...MTableBody.defaultProps.localization.filterRow, ...this.props.localization.filterRow }}\r\n            hasDetailPanel={!!this.props.detailPanel}\r\n            isTreeData={this.props.isTreeData}\r\n          />\r\n        }\r\n        {groups.length > 0 ?\r\n          this.renderGroupedRows(groups, renderData) :\r\n          this.renderUngroupedRows(renderData)\r\n        }\r\n\r\n        {this.props.showAddRow &&\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            key=\"key-add-row\"\r\n            mode=\"add\"\r\n            options={this.props.options}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        }\r\n        {this.renderEmpty(emptyRowCount, renderData)}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBody.defaultProps = {\r\n  actions: [],\r\n  currentPage: 0,\r\n  pageSize: 5,\r\n  renderData: [],\r\n  selection: false,\r\n  localization: {\r\n    emptyDataSourceMessage: 'No records to display',\r\n    filterRow: {}\r\n  }\r\n};\r\n\r\nMTableBody.propTypes = {\r\n  actions: PropTypes.array,\r\n  components: PropTypes.object.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  currentPage: PropTypes.number,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  icons: PropTypes.object.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  options: PropTypes.object.isRequired,\r\n  pageSize: PropTypes.number,\r\n  renderData: PropTypes.array,\r\n  selection: PropTypes.bool.isRequired,\r\n  showAddRow: PropTypes.bool,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  localization: PropTypes.object,\r\n  onFilterChanged: PropTypes.func,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n};\r\n\r\nexport default MTableBody;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableBodyRow extends React.Component {\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.props.getFieldValue(this.props.data, columnDef);\r\n        return (\r\n          <this.props.components.Cell\r\n            icons={this.props.icons}\r\n            columnDef={columnDef}\r\n            value={value}\r\n            key={columnDef.tableData.id}\r\n            rowData={this.props.data}\r\n          />\r\n        );\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {\r\n    const actions = this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection);\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionColumn() {\r\n    return (\r\n      <TableCell padding=\"none\" key=\"key-selection-column\" style={{ width: 48 }}>\r\n        <Checkbox\r\n          checked={this.props.data.tableData.checked === true}\r\n          onClick={(e) => e.stopPropagation()}\r\n          value={this.props.data.tableData.id.toString()}\r\n          onChange={(event) => this.props.onRowSelected(event, this.props.path)}\r\n          style={{\r\n            paddingLeft: 12 + this.props.level * 20\r\n          }}\r\n        />\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  renderDetailPanelColumn() {\r\n\r\n    const CustomIcon = ({ icon, style }) => typeof icon === \"string\" ? <Icon style={style}>{icon}</Icon> : React.createElement(icon, { style });\r\n\r\n    if (typeof this.props.detailPanel == 'function') {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48, textAlign: 'center' }}>\r\n          <IconButton\r\n            style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.data.tableData.showDetailPanel) }}\r\n            onClick={(event) => {\r\n              this.props.onToggleDetailPanel(this.props.path, this.props.detailPanel);\r\n              event.stopPropagation();\r\n            }}\r\n          >\r\n            <this.props.icons.DetailPanel />\r\n          </IconButton>\r\n        </TableCell>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48 * this.props.detailPanel.length, textAlign: 'center' }}>\r\n          {this.props.detailPanel.map((panel, index) => {\r\n\r\n            if (typeof panel === \"function\") {\r\n              panel = panel(this.props.data);\r\n            }\r\n\r\n            const isOpen = this.props.data.tableData.showDetailPanel === panel.render;\r\n            let iconButton = <this.props.icons.DetailPanel />;\r\n            let animation = true;\r\n            if (isOpen) {\r\n              if (panel.openIcon) {\r\n                iconButton = <CustomIcon icon={panel.openIcon} />;\r\n                animation = false;\r\n              }\r\n              else if (panel.icon) {\r\n                iconButton = <CustomIcon icon={panel.icon} />;\r\n              }\r\n            }\r\n            else if (panel.icon) {\r\n              iconButton = <CustomIcon icon={panel.icon} />;\r\n              animation = false;\r\n            }\r\n\r\n            iconButton = (\r\n              <IconButton\r\n                key={\"key-detail-panel-\" + index}\r\n                style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(animation && isOpen) }}\r\n                disabled={panel.disabled}\r\n                onClick={(event) => {\r\n                  this.props.onToggleDetailPanel(this.props.path, panel.render);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                {iconButton}\r\n              </IconButton>);\r\n\r\n            if (panel.tooltip) {\r\n              iconButton = <Tooltip key={\"key-detail-panel-\" + index} title={panel.tooltip}>{iconButton}</Tooltip>;\r\n            }\r\n\r\n            return iconButton;\r\n          })}\r\n        </TableCell>\r\n      );\r\n    }\r\n  }\r\n\r\n  getStyle() {\r\n    let style = {       \r\n      transition: 'all ease 300ms',      \r\n    };\r\n\r\n    if (typeof this.props.options.rowStyle === \"function\") {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle(this.props.data)\r\n      };\r\n    }\r\n    else if(this.props.options.rowStyle) {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle\r\n      };\r\n    }\r\n\r\n    if (this.props.onRowClick) {\r\n      style.cursor = 'pointer';\r\n    }\r\n    \r\n    if(this.props.hasAnyEditingRow) {\r\n      style.opacity = 0.2;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const columns = this.renderColumns();\r\n    if (this.props.options.selection) {\r\n      columns.splice(0, 0, this.renderSelectionColumn());\r\n    }\r\n    if (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0) {\r\n      if (this.props.options.actionsColumnIndex === -1) {\r\n        columns.push(this.renderActions());\r\n      } else if (this.props.options.actionsColumnIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.options.selection) {\r\n          endPos = 1;\r\n        }\r\n        columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n      }\r\n    }\r\n\r\n    if (this.props.isTreeData) {\r\n      if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {\r\n        columns.splice(0, 0, (\r\n          <TableCell padding=\"none\" key={\"key-tree-data-column\"} style={{ width: 48 }}>\r\n            <IconButton\r\n              style={{\r\n                transition: 'all ease 200ms',\r\n                marginLeft: this.props.level * 20,\r\n                ...this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)\r\n              }}\r\n              onClick={(event) => {\r\n                this.props.onTreeExpandChanged(this.props.path);\r\n                event.stopPropagation();\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n          </TableCell>\r\n        ));\r\n      }\r\n      else {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-tree-data-column\"} />);\r\n      }\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      columns.splice(0, 0, this.renderDetailPanelColumn());\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const { \r\n      detailPanel, \r\n      getFieldValue, \r\n      isTreeData, \r\n      onRowClick, \r\n      onRowSelected, \r\n      onTreeExpandChanged, \r\n      onToggleDetailPanel, \r\n      onEditingCanceled,\r\n      onEditingApproved,\r\n      hasAnyEditingRow, \r\n      ...rowProps } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          selected={hasAnyEditingRow}\r\n          {...rowProps}\r\n          hover={onRowClick ? true : false}\r\n          style={this.getStyle()}\r\n          onClick={(event) => {\r\n            onRowClick && onRowClick(event, this.props.data,\r\n              (panelIndex) => {\r\n                let panel = detailPanel;\r\n                if (Array.isArray(panel)) {\r\n                  panel = panel[panelIndex || 0].render;\r\n                }\r\n\r\n                onToggleDetailPanel(this.props.path, panel);\r\n              });\r\n          }}\r\n        >\r\n          {columns}\r\n        </TableRow>\r\n        {this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded &&\r\n          this.props.data.tableData.childRows.map((data, index) => (\r\n            <this.props.components.Row\r\n              {...this.props}\r\n              data={data}\r\n              index={index}\r\n              key={index}\r\n              level={this.props.level + 1}\r\n              path={[...this.props.path, index]}\r\n              onEditingCanceled={onEditingCanceled}\r\n              onEditingApproved={onEditingApproved}\r\n              hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n            />\r\n          ))\r\n        }\r\n        {this.props.data.tableData && this.props.data.tableData.showDetailPanel &&\r\n          <TableRow\r\n          // selected={this.props.index % 2 === 0}\r\n          >\r\n            <TableCell colSpan={columns.length} padding=\"none\">\r\n              {this.props.data.tableData.showDetailPanel(this.props.data)}\r\n            </TableCell>\r\n          </TableRow>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBodyRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  data: {},\r\n  options: {},\r\n  path: []\r\n};\r\n\r\nMTableBodyRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  columns: PropTypes.array,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, Toolbar, Chip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nclass MTableGroupbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    // padding: '8px 16px',\r\n    margin: `0 ${8}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    // background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  getListStyle = isDraggingOver => ({\r\n    // background: isDraggingOver ? 'lightblue' : '#0000000a',\r\n    background: '#0000000a',\r\n    display: 'flex',\r\n    width: '100%',\r\n    padding: 8,\r\n    overflow: 'auto',\r\n    border: '1px solid #ccc',\r\n    borderStyle: 'dashed'\r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <Toolbar style={{ padding: 0, minHeight: 'unset' }}>\r\n        <Droppable droppableId=\"groups\" direction=\"horizontal\" placeholder=\"Deneme\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={this.getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.props.groupColumns.length > 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.groupedBy}\r\n                </Typography>\r\n              }\r\n              {this.props.groupColumns.map((columnDef, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={columnDef.tableData.id}\r\n                    draggableId={columnDef.tableData.id.toString()}\r\n                    index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                      >\r\n                        <Chip\r\n                          {...provided.dragHandleProps}\r\n                          onClick={() => this.props.onSortChanged(columnDef)}\r\n                          label={\r\n                            <div>\r\n                              <div style={{ float: 'left' }}>{columnDef.title}</div>\r\n                              {columnDef.tableData.groupSort &&\r\n                                <this.props.icons.SortArrow\r\n                                  style={{\r\n                                    transition: '300ms ease all',\r\n                                    transform: columnDef.tableData.groupSort === \"desc\" ? 'rotate(-180deg)' : 'none',\r\n                                    fontSize: 18\r\n                                  }}\r\n                                />\r\n                              }\r\n                            </div>\r\n                          }\r\n                          style={{ boxShadow: 'none', textTransform: 'none' }}\r\n                          variant=\"contained\"\r\n                          onDelete={() => this.props.onGroupRemoved(columnDef, index)}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {this.props.groupColumns.length === 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.placeholder}\r\n                </Typography>\r\n              }\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupbar.defaultProps = {\r\n};\r\n\r\nMTableGroupbar.propTypes = {\r\n  localization: PropTypes.shape({\r\n    groupedBy: PropTypes.string,\r\n    placeholder: PropTypes.string\r\n  }),\r\n};\r\n\r\nexport default MTableGroupbar;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableCell, TableRow, IconButton } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableGroupRow extends React.Component {\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  render() {\r\n    let colSpan = this.props.columns.filter(columnDef => !columnDef.hidden).length;\r\n    this.props.options.selection && colSpan++;    \r\n    this.props.detailPanel && colSpan++;\r\n    this.props.actions && this.props.actions.length > 0 && colSpan++;\r\n    const column = this.props.groups[this.props.level];\r\n\r\n    let detail;\r\n    if (this.props.groupData.isExpanded) {\r\n      if (this.props.groups.length > (this.props.level + 1)) { // Is there another group\r\n        detail = this.props.groupData.groups.map((groupData, index) => (\r\n          <this.props.components.GroupRow\r\n            actions={this.props.actions}\r\n            key={groupData.value || (\"\" + index)}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            groupData={groupData}\r\n            groups={this.props.groups}            \r\n            icons={this.props.icons}\r\n            level={this.props.level + 1}\r\n            path={[...this.props.path, index]}\r\n            onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            options={this.props.options}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        ));\r\n      }\r\n      else {\r\n        detail = this.props.groupData.data.map((rowData, index) => (\r\n          <this.props.components.Row\r\n            actions={this.props.actions}\r\n            key={index}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            data={rowData}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            icons={this.props.icons}\r\n            path={[...this.props.path, index]}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        ));\r\n      }\r\n    }\r\n\r\n    const freeCells = [];\r\n    for (let i = 0; i < this.props.level; i++) {\r\n      freeCells.push(<TableCell padding=\"checkbox\" />);\r\n    }\r\n\r\n    let value = this.props.groupData.value;\r\n    if(column.render) {\r\n      value = column.render(value, 'group');\r\n    }\r\n    else if (column.lookup) {\r\n      value = column.lookup[value];\r\n    }\r\n    if((value === undefined || value === null) && column.emptyValue) {\r\n      if (typeof column.emptyValue === 'function') {\r\n        value = column.emptyValue();\r\n      } else {\r\n        value = column.emptyValue;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableRow>\r\n          {freeCells}\r\n          <this.props.components.Cell colSpan={colSpan} padding=\"none\" value={value}>\r\n            <IconButton\r\n              style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.groupData.isExpanded) }}\r\n              onClick={(event) => {\r\n                this.props.onGroupExpandChanged(this.props.path);\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n            <b>{column.title + \": \"}</b>            \r\n          </this.props.components.Cell>\r\n        </TableRow>\r\n        {detail}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupRow.defaultProps = {\r\n  columns: [],\r\n  groups: [],\r\n  options: {},\r\n  level: 0\r\n};\r\n\r\nMTableGroupRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.arrayOf(PropTypes.object),\r\n  components: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n  getFieldValue: PropTypes.func,\r\n  groupData: PropTypes.object,\r\n  groups: PropTypes.arrayOf(PropTypes.object),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  icons: PropTypes.object,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  level: PropTypes.number,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onRowSelected: PropTypes.func,\r\n  onRowClick: PropTypes.func,  \r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  options: PropTypes.object,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport { Icon, TableCell } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport default class MTableCell extends React.Component {\r\n  getRenderValue() {\r\n    if (this.props.columnDef.emptyValue !== undefined && (this.props.value === undefined || this.props.value === null)) {\r\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\r\n    }\r\n    if (this.props.columnDef.render) {\r\n      return this.props.columnDef.render(this.props.rowData, 'row');\r\n    } else if (this.props.columnDef.type === 'boolean') {\r\n      const style = { textAlign: 'left', width: '48px' };\r\n      if (this.props.value) {\r\n        return <this.props.icons.Check style={style} />;\r\n      } else {\r\n        return <this.props.icons.ThirdStateCheck style={style} />;\r\n      }\r\n    } else if (this.props.columnDef.type === 'date') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleDateString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'time') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleTimeString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'datetime') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'currency') {\r\n      return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);\r\n    }\r\n\r\n    return this.props.value;\r\n  }\r\n\r\n  getEmptyValue(emptyValue) {\r\n    if (typeof emptyValue === 'function') {\r\n      return this.props.columnDef.emptyValue(this.props.rowData);\r\n    } else {\r\n      return emptyValue;\r\n    }\r\n  }\r\n\r\n  getCurrencyValue(currencySetting, value) {\r\n    if (currencySetting !== undefined) {\r\n      return new Intl.NumberFormat((currencySetting.locale !== undefined) ? currencySetting.locale : 'en-US',\r\n        {\r\n          style: 'currency',\r\n          currency: (currencySetting.currencyCode !== undefined) ? currencySetting.currencyCode : 'USD',\r\n          minimumFractionDigits: (currencySetting.minimumFractionDigits !== undefined) ? currencySetting.minimumFractionDigits : 2,\r\n          maximumFractionDigits: (currencySetting.maximumFractionDigits !== undefined) ? currencySetting.maximumFractionDigits : 2\r\n        }).format((value !== undefined) ? value : 0);\r\n    } else {\r\n      return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format((value !== undefined) ? value : 0);\r\n    }\r\n  }\r\n\r\n  handleClickCell = e => {\r\n    if (this.props.columnDef.disableClick) {\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  getStyle = () => {\r\n    let cellStyle = {};\r\n\r\n    if (typeof this.props.columnDef.cellStyle === 'function') {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle(this.props.value) };\r\n    } else {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle };\r\n    }\r\n\r\n    if (this.props.columnDef.disableClick) {\r\n      cellStyle.cursor = 'default';\r\n    }\r\n\r\n    return { ...this.props.style, ...cellStyle };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { columnDef, rowData, ...cellProps } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        {...cellProps}\r\n        style={this.getStyle()}\r\n        align={['numeric'].indexOf(this.props.columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n        onClick={this.handleClickCell}\r\n      >\r\n        {this.props.children}\r\n        {this.getRenderValue()}\r\n      </TableCell>\r\n    );\r\n  }\r\n}\r\n\r\nMTableCell.defaultProps = {\r\n  columnDef: {},\r\n  value: undefined\r\n};\r\n\r\nMTableCell.propTypes = {\r\n  columnDef: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  rowData: PropTypes.object\r\n};\r\n","import * as React from 'react';\r\nimport { TextField, Checkbox, Select, MenuItem } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormField extends React.Component {\r\n\r\n  renderLookupField() {\r\n    return (\r\n      <Select\r\n        value={this.props.value || ''}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        style={{\r\n          fontSize: 13,\r\n        }}\r\n      >\r\n        {Object.keys(this.props.columnDef.lookup).map(key => (\r\n          <MenuItem key={key} value={key}>{this.props.columnDef.lookup[key]}</MenuItem>)\r\n        )}\r\n      </Select>\r\n    );\r\n\r\n  }\r\n\r\n  renderBooleanField() {\r\n    return (\r\n      <Checkbox\r\n        checked={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.checked)}\r\n        style={{\r\n          paddingLeft: 0,\r\n          paddingTop: 0,\r\n          paddingBottom: 0\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          format=\"dd.MM.yyyy\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <TimePicker\r\n          format=\"HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderDateTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DateTimePicker\r\n          format=\"dd.MM.yyyy HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTextField() {\r\n    return (\r\n      <TextField\r\n        style={this.props.columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={this.props.columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        placeholder={this.props.columnDef.title}\r\n        value={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        InputProps={{\r\n          style: {\r\n            fontSize: 13,\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCurrencyField() {\r\n    return \"ok\";\r\n  }\r\n\r\n  render() {\r\n    let component = \"ok\";\r\n\r\n    if (this.props.columnDef.lookup) {\r\n      component = this.renderLookupField();\r\n    }\r\n    else if (this.props.columnDef.type === \"boolean\") {\r\n      component = this.renderBooleanField();\r\n    }\r\n    else if (this.props.columnDef.type === \"date\") {\r\n      component = this.renderDateField();\r\n    }\r\n    else if (this.props.columnDef.type === \"time\") {\r\n      component = this.renderTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"datetime\") {\r\n      component = this.renderDateTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"currency\") {\r\n      component = this.renderCurrencyField();\r\n    }\r\n    else {\r\n      component = this.renderTextField();\r\n    }\r\n\r\n    return component;\r\n\r\n  }\r\n}\r\n\r\nFormField.propTypes = {\r\n  value: PropTypes.any.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  columnDef: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FormField;","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport FormField from './form/form-field';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableEditRow extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data ? JSON.parse(JSON.stringify(props.data)) : {}\r\n    };\r\n  }\r\n\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.state.data[columnDef.field];\r\n        const style = {};\r\n        if (index === 0) {\r\n          style.paddingLeft = 24 + this.props.level * 20;\r\n        }\r\n        return (\r\n          <TableCell\r\n            key={columnDef.tableData.id}\r\n            padding=\"dense\"\r\n            align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n          >\r\n            <FormField\r\n              key={columnDef.tableData.id}\r\n              columnDef={columnDef}\r\n              value={value}\r\n              onChange={value => {\r\n                const data = { ...this.state.data };\r\n                data[columnDef.field] = value;\r\n                this.setState({ data });\r\n              }} />\r\n          </TableCell>\r\n        );\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {\r\n    const actions = [\r\n      {\r\n        icon: this.props.icons.Check,\r\n        tooltip: 'Save',\r\n        onClick: () => {\r\n          const newData = this.state.data;\r\n          delete newData.tableData;\r\n          this.props.onEditingApproved(this.props.mode, this.state.data, this.props.data);\r\n        }\r\n      },\r\n      {\r\n        icon: this.props.icons.Clear,\r\n        tooltip: 'Cancel',\r\n        onClick: () => {\r\n          this.props.onEditingCanceled(this.props.mode, this.props.data);\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  getStyle() {\r\n    const style = {\r\n      // boxShadow: '1px 1px 1px 1px rgba(0,0,0,0.2)',\r\n      borderBottom: '1px solid red'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    let columns;\r\n    if (this.props.mode === \"add\" || this.props.mode === \"update\") {\r\n      columns = this.renderColumns();\r\n    }\r\n    else {\r\n      const colSpan = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1)).length;\r\n      columns = [\r\n        <TableCell padding=\"none\" key=\"key-selection-cell\" colSpan={colSpan}>\r\n          <Typography variant=\"h6\">\r\n            Are you sure delete this row?\r\n          </Typography>\r\n        </TableCell>\r\n      ];\r\n    }\r\n\r\n\r\n    if (this.props.options.selection) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-selection-cell\" />);\r\n    }\r\n\r\n    if (this.props.options.actionsColumnIndex === -1) {\r\n      columns.push(this.renderActions());\r\n    } else if (this.props.options.actionsColumnIndex >= 0) {\r\n      let endPos = 0;\r\n      if (this.props.options.selection) {\r\n        endPos = 1;\r\n      }\r\n      columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-cell\" />);\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const { \r\n      detailPanel, \r\n      isTreeData, \r\n      onRowClick, \r\n      onRowSelected, \r\n      onTreeExpandChanged, \r\n      onToggleDetailPanel, \r\n      onEditingApproved,\r\n      onEditingCanceled,\r\n      ...rowProps \r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          {...rowProps}\r\n          style={this.getStyle()}\r\n        >\r\n          {columns}\r\n        </TableRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableEditRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  options: {},\r\n  path: []\r\n};\r\n\r\nMTableEditRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  columns: PropTypes.array,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableCell, TableRow, TextField,\r\n  FormControl, Select, Input,\r\n  MenuItem, Checkbox, ListItemText,\r\n  InputAdornment, Icon, Tooltip,\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MTableFilterRow extends React.Component {\r\n  renderLookupFilter = (columnDef) => (\r\n    <FormControl style={{ width: '100%' }}>\r\n      <Select\r\n        multiple\r\n        value={columnDef.tableData.filterValue || []}\r\n        onChange={event => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        input={<Input id=\"select-multiple-checkbox\" />}\r\n        renderValue={selecteds => selecteds.map(selected => columnDef.lookup[selected]).join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {\r\n          Object.keys(columnDef.lookup).map(key => (\r\n            <MenuItem key={key} value={key}>\r\n              <Checkbox checked={columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false} />\r\n              <ListItemText primary={columnDef.lookup[key]} />\r\n            </MenuItem>\r\n          ))\r\n        }\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n\r\n  renderBooleanFilter = (columnDef) => (\r\n    <Checkbox\r\n      indeterminate={columnDef.tableData.filterValue === undefined}\r\n      checked={columnDef.tableData.filterValue === 'checked'}\r\n      onChange={() => {\r\n        let val;\r\n        if (columnDef.tableData.filterValue === undefined) {\r\n          val = 'checked';\r\n        } else if (columnDef.tableData.filterValue === 'checked') {\r\n          val = 'unchecked';\r\n        }\r\n\r\n        this.props.onFilterChanged(columnDef.tableData.id, val);\r\n      }}\r\n    />\r\n  )\r\n\r\n  renderDefaultFilter = (columnDef) => {\r\n    const localization = { ...MTableFilterRow.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TextField\r\n        style={columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        value={columnDef.tableData.filterValue || ''}\r\n        onChange={(event) => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Tooltip title={localization.filterTooltip}>\r\n                <this.props.icons.Filter />\r\n              </Tooltip>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateTypeFilter = (columnDef) => {\r\n    let dateInputElement = null;\r\n    const onDateInputChange = date => this.props.onFilterChanged(columnDef.tableData.id, date);\r\n\r\n    if (columnDef.type === 'date') {\r\n      dateInputElement = (\r\n        <DatePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'datetime') {\r\n      dateInputElement = (\r\n        <DateTimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'time') {\r\n      dateInputElement = (\r\n        <TimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        {dateInputElement}\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  getComponentForColumn(columnDef) {\r\n    if (columnDef.filtering === false) {\r\n      return null;\r\n    }\r\n\r\n    if (columnDef.field) {\r\n      if (columnDef.lookup) {\r\n        return this.renderLookupFilter(columnDef);\r\n      } else if (columnDef.type === 'boolean') {\r\n        return this.renderBooleanFilter(columnDef);\r\n      } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\r\n        return this.renderDateTypeFilter(columnDef);\r\n      } else {\r\n        return this.renderDefaultFilter(columnDef);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map(columnDef => (\r\n        <TableCell key={columnDef.tableData.id}>\r\n          {this.getComponentForColumn(columnDef)}\r\n        </TableCell>\r\n      ));\r\n\r\n    if (this.props.selection) {\r\n      columns.splice(0, 0, (\r\n        <TableCell padding=\"none\" key=\"key-selection-column\">\r\n          <Checkbox onChange={this.props.onFilterSelectionChanged} />\r\n        </TableCell>)\r\n      );\r\n    }\r\n    if (this.props.emptyCell && this.props.hasActions) {\r\n      if (this.props.actionsColumnIndex === -1) {\r\n        columns.push(<TableCell key=\"key-action-column\" />);\r\n      } else {\r\n        let endPos = 0;\r\n        if (this.props.selection) {\r\n          endPos = 1;\r\n        }\r\n        columns.splice(this.props.actionsColumnIndex + endPos, 0, <TableCell key=\"key-action-column\" />);\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-column\" />);\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      columns.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-filter\"}          \r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-filter\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    return (\r\n      <TableRow style={{ height: 10 }}>\r\n        {columns}\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nMTableFilterRow.defaultProps = {\r\n  emptyCell: false,\r\n  columns: [],\r\n  selection: false,\r\n  hasActions: false,\r\n  localization: {\r\n    filterTooltip: 'Filter'\r\n  }\r\n};\r\n\r\nMTableFilterRow.propTypes = {\r\n  emptyCell: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onFilterChanged: PropTypes.func.isRequired,\r\n  selection: PropTypes.bool.isRequired,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  actionsColumnIndex: PropTypes.number,\r\n  hasActions: PropTypes.bool,\r\n  localization: PropTypes.object\r\n};\r\n\r\nexport default MTableFilterRow;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableHead, TableRow, TableCell,\r\n  TableSortLabel, Checkbox, withStyles\r\n} from '@material-ui/core';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableHeader extends React.Component {\r\n  renderHeader() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => (\r\n        <TableCell\r\n          key={columnDef.tableData.id}\r\n          align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n\r\n          style={{ ...this.props.headerStyle, ...columnDef.headerStyle }}\r\n        >\r\n          {(columnDef.sort !== false && columnDef.sorting !== false && this.props.sorting)\r\n            ? <TableSortLabel\r\n              active={this.props.orderBy === columnDef.tableData.id}\r\n              direction={this.props.orderDirection || 'asc'}\r\n              onClick={() => {\r\n                const orderDirection = columnDef.tableData.id !== this.props.orderBy ? 'asc' : this.props.orderDirection === 'asc' ? 'desc' : 'asc';\r\n                this.props.onOrderChange(columnDef.tableData.id, orderDirection);\r\n              }}\r\n            >\r\n            {(this.props.grouping && columnDef.field)\r\n              ? <Draggable\r\n                key={columnDef.tableData.id}\r\n                draggableId={columnDef.tableData.id.toString()}\r\n                isDragDisabled={columnDef.grouping === false}\r\n                index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    // style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                    >\r\n                      {columnDef.title}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n                : columnDef.title\r\n              }\r\n            </TableSortLabel>\r\n            : columnDef.title\r\n          }\r\n        </TableCell>\r\n      ));\r\n    return mapArr;\r\n  }\r\n\r\n  renderActionsHeader() {\r\n    const localization = { ...MTableHeader.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TableCell\r\n        key=\"key-actions-column\"\r\n        padding=\"checkbox\"\r\n        style={{...this.props.headerStyle, textAlign: 'center'}}\r\n      >\r\n        <TableSortLabel>{localization.actions}</TableSortLabel>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionHeader() {\r\n    return (\r\n      <TableCell\r\n        padding=\"none\"\r\n        key=\"key-selection-column\"\r\n        style={this.props.headerStyle}\r\n      >\r\n        <Checkbox\r\n          indeterminate={this.props.selectedCount > 0 && this.props.selectedCount < this.props.dataCount}\r\n          checked={this.props.selectedCount === this.props.dataCount}\r\n          onChange={(event, checked) => this.props.onAllSelected && this.props.onAllSelected(checked)}\r\n        />\r\n      </TableCell>\r\n    );\r\n  }\r\n  render() {\r\n    const headers = this.renderHeader();\r\n    if (this.props.hasSelection && this.props.dataCount) {\r\n      headers.splice(0, 0, this.renderSelectionHeader());\r\n    }\r\n\r\n    if (this.props.showActionsColumn) {\r\n      if (this.props.actionsHeaderIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.hasSelection) {\r\n          endPos = 1;\r\n        }\r\n        headers.splice(this.props.actionsHeaderIndex + endPos, 0, this.renderActionsHeader());\r\n      } else if (this.props.actionsHeaderIndex === -1) {\r\n        headers.push(this.renderActionsHeader());\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key=\"key-detail-panel-column\"\r\n          style={this.props.headerStyle}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-header\"}\r\n          style={this.props.headerStyle}\r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        headers.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-header\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headers}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nMTableHeader.defaultProps = {\r\n  dataCount: 0,\r\n  hasSelection: false,\r\n  headerStyle: {},\r\n  selectedCount: 0,\r\n  sorting: true,\r\n  localization: {\r\n    actions: 'Actions'\r\n  },\r\n  orderBy: undefined,\r\n  orderDirection: 'asc',\r\n  actionsHeaderIndex: 0\r\n};\r\n\r\nMTableHeader.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  dataCount: PropTypes.number,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  hasSelection: PropTypes.bool,\r\n  headerStyle: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  selectedCount: PropTypes.number,\r\n  sorting: PropTypes.bool,\r\n  onAllSelected: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  orderBy: PropTypes.number,\r\n  orderDirection: PropTypes.string,\r\n  actionsHeaderIndex: PropTypes.number,\r\n  showActionsColumn: PropTypes.bool,\r\n};\r\n\r\nexport default MTableHeader;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage, theme } = this.props;\r\n\r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };    \r\n\r\n    return (      \r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.firstTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.firstAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.LastPage /> : <this.props.icons.FirstPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.NextPage /> : <this.props.icons.PreviousPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.PreviousPage /> : <this.props.icons.NextPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.lastTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleLastPageButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.lastAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.FirstPage /> : <this.props.icons.LastPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.direction === 'rtl' ? 0 : theme.spacing.unit * 2.5,\r\n    marginRight: theme.direction === 'rtl' ? theme.spacing.unit * 2.5 : 0,\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    firstTooltip: 'First Page',\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    lastTooltip: 'Last Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, FormControlLabel, Icon, IconButton, InputAdornment, Menu, MenuItem, TextField, Toolbar, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport classNames from 'classnames';\r\nimport { CsvBuilder } from 'filefy';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableToolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsButtonAnchorEl: null,\r\n      exportButtonAnchorEl: null\r\n    };\r\n  }\r\n\r\n  exportCsv = () => {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => {\r\n        return !columnDef.hidden && columnDef.field && columnDef.export !== false; \r\n      });\r\n\r\n    const data = this.props.renderData.map(rowData =>\r\n      columns.map(columnDef => rowData[columnDef.field])\r\n    );\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv')\r\n      .setDelimeter(this.props.exportDelimiter)\r\n      .setColumns(columns.map(columnDef => columnDef.title))\r\n      .addRows(data)\r\n      .exportFile();\r\n\r\n    this.setState({ exportButtonAnchorEl: null });\r\n  }\r\n\r\n  renderSearch() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.search) {\r\n      return (\r\n        <TextField\r\n          className={this.props.classes.searchField}\r\n          value={this.props.searchText}\r\n          onChange={event => this.props.onSearchChanged(event.target.value)}\r\n          color=\"inherit\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Tooltip title={localization.searchTooltip}>\r\n                  <this.props.icons.Search color=\"inherit\" fontSize=\"small\" />\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  disabled={!this.props.searchText}\r\n                  onClick={() => this.props.onSearchChanged(\"\")}\r\n                >\r\n                  <this.props.icons.ResetSearch color=\"inherit\" fontSize=\"small\"/>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            style: this.props.searchFieldStyle\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderDefaultActions() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <div>\r\n        {this.renderSearch()}\r\n        {this.props.columnsButton &&\r\n          <span>\r\n            <Tooltip title={localization.showColumnsTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ columnsButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.showColumnsAriaLabel}>\r\n\r\n                <this.props.icons.ViewColumn />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.columnsButtonAnchorEl}\r\n              open={Boolean(this.state.columnsButtonAnchorEl)}\r\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}>\r\n              <MenuItem key={\"text\"} disabled style={{ opacity: 1, fontWeight: 600, fontSize: 12 }}>\r\n                {localization.addRemoveColumns}\r\n              </MenuItem>\r\n              {\r\n                this.props.columns.map((col, index) => {\r\n                  return (\r\n                    <MenuItem key={col.tableData.id} disabled={col.removable === false}>\r\n                      <FormControlLabel\r\n                        label={col.title}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={!col.hidden}\r\n                            onChange={(event, checked) => {\r\n                              this.props.onColumnsChanged(col.tableData.id, !checked);\r\n                            }\r\n                            } />\r\n                        }\r\n                      />\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              }\r\n            </Menu>\r\n          </span>\r\n        }\r\n        {this.props.exportButton &&\r\n          <span>\r\n            <Tooltip title={localization.exportTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ exportButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.exportAriaLabel}>\r\n                <this.props.icons.Export />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.exportButtonAnchorEl}\r\n              open={Boolean(this.state.exportButtonAnchorEl)}\r\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\r\n            >\r\n              <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\r\n                {localization.exportName}\r\n              </MenuItem>\r\n            </Menu>\r\n          </span>\r\n\r\n        }\r\n        <this.props.components.Actions actions={this.props.actions && this.props.actions.filter(a => a.isFreeAction)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelectedActions() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderSearch()}\r\n        <this.props.components.Actions actions={this.props.actions.filter(a => !a.isFreeAction)} data={this.props.selectedRows} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderActions() {\r\n    return (\r\n      <div>\r\n        {this.props.selectedRows && this.props.selectedRows.length > 0\r\n          ? this.renderSelectedActions()\r\n          : this.renderDefaultActions()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    const title = this.props.showTitle ? (this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.title) : null;\r\n    return (\r\n      <Toolbar className={classNames(classes.root, { [classes.highlight]: this.props.selectedRows && this.props.selectedRows.length > 0 })}>\r\n        {title && <div className={classes.title}>\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n        </div>}\r\n        {this.props.toolbarButtonAlignment === 'right' && <div className={classes.spacer} />}\r\n        <div className={classes.actions}>\r\n          {this.renderActions()}\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nMTableToolbar.defaultProps = {\r\n  actions: [],\r\n  columns: [],\r\n  columnsButton: false,\r\n  localization: {\r\n    addRemoveColumns: 'Add or remove columns',\r\n    nRowsSelected: '{0} row(s) selected',\r\n    showColumnsTitle: 'Show Columns',\r\n    showColumnsAriaLabel: 'Show Columns',\r\n    exportTitle: 'Export',\r\n    exportAriaLabel: 'Export',\r\n    exportName: 'Export as CSV',\r\n    searchTooltip: 'Search'\r\n  },\r\n  search: true,\r\n  showTitle: true,\r\n  toolbarButtonAlignment: 'right',\r\n  searchText: '',\r\n  selectedRows: [],\r\n  title: 'No Title!'\r\n};\r\n\r\nMTableToolbar.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.array,\r\n  columnsButton: PropTypes.bool,\r\n  localization: PropTypes.object.isRequired,\r\n  onColumnsChanged: PropTypes.func.isRequired,\r\n  onSearchChanged: PropTypes.func.isRequired,\r\n  search: PropTypes.bool.isRequired,\r\n  searchFieldStyle: PropTypes.object,\r\n  searchText: PropTypes.string.isRequired,\r\n  selectedRows: PropTypes.array,\r\n  title: PropTypes.string.isRequired,\r\n  showTitle: PropTypes.bool.isRequired,\r\n  toolbarButtonAlignment: PropTypes.string.isRequired,\r\n  renderData: PropTypes.array,\r\n  exportButton: PropTypes.bool,\r\n  exportDelimiter: PropTypes.string,\r\n  exportFileName: PropTypes.string,\r\n  classes: PropTypes.object\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark\r\n      },\r\n  spacer: {\r\n    flex: '1 1 10%'\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto'\r\n  },\r\n  searchField: {\r\n    paddingLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableToolbar);\r\n","import formatDate from 'date-fns/format';\r\n\r\nexport default class DataManager {\r\n  applyFilters = false;\r\n  applySearch = false;\r\n  currentPage = 0;\r\n  filterSelectionChecked = false;\r\n  orderBy = -1;\r\n  orderDirection = '';\r\n  pageSize = 5;\r\n  paging = true;\r\n  parentFunc = null;\r\n  searchText = '';\r\n  selectedCount = 0;\r\n  detailPanelType = 'multiple'\r\n  lastDetailPanelRow = undefined;\r\n  lastEditingRow = undefined;\r\n\r\n  data = [];\r\n  columns = [];\r\n\r\n  filteredData = [];\r\n  searchedData = [];\r\n  groupedData = [];\r\n  treefiedData = [];\r\n  sortedData = [];\r\n  pagedData = [];\r\n  renderData = [];\r\n\r\n  filtered = false;\r\n  searched = false;\r\n  grouped = false;\r\n  treefied = false;\r\n  sorted = false;\r\n  paged = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data.map((row, index) => {\r\n      row.tableData = { ...row.tableData, id: index };\r\n      if (row.tableData.checked) {\r\n        this.selectedCount++;\r\n      }\r\n      return row;\r\n    });\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  setColumns(columns) {\r\n    this.columns = columns.map((columnDef, index) => {\r\n      columnDef.tableData = {\r\n        filterValue: columnDef.defaultFilter,\r\n        groupOrder: columnDef.defaultGroupOrder,\r\n        groupSort: columnDef.defaultGroupSort || 'asc',\r\n        ...columnDef.tableData,\r\n        id: index\r\n      };\r\n      return columnDef;\r\n    });\r\n  }\r\n\r\n  changeApplySearch(applySearch) {\r\n    this.applySearch = applySearch;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeApplyFilters(applyFilters) {\r\n    this.applyFilters = applyFilters;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changePaging(paging) {\r\n    this.paging = paging;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeCurrentPage(currentPage) {\r\n    this.currentPage = currentPage;\r\n    this.paged = false;\r\n  }\r\n\r\n  changePageSize(pageSize) {\r\n    this.pageSize = pageSize;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeParentFunc(parentFunc) {\r\n    this.parentFunc = parentFunc;\r\n  }\r\n\r\n  changeFilterValue(columnId, value) {\r\n    this.columns[columnId].tableData.filterValue = value;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeFilterSelectionChecked(checked) {\r\n    this.filterSelectionChecked = checked;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeRowSelected(checked, path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.checked = checked;\r\n    this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeDetailPanelVisibility(path, render) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n\r\n    if (rowData.tableData.showDetailPanel === render) {\r\n      rowData.tableData.showDetailPanel = undefined;\r\n    }\r\n    else {\r\n      rowData.tableData.showDetailPanel = render;\r\n    }\r\n\r\n    if (this.detailPanelType === 'single' && this.lastDetailPanelRow && this.lastDetailPanelRow != rowData) {\r\n      this.lastDetailPanelRow.tableData.showDetailPanel = undefined;\r\n    }\r\n\r\n    this.lastDetailPanelRow = rowData;\r\n  }\r\n\r\n  changeGroupExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.isExpanded = !rowData.isExpanded;\r\n  }\r\n\r\n  changeSearchText(searchText) {\r\n    this.searchText = searchText;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeRowEditing(rowData, mode) {\r\n    if (rowData) {\r\n      rowData.tableData.editing = mode;\r\n\r\n      if (this.lastEditingRow && this.lastEditingRow != rowData) {\r\n        this.lastEditingRow.tableData.editing = undefined;\r\n      }\r\n\r\n      if (mode) {\r\n        this.lastEditingRow = rowData;\r\n      }\r\n      else {\r\n        this.lastEditingRow = undefined;\r\n      }\r\n    }\r\n    else if (this.lastEditingRow) {\r\n      this.lastEditingRow.tableData.editing = undefined;\r\n      this.lastEditingRow = undefined;\r\n    }\r\n  }\r\n\r\n  changeAllSelected(checked) {\r\n    let selectedCount = 0;\r\n    if (this.isDataType(\"group\")) {\r\n      const setCheck = (data) => {\r\n        data.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            setCheck(element.groups);\r\n          }\r\n          else {\r\n            element.data.forEach(d => {\r\n              d.tableData.checked = checked;\r\n              selectedCount++;\r\n            });\r\n          }\r\n        });\r\n      };\r\n\r\n      setCheck(this.groupedData);\r\n    }\r\n    else {\r\n      this.searchedData.map(row => {\r\n        row.tableData.checked = checked;\r\n        return row;\r\n      });\r\n      selectedCount = this.searchedData.length;\r\n    }\r\n\r\n    this.selectedCount = checked ? selectedCount : 0;\r\n  }\r\n\r\n  changeOrder(orderBy, orderDirection) {\r\n    this.orderBy = orderBy;\r\n    this.orderDirection = orderDirection;\r\n    this.currentPage = 0;\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeGroupOrder(columnId) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n\r\n    if (column.tableData.groupSort === 'asc') {\r\n      column.tableData.groupSort = 'desc';\r\n    }\r\n    else {\r\n      column.tableData.groupSort = 'asc';\r\n    }\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeColumnHidden(columnId, hidden) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n    column.hidden = hidden;\r\n  }\r\n\r\n  changeTreeExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.isTreeExpanded = !rowData.tableData.isTreeExpanded;\r\n  }\r\n\r\n  changeDetailPanelType(type) {\r\n    this.detailPanelType = type;\r\n  }\r\n\r\n  changeByDrag(result) {\r\n    let start = 0;\r\n\r\n    let groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n\r\n    if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"groups\") {\r\n      start = Math.min(result.destination.index, result.source.index);\r\n      const end = Math.max(result.destination.index, result.source.index);\r\n\r\n      groups = groups.slice(start, end + 1);\r\n\r\n      if (result.destination.index < result.source.index) {\r\n        // Take last and add as first\r\n        const last = groups.pop();\r\n        groups.unshift(last);\r\n      }\r\n      else {\r\n        // Take first and add as last\r\n        const last = groups.shift();\r\n        groups.push(last);\r\n      }\r\n    }\r\n    else if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"headers\") {\r\n      const newGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      groups.splice(result.destination.index, 0, newGroup);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"groups\") {\r\n      const removeGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      removeGroup.tableData.groupOrder = undefined;\r\n      groups.splice(result.source.index, 1);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"headers\") {\r\n      // Column reordering\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < groups.length; i++) {\r\n      groups[i].tableData.groupOrder = start + i;\r\n    }\r\n\r\n    this.sorted = this.grouped = false;\r\n  }\r\n\r\n  findDataByPath = (renderData, path) => {\r\n    if (this.isDataType(\"tree\")) {\r\n      const node = path.reduce((result, current) => {\r\n        return result.tableData.childRows[current];\r\n      }, { tableData: { childRows: renderData } });\r\n\r\n      return node;\r\n    }\r\n    else {\r\n      const data = { groups: renderData };\r\n\r\n      const node = path.reduce((result, current) => {\r\n        if (result.groups.length > 0) {\r\n          return result.groups[current];\r\n        }\r\n        else if (result.data) {\r\n          return result.data[current];\r\n        }\r\n        else {\r\n          return undefined;\r\n        }\r\n      }, data);\r\n      return node;\r\n    }\r\n  }\r\n\r\n  findGroupByGroupPath(renderData, path) {\r\n    const data = { groups: renderData };\r\n\r\n    const node = path.reduce((result, current) => {\r\n      if (!result) {\r\n        return undefined;\r\n      }\r\n\r\n      const group = result.groups.find(a => a.value === current);\r\n      return group;\r\n    }, data);\r\n    return node;\r\n  }\r\n\r\n  getFieldValue = (rowData, columnDef) => {\r\n    let value = (typeof rowData[columnDef.field] !== 'undefined' ? rowData[columnDef.field] : this.byString(rowData, columnDef.field));\r\n    if (columnDef.lookup) {\r\n      value = columnDef.lookup[value];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  byString(o, s) {\r\n    if (!s) {\r\n      return;\r\n    }\r\n\r\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n    s = s.replace(/^\\./, '');           // strip a leading dot\r\n    var a = s.split('.');\r\n    for (var i = 0, n = a.length; i < n; ++i) {\r\n      var x = a[i];\r\n      if (o && x in o) {\r\n        o = o[x];\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    return o;\r\n  }\r\n\r\n  isDataType(type) {\r\n    let dataType = \"normal\";\r\n\r\n    if (this.parentFunc) {\r\n      dataType = \"tree\";\r\n    }\r\n    else if (this.columns.find(a => a.tableData.groupOrder > -1)) {\r\n      dataType = \"group\";\r\n    }\r\n\r\n    return type === dataType;\r\n  }\r\n\r\n  sort(a, b, type) {\r\n    if (type === 'numeric') {\r\n      return a - b;\r\n    } else {\r\n      return a < b ? -1 : a > b ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  sortList(list) {\r\n    const columnDef = this.columns.find(_ => _.tableData.id === this.orderBy);\r\n    let result = list;\r\n\r\n    if (columnDef.customSort) {\r\n      if (this.orderDirection === 'desc') {\r\n        result = list.sort((a, b) => columnDef.customSort(b, a, 'row'));\r\n      }\r\n      else {\r\n        result = list.sort((a, b) => columnDef.customSort(a, b, 'row'));\r\n      }\r\n    }\r\n    else {\r\n      result = list.sort(\r\n        this.orderDirection === 'desc'\r\n          ? (a, b) => this.sort(this.getFieldValue(b, columnDef), this.getFieldValue(a, columnDef), columnDef.type)\r\n          : (a, b) => this.sort(this.getFieldValue(a, columnDef), this.getFieldValue(b, columnDef), columnDef.type)\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getRenderState = () => {\r\n    if (this.filtered === false) {\r\n      this.filterData();\r\n    }\r\n\r\n    if (this.searched === false) {\r\n      this.searchData();\r\n    }\r\n\r\n    if (this.grouped === false && this.isDataType(\"group\")) {\r\n      this.groupData();\r\n    }\r\n\r\n    if (this.treefied === false && this.isDataType(\"tree\")) {\r\n      this.treefyData();\r\n    }\r\n\r\n    if (this.sorted === false) {\r\n      this.sortData();\r\n    }\r\n\r\n    if (this.paged === false) {\r\n      this.pageData();\r\n    }\r\n\r\n    return {\r\n      columns: this.columns,\r\n      currentPage: this.currentPage,\r\n      data: this.sortedData,\r\n      lastEditingRow: this.lastEditingRow,\r\n      orderBy: this.orderBy,\r\n      orderDirection: this.orderDirection,\r\n      originalData: this.data,\r\n      pageSize: this.pageSize,\r\n      renderData: this.pagedData,\r\n      searchText: this.searchText,\r\n      selectedCount: this.selectedCount\r\n    };\r\n  }\r\n\r\n  // =====================================================================================================\r\n  // DATA MANUPULATIONS\r\n  // =====================================================================================================\r\n\r\n  filterData = () => {\r\n    this.searched = this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.filteredData = [...this.data];\r\n\r\n    // if (this.filterSelectionChecked) {\r\n    //   this.filterData = this.filterData.filter(row => {\r\n    //     return row.tableData.checked;\r\n    //   });\r\n    // }\r\n\r\n    if (this.applyFilters) {\r\n      this.columns.filter(columnDef => columnDef.tableData.filterValue).forEach(columnDef => {\r\n        const { lookup, type, tableData, field } = columnDef;\r\n        if (columnDef.customFilterAndSearch) {\r\n          this.filteredData = this.filteredData.filter(row => !!columnDef.customFilterAndSearch(tableData.filterValue, row, columnDef));\r\n        }\r\n        else {\r\n          if (lookup) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return !tableData.filterValue ||\r\n                tableData.filterValue.length === 0 ||\r\n                tableData.filterValue.indexOf(row[field] && row[field].toString()) > -1;\r\n            });\r\n          } else if (type === 'numeric') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return (row[field] + \"\") === tableData.filterValue;\r\n            });\r\n          } else if (type === 'boolean' && tableData.filterValue) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return (row[field] && tableData.filterValue === 'checked') ||\r\n                (!row[field] && tableData.filterValue === 'unchecked');\r\n            });\r\n          } else if (['date', 'datetime'].includes(type)) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const currentDate = row[field] ? new Date(row[field]) : null;\r\n\r\n              if (currentDate && currentDate.toString() !== 'Invalid Date') {\r\n                const selectedDate = tableData.filterValue;\r\n                let currentDateToCompare = '';\r\n                let selectedDateToCompare = '';\r\n\r\n                if (type === 'date') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy');\r\n                } else if (type === 'datetime') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy - HH:mm');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy - HH:mm');\r\n                }\r\n\r\n                return currentDateToCompare === selectedDateToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else if (type === 'time') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const currentHour = row[field] || null;\r\n\r\n              if (currentHour) {\r\n                const selectedHour = tableData.filterValue;\r\n                const currentHourToCompare = formatDate(selectedHour, 'HH:mm');\r\n\r\n                return currentHour === currentHourToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return row[field] && row[field].toString().toUpperCase().includes(tableData.filterValue.toUpperCase());\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.filtered = true;\r\n  }\r\n\r\n  searchData = () => {\r\n    this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.searchedData = [...this.filteredData];\r\n\r\n    if (this.searchText && this.applySearch) {\r\n      this.searchedData = this.searchedData.filter(row => {\r\n        return this.columns\r\n          .filter(columnDef => { return columnDef.searchable === undefined ? !columnDef.hidden : columnDef.searchable })\r\n          .some(columnDef => {\r\n            if (columnDef.customFilterAndSearch) {\r\n              return !!columnDef.customFilterAndSearch(this.searchText, row, columnDef);\r\n            }\r\n            else if (columnDef.field) {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              if (value) {\r\n                return value.toString().toUpperCase().includes(this.searchText.toUpperCase());\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    this.searched = true;\r\n  }\r\n\r\n  groupData() {\r\n    this.sorted = this.paged = false;\r\n\r\n    const tmpData = [...this.searchedData];\r\n\r\n    const groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    const subData = tmpData.reduce((result, current) => {\r\n\r\n      let object = result;\r\n      object = groups.reduce((o, colDef) => {\r\n        const value = current[colDef.field] || this.byString(current, colDef.field);\r\n        let group = o.groups.find(g => g.value === value);\r\n        if (!group) {\r\n          const path = [...(o.path || []), value];\r\n          let oldGroup = this.findGroupByGroupPath(this.groupedData, path) || {};          \r\n\r\n          group = { value, groups: [], data: [], isExpanded: oldGroup.isExpanded, path: path };\r\n          o.groups.push(group);\r\n        }\r\n        return group;\r\n      }, object);\r\n\r\n      object.data.push(current);\r\n\r\n      return result;\r\n    }, { groups: [] });\r\n\r\n    this.groupedData = subData.groups;\r\n    this.grouped = true;\r\n  }\r\n\r\n  treefyData() {\r\n    this.sorted = this.paged = false;\r\n    this.data.forEach(a => a.tableData.childRows = null);\r\n    this.treefiedData = [];\r\n\r\n    const addRow = (rowData) => {\r\n      let parent = this.parentFunc(rowData, this.data);\r\n      if (parent) {\r\n        parent.tableData.childRows = parent.tableData.childRows || [];\r\n        parent.tableData.isTreeExpanded = false;\r\n        !parent.tableData.childRows.includes(rowData) && parent.tableData.childRows.push(rowData);\r\n\r\n        addRow(parent);\r\n      }\r\n      else {\r\n        !this.treefiedData.includes(rowData) && this.treefiedData.push(rowData);\r\n      }\r\n    };\r\n\r\n    this.searchedData.forEach(rowData => {\r\n      addRow(rowData);\r\n    });\r\n\r\n    this.treefied = true;\r\n  }\r\n\r\n  sortData() {\r\n    this.paged = false;\r\n\r\n    if (this.isDataType(\"group\")) {\r\n      this.sortedData = [...this.groupedData];\r\n\r\n      const groups = this.columns\r\n        .filter(col => col.tableData.groupOrder > -1)\r\n        .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n      const sortGroups = (list, columnDef) => {\r\n        if (columnDef.customSort) {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => columnDef.customSort(b.value, a.value, 'group')\r\n              : (a, b) => columnDef.customSort(a.value, b.value, 'group')\r\n          );\r\n        }\r\n        else {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => this.sort(b.value, a.value, columnDef.type)\r\n              : (a, b) => this.sort(a.value, b.value, columnDef.type)\r\n          );\r\n        }\r\n      };\r\n\r\n      this.sortedData = sortGroups(this.sortedData, groups[0]);\r\n\r\n      const sortGroupData = (list, level) => {\r\n        list.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            const column = groups[level];\r\n            element.groups = sortGroups(element.groups, column);\r\n            sortGroupData(element.groups, level + 1);\r\n          }\r\n          else {\r\n            if (this.orderBy >= 0 && this.orderDirection) {\r\n              element.data = this.sortList(element.data);\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      sortGroupData(this.sortedData, 1);\r\n    }\r\n    else if (this.isDataType(\"tree\")) {\r\n      this.sortedData = [...this.treefiedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n\r\n        const sortTree = (list) => {\r\n          list.forEach(item => {\r\n            if (item.tableData.childRows) {\r\n              item.tableData.childRows = this.sortList(item.tableData.childRows);\r\n              sortTree(item.tableData.childRows);\r\n            }\r\n          });\r\n        };\r\n\r\n        sortTree(this.sortedData);\r\n      }\r\n    }\r\n    else if (this.isDataType(\"normal\")) {\r\n      this.sortedData = [...this.searchedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n      }\r\n    }\r\n\r\n    this.sorted = true;\r\n  }\r\n\r\n  pageData() {\r\n    this.pagedData = [...this.sortedData];\r\n\r\n    if (this.paging) {\r\n      const startIndex = this.currentPage * this.pageSize;\r\n      const endIndex = startIndex + this.pageSize;\r\n\r\n      this.pagedData = this.pagedData.slice(startIndex, endIndex);\r\n    }\r\n\r\n    this.paged = true;\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\nimport { Icon, Paper, Table, TableFooter, TablePagination, TableRow, CircularProgress, LinearProgress, withStyles } from '@material-ui/core';\r\nimport DoubleScrollbar from \"react-double-scrollbar\";\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport MTableActions from './m-table-actions';\r\nimport MTableBody from './m-table-body';\r\nimport MTableBodyRow from './m-table-body-row';\r\nimport MTableGroupbar from './m-table-groupbar';\r\nimport MTableGroupRow from './m-table-group-row';\r\nimport MTableCell from './m-table-cell';\r\nimport MTableEditRow from './m-table-edit-row';\r\nimport MTableFilterRow from './m-table-filter-row';\r\nimport MTableHeader from './m-table-header';\r\nimport MTablePagination from './m-table-pagination';\r\nimport MTableToolbar from './m-table-toolbar';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DataManager from './utils/data-manager';\r\nimport { debounce } from 'debounce';\r\n\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MaterialTable extends React.Component {\r\n  dataManager = new DataManager();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const calculatedProps = this.getProps(props);\r\n    this.setDataManagerFields(calculatedProps, true);\r\n\r\n    this.state = {\r\n      data: [],\r\n      ...this.dataManager.getRenderState(),\r\n      query: {\r\n        filters: [],\r\n        orderBy: null,\r\n        orderDirection: 'asc',\r\n        page: 0,\r\n        pageSize: calculatedProps.options.pageSize,\r\n        search: '',\r\n\r\n        totalCount: 0\r\n      },\r\n      showAddRow: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(this.dataManager.getRenderState(), () => {\r\n      if (this.isRemoteData()) {\r\n        this.onQueryChange(this.state.query);\r\n      }\r\n    });\r\n  }\r\n\r\n  setDataManagerFields(props, isInit) {\r\n    let defaultSortColumnIndex = -1;\r\n    let defaultSortDirection = '';\r\n    if (props) {\r\n      defaultSortColumnIndex = props.columns.findIndex(a => a.defaultSort);\r\n      defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : '';\r\n    }\r\n\r\n    this.dataManager.setColumns(props.columns);\r\n\r\n    if (this.isRemoteData()) {\r\n      this.dataManager.changeApplySearch(false);\r\n      this.dataManager.changeApplyFilters(false);\r\n    }\r\n    else {\r\n      this.dataManager.changeApplySearch(true);\r\n      this.dataManager.changeApplyFilters(true);\r\n      this.dataManager.setData(props.data);\r\n    }\r\n\r\n    isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);\r\n    isInit && this.dataManager.changePageSize(props.options.pageSize);\r\n    isInit && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);\r\n    isInit && this.dataManager.changePaging(props.options.paging);\r\n    isInit && this.dataManager.changeParentFunc(props.parentChildData);\r\n    this.dataManager.changeDetailPanelType(props.options.detailPanelType);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const props = this.getProps(nextProps);\r\n    this.setDataManagerFields(props);\r\n    this.setState(this.dataManager.getRenderState());\r\n  }\r\n\r\n  getProps(props) {\r\n    const calculatedProps = { ...(props || this.props) };\r\n\r\n    calculatedProps.actions = [...(calculatedProps.actions || [])];\r\n    if (calculatedProps.editable) {\r\n      if (calculatedProps.editable.onRowAdd) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Add,\r\n          tooltip: 'Add',\r\n          isFreeAction: true,\r\n          onClick: () => {\r\n            this.dataManager.changeRowEditing();\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: !this.state.showAddRow\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowUpdate) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Edit,\r\n          tooltip: 'Edit',\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"update\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowDelete) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Delete,\r\n          tooltip: 'Delete',\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"delete\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    calculatedProps.components = { ...MaterialTable.defaultProps.components, ...calculatedProps.components };\r\n    calculatedProps.icons = { ...MaterialTable.defaultProps.icons, ...calculatedProps.icons };\r\n    calculatedProps.options = { ...MaterialTable.defaultProps.options, ...calculatedProps.options };\r\n\r\n    return calculatedProps;\r\n  }\r\n\r\n  onSelectionChange = () => {\r\n    if (this.props.onSelectionChange) {\r\n      const selectedRows = this.state.data.filter(row => row.tableData.checked);\r\n      this.props.onSelectionChange(selectedRows);\r\n    }\r\n  }\r\n\r\n  onChangePage = (...args) => {\r\n    this.props.onChangePage && this.props.onChangePage(...args);\r\n  }\r\n\r\n  onChangeRowsPerPage = (...args) => {\r\n    this.props.onChangeRowsPerPage && this.props.onChangeRowsPerPage(...args);\r\n  }\r\n\r\n  onOrderChange = (...args) => {\r\n    this.props.onOrderChange && this.props.onOrderChange(...args);\r\n  }\r\n\r\n  isRemoteData = () => !Array.isArray(this.props.data)\r\n\r\n  onQueryChange = (query) => {\r\n    this.setState({ isLoading: true }, () => {\r\n      this.props.data(query).then((result) => {\r\n        query.totalCount = result.totalCount;\r\n        query.page = result.page;\r\n        this.dataManager.setData(result.data);\r\n        this.setState({\r\n          isLoading: false,\r\n          ...this.dataManager.getRenderState(),\r\n          query\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearchChange = debounce(() => {\r\n    this.dataManager.changeSearchText(this.state.searchText);\r\n\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.page = 0;\r\n      query.search = this.state.searchText;\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  onFilterChange = debounce(() => {\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.filters = this.state.columns\r\n        .filter(a => a.tableData.filterValue)\r\n        .map(a => ({\r\n          column: a,\r\n          operator: \"=\",\r\n          value: a.tableData.filterValue\r\n        }));\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  renderFooter() {\r\n    const props = this.getProps();\r\n    if (props.options.paging) {\r\n      const localization = { ...MaterialTable.defaultProps.localization.pagination, ...this.props.localization.pagination };\r\n      return (\r\n        <Table>\r\n          <TableFooter style={{ display: 'grid' }}>\r\n            <TableRow>\r\n              <props.components.Pagination\r\n                classes={{\r\n                  toolbar: props.classes.paginationToolbar\r\n                }}\r\n                style={{ float: props.theme.direction === \"rtl\" ? \"left\" : \"right\", overflowX: 'auto' }}\r\n                colSpan={3}\r\n                count={this.isRemoteData() ? this.state.query.totalCount : this.state.data.length}\r\n                icons={props.icons}\r\n                rowsPerPage={this.state.pageSize}\r\n                rowsPerPageOptions={props.options.pageSizeOptions}\r\n                page={this.isRemoteData() ? this.state.query.page : this.state.currentPage}\r\n                onChangePage={(event, page) => {\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.page = page;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(page);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangePage(page);\r\n                    });\r\n                  }\r\n                }}\r\n                onChangeRowsPerPage={(event) => {\r\n                  this.dataManager.changePageSize(event.target.value);\r\n\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.pageSize = event.target.value;\r\n                    query.page = 0;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(0);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangeRowsPerPage(event.target.value);\r\n                    });\r\n                  }\r\n                }}\r\n                ActionsComponent={(subProps) => <MTablePagination {...subProps} icons={props.icons} localization={localization} />}\r\n                labelDisplayedRows={(row) => localization.labelDisplayedRows.replace('{from}', row.from).replace('{to}', row.to).replace('{count}', row.count)}\r\n                labelRowsPerPage={localization.labelRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.getProps();\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={result => {\r\n        this.dataManager.changeByDrag(result);\r\n        this.setState(this.dataManager.getRenderState());\r\n      }}>\r\n        <props.components.Container style={{ position: 'relative' }}>\r\n          {props.options.toolbar &&\r\n            <props.components.Toolbar\r\n              actions={props.actions}\r\n              components={props.components}\r\n              selectedRows={this.state.selectedCount > 0 ? this.state.originalData.filter(a => { return a.tableData.checked }) : []}\r\n              columns={this.state.columns}\r\n              columnsButton={props.options.columnsButton}\r\n              icons={props.icons}\r\n              exportButton={props.options.exportButton}\r\n              exportDelimiter={props.options.exportDelimiter}\r\n              exportFileName={props.options.exportFileName}\r\n              renderData={this.state.renderData}\r\n              search={props.options.search}\r\n              showTitle={props.options.showTitle}\r\n              toolbarButtonAlignment={props.options.toolbarButtonAlignment}\r\n              searchText={this.state.searchText}\r\n              searchFieldStyle={props.options.searchFieldStyle}\r\n              title={props.title}\r\n              onSearchChanged={searchText => this.setState({ searchText }, this.onSearchChange)}\r\n              onColumnsChanged={(columnId, hidden) => {\r\n                this.dataManager.changeColumnHidden(columnId, hidden);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              localization={{ ...MaterialTable.defaultProps.localization.toolbar, ...this.props.localization.toolbar }}\r\n            />\r\n          }\r\n          {props.options.grouping &&\r\n            <props.components.Groupbar\r\n              icons={props.icons}\r\n              localization={{ ...MaterialTable.defaultProps.localization.grouping, ...props.localization.grouping }}\r\n              groupColumns={this.state.columns\r\n                .filter(col => col.tableData.groupOrder > -1)\r\n                .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder)\r\n              }\r\n              onSortChanged={(groupedColumn) => {\r\n                this.dataManager.changeGroupOrder(groupedColumn.tableData.id);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              onGroupRemoved={(groupedColumn, index) => {\r\n                const result = {\r\n                  combine: null,\r\n                  destination: { droppableId: \"headers\", index: 0 },\r\n                  draggableId: groupedColumn.tableData.id,\r\n                  mode: \"FLUID\",\r\n                  reason: \"DROP\",\r\n                  source: { index, droppableId: \"groups\" },\r\n                  type: \"DEFAULT\"\r\n                };\r\n                this.dataManager.changeByDrag(result);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n            />\r\n          }\r\n          <ScrollBar double={props.options.doubleHorizontalScroll}>\r\n            <Droppable droppableId=\"headers\" direction=\"horizontal\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                //style={this.getListStyle(snapshot.isDraggingOver)}\r\n                >\r\n                  <Table>\r\n                    {props.options.header &&\r\n                      <props.components.Header\r\n                        localization={{ ...MaterialTable.defaultProps.localization.header, ...this.props.localization.header }}\r\n                        columns={this.state.columns}\r\n                        hasSelection={props.options.selection}\r\n                        headerStyle={props.options.headerStyle}\r\n                        selectedCount={this.state.selectedCount}\r\n                        dataCount={this.state.data.length}\r\n                        hasDetailPanel={!!props.detailPanel}\r\n                        showActionsColumn={props.actions && props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0}\r\n                        orderBy={this.state.orderBy}\r\n                        orderDirection={this.state.orderDirection}\r\n                        onAllSelected={(checked) => {\r\n                          this.dataManager.changeAllSelected(checked);\r\n                          this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                        }}\r\n                        onOrderChange={(orderBy, orderDirection) => {\r\n                          this.dataManager.changeOrder(orderBy, orderDirection);\r\n\r\n                          if (this.isRemoteData()) {\r\n                            const query = { ...this.state.query };\r\n                            query.page = 0;\r\n                            query.orderBy = this.state.columns.find(a => a.tableData.id === orderBy);\r\n                            query.orderDirection = orderDirection;\r\n                            this.onQueryChange(query);\r\n                          }\r\n                          else {\r\n                            this.setState(this.dataManager.getRenderState(), () => {\r\n                              this.onOrderChange(orderBy, orderDirection);\r\n                            });\r\n                          }\r\n                        }}\r\n                        actionsHeaderIndex={props.options.actionsColumnIndex}\r\n                        sorting={props.options.sorting}\r\n                        grouping={props.options.grouping}\r\n                        isTreeData={this.props.parentChildData !== undefined}\r\n                      />\r\n                    }\r\n                    <props.components.Body\r\n                      actions={props.actions}\r\n                      components={props.components}\r\n                      icons={props.icons}\r\n                      renderData={this.state.renderData}\r\n                      currentPage={this.state.currentPage}\r\n                      pageSize={this.state.pageSize}\r\n                      columns={this.state.columns}\r\n                      detailPanel={props.detailPanel}\r\n                      options={props.options}\r\n                      getFieldValue={this.dataManager.getFieldValue}\r\n                      isTreeData={this.props.parentChildData !== undefined}\r\n                      onFilterChanged={(columnId, value) => {\r\n                        this.dataManager.changeFilterValue(columnId, value);\r\n                        this.setState({}, () => this.onFilterChange());\r\n\r\n                      }}\r\n                      onFilterSelectionChanged={(event) => {\r\n                        this.dataManager.changeFilterSelectionChecked(event.target.checked);\r\n                        this.setState(this.dataManager.getRenderState());\r\n                      }}\r\n                      onRowSelected={(event, path) => {\r\n                        this.dataManager.changeRowSelected(event.target.checked, path);\r\n                        this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                      }}\r\n                      onToggleDetailPanel={(path, render) => {\r\n                        this.dataManager.changeDetailPanelVisibility(path, render);\r\n                        this.setState(this.dataManager.getRenderState());\r\n                      }}\r\n                      onGroupExpandChanged={(path) => {\r\n                        this.dataManager.changeGroupExpand(path);\r\n                        this.setState(this.dataManager.getRenderState());\r\n                      }}\r\n                      onTreeExpandChanged={(path) => {\r\n                        this.dataManager.changeTreeExpand(path);\r\n                        this.setState(this.dataManager.getRenderState());\r\n                      }}\r\n                      onEditingCanceled={(mode, rowData) => {\r\n                        if (mode === \"add\") {\r\n                          this.setState({ showAddRow: false });\r\n                        }\r\n                        else if (mode === \"update\" || mode === \"delete\") {\r\n                          this.dataManager.changeRowEditing(rowData);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }\r\n                      }}\r\n                      onEditingApproved={(mode, newData, oldData) => {\r\n                        if (mode === \"add\") {\r\n                          this.setState({ isLoading: true }, () => {\r\n                            this.props.editable.onRowAdd(newData)\r\n                              .then(result => {\r\n                                this.setState({ isLoading: false, showAddRow: false }, () => {\r\n                                  if (this.isRemoteData()) {\r\n                                    this.onQueryChange(this.state.query);\r\n                                  }\r\n                                });\r\n                              })\r\n                              .catch(reason => {\r\n                                this.setState({ isLoading: false });\r\n                              });\r\n                          });\r\n                        }\r\n                        else if (mode === \"update\") {\r\n                          this.setState({ isLoading: true }, () => {\r\n                            this.props.editable.onRowUpdate(newData, oldData)\r\n                              .then(result => {\r\n                                this.dataManager.changeRowEditing(oldData);\r\n                                this.setState({\r\n                                  isLoading: false,\r\n                                  ...this.dataManager.getRenderState()\r\n                                }, () => {\r\n                                  if (this.isRemoteData()) {\r\n                                    this.onQueryChange(this.state.query);\r\n                                  }\r\n                                });\r\n                              })\r\n                              .catch(reason => {\r\n                                this.setState({ isLoading: false });\r\n                              });\r\n                          });\r\n\r\n                        }\r\n                        else if (mode === \"delete\") {\r\n                          this.setState({ isLoading: true }, () => {\r\n                            this.props.editable.onRowDelete(oldData)\r\n                              .then(result => {\r\n                                this.dataManager.changeRowEditing(oldData);\r\n                                this.setState({\r\n                                  isLoading: false,\r\n                                  ...this.dataManager.getRenderState()\r\n                                }, () => {\r\n                                  if (this.isRemoteData()) {\r\n                                    this.onQueryChange(this.state.query);\r\n                                  }\r\n                                });\r\n                              })\r\n                              .catch(reason => {\r\n                                this.setState({ isLoading: false });\r\n                              });\r\n                          });\r\n                        }\r\n                      }}\r\n                      localization={{ ...MaterialTable.defaultProps.localization.body, ...this.props.localization.body }}\r\n                      onRowClick={this.props.onRowClick}\r\n                      showAddRow={this.state.showAddRow}\r\n                      hasAnyEditingRow={!!(this.state.lastEditingRow || this.state.showAddRow)}\r\n                    />\r\n                  </Table>\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n          </ScrollBar>\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === \"linear\" &&\r\n            <div style={{ position: 'relative', width: '100%' }}>\r\n              <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n                <LinearProgress />\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.renderFooter()}\r\n\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === 'overlay' &&\r\n            <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n              <div style={{ display: 'table', width: '100%', height: '100%', backgroundColor: '#FFFFFFAA' }}>\r\n                <div style={{ display: 'table-cell', width: '100%', height: '100%', verticalAlign: 'middle', textAlign: 'center' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </props.components.Container>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst ScrollBar = ({ double, children }) => {\r\n  if (double) {\r\n    return (\r\n      <DoubleScrollbar>\r\n        {children}\r\n      </DoubleScrollbar>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div style={{ overflowX: 'auto' }}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nMaterialTable.defaultProps = {\r\n  actions: [],\r\n  classes: {},\r\n  columns: [],\r\n  components: {\r\n    Actions: MTableActions,\r\n    Body: MTableBody,\r\n    Cell: MTableCell,\r\n    Container: Paper,\r\n    EditRow: MTableEditRow,\r\n    FilterRow: MTableFilterRow,\r\n    Groupbar: MTableGroupbar,\r\n    GroupRow: MTableGroupRow,\r\n    Header: MTableHeader,\r\n    Pagination: TablePagination,\r\n    Row: MTableBodyRow,\r\n    Toolbar: MTableToolbar,\r\n  },\r\n  data: [],\r\n  icons: {\r\n    /* eslint-disable react/display-name */\r\n    Add: (props) => <Icon {...props}>add_box</Icon>,\r\n    Check: (props) => <Icon {...props}>check</Icon>,\r\n    Clear: (props) => <Icon {...props}>clear</Icon>,\r\n    Delete: (props) => <Icon {...props}>delete_outline</Icon>,\r\n    DetailPanel: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    Edit: (props) => <Icon {...props}>edit</Icon>,\r\n    Export: (props) => <Icon {...props}>save_alt</Icon>,\r\n    Filter: (props) => <Icon {...props}>filter_list</Icon>,\r\n    FirstPage: (props) => <Icon {...props}>first_page</Icon>,\r\n    LastPage: (props) => <Icon {...props}>last_page</Icon>,\r\n    NextPage: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    PreviousPage: (props) => <Icon {...props}>chevron_left</Icon>,\r\n    ResetSearch: (props) => <Icon {...props}>clear</Icon>,\r\n    Search: (props) => <Icon {...props}>search</Icon>,\r\n    SortArrow: (props) => <Icon {...props}>arrow_upward</Icon>,\r\n    ThirdStateCheck: (props) => <Icon {...props}>remove</Icon>,\r\n    ViewColumn: (props) => <Icon {...props}>view_column</Icon>\r\n    /* eslint-enable react/display-name */\r\n  },\r\n  isLoading: false,\r\n  title: 'Table Title',\r\n  options: {\r\n    actionsColumnIndex: 0,\r\n    columnsButton: false,\r\n    detailPanelType: 'multiple',\r\n    debounceInterval: 200,\r\n    doubleHorizontalScroll: false,\r\n    emptyRowsWhenPaging: true,\r\n    exportButton: false,\r\n    exportDelimiter: ',',\r\n    filtering: false,\r\n    header: true,\r\n    loadingType: 'overlay',\r\n    paging: true,\r\n    pageSize: 5,\r\n    pageSizeOptions: [5, 10, 20],\r\n    showEmptyDataSourceMessage: true,\r\n    search: true,\r\n    showTitle: true,\r\n    toolbarButtonAlignment: 'right',\r\n    searchFieldStyle: {},\r\n    selection: false,\r\n    sorting: true,\r\n    toolbar: true\r\n  },\r\n  localization: {\r\n    grouping: {\r\n      groupedBy: 'Grouped By:',\r\n      placeholder: 'Drag headers here to group by',\r\n    },\r\n    pagination: {\r\n      labelDisplayedRows: '{from}-{to} of {count}',\r\n      labelRowsPerPage: 'Rows per page:'\r\n    },\r\n    toolbar: {},\r\n    header: {},\r\n    body: {\r\n      filterRow: {}\r\n    }\r\n  }\r\n};\r\n\r\nMaterialTable.propTypes = {\r\n  actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]).isRequired,\r\n    isFreeAction: PropTypes.bool,\r\n    tooltip: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n    iconProps: PropTypes.object\r\n  })])),\r\n  columns: PropTypes.arrayOf(PropTypes.shape({\r\n    cellStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    currencySetting: PropTypes.shape({\r\n      locale: PropTypes.string,\r\n      currencyCode: PropTypes.string,\r\n      minimumFractionDigits: PropTypes.number,\r\n      maximumFractionDigits: PropTypes.number\r\n    }),\r\n    customFilterAndSearch: PropTypes.func,\r\n    customSort: PropTypes.func,\r\n    defaultFilter: PropTypes.any,\r\n    defaultSort: PropTypes.oneOf(['asc', 'desc']),\r\n    grouping: PropTypes.bool,\r\n    emptyValue: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.func]),\r\n    export: PropTypes.bool,\r\n    field: PropTypes.string,\r\n    filtering: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    hidden: PropTypes.bool,\r\n    lookup: PropTypes.object,\r\n    removable: PropTypes.bool,\r\n    render: PropTypes.func,\r\n    searchable: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    type: PropTypes.oneOf(['string', 'boolean', 'numeric', 'date', 'datetime', 'time', 'currency'])\r\n  })).isRequired,\r\n  components: PropTypes.shape({\r\n    Actions: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Body: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Cell: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Container: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    EditRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FilterRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Groupbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    GroupRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Header: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Row: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.func]).isRequired,\r\n  editable: PropTypes.shape({\r\n    onRowAdd: PropTypes.func,\r\n    onRowUpdate: PropTypes.func,\r\n    onRowDelete: PropTypes.func\r\n  }),\r\n  detailPanel: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({\r\n        disabled: PropTypes.bool,\r\n        icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        openIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        tooltip: PropTypes.string,\r\n        render: PropTypes.func.isRequired\r\n      })\r\n    ]))\r\n  ]),\r\n  icons: PropTypes.shape({\r\n    Add: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Clear: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Check: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Delete: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    DetailPanel: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Edit: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Export: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Filter: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FirstPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    LastPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    NextPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    PreviousPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ResetSearch: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Search: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    SortArrow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ThirdStateCheck: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ViewColumn: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  options: PropTypes.shape({\r\n    actionsColumnIndex: PropTypes.number,\r\n    columnsButton: PropTypes.bool,\r\n    debounceInterval: PropTypes.number,\r\n    detailPanelType: PropTypes.oneOf(['single', 'multiple']),\r\n    doubleHorizontalScroll: PropTypes.bool,\r\n    emptyRowsWhenPaging: PropTypes.bool,\r\n    exportButton: PropTypes.bool,\r\n    exportDelimiter: PropTypes.string,\r\n    exportFileName: PropTypes.string,\r\n    filtering: PropTypes.bool,\r\n    header: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    initialPage: PropTypes.number,\r\n    loadingType: PropTypes.oneOf(['overlay', 'linear']),\r\n    paging: PropTypes.bool,\r\n    pageSize: PropTypes.number,\r\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\r\n    rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    showEmptyDataSourceMessage: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    toolbarButtonAlignment: PropTypes.string,\r\n    searchFieldStyle: PropTypes.object,\r\n    selection: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    toolbar: PropTypes.bool\r\n  }),\r\n  localization: PropTypes.shape({\r\n    grouping: PropTypes.shape({\r\n      groupedBy: PropTypes.string,\r\n      placeholder: PropTypes.string\r\n    }),\r\n    pagination: PropTypes.object,\r\n    toolbar: PropTypes.object,\r\n    header: PropTypes.object,\r\n    body: PropTypes.object\r\n  }),\r\n  onSelectionChange: PropTypes.func,\r\n  onChangeRowsPerPage: PropTypes.func,\r\n  onChangePage: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  onRowClick: PropTypes.func,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  paginationToolbar: {\r\n    padding: 0\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(MaterialTable);\r\n\r\nexport {\r\n  MTableActions, MTableBody, MTableCell,\r\n  MTableFilterRow, MTableHeader, MTablePagination,\r\n  MTableBodyRow, MTableToolbar, MTableGroupRow\r\n};\r\n"],"sourceRoot":""}