{"version":3,"sources":["webpack:///./src/m-table-actions.js","webpack:///./src/m-table-body.js","webpack:///./src/m-table-body-row.js","webpack:///./src/m-table-groupbar.js","webpack:///./src/m-table-group-row.js","webpack:///./src/m-table-cell.js","webpack:///./src/form/form-field.js","webpack:///./src/m-table-edit-row.js","webpack:///./src/m-table-filter-row.js","webpack:///./src/m-table-header.js","webpack:///./src/m-table-pagination.js","webpack:///./src/m-table-stepped-pagination.js","webpack:///./src/m-table-toolbar.js","webpack:///./src/utils/data-manager.js","webpack:///./src/material-table.js"],"names":["MTableActions","action","index","_this","this","props","data","button","react","index_es","key","icon","color","disabled","onClick","event","stopPropagation","Object","assign","iconProps","fontSize","tooltip","title","_this2","actions","map","renderButton","React","defaultProps","MTableBody","emptyRowCount","renderData","localization","objectSpread_default","options","showEmptyDataSourceMessage","length","addColumn","selection","filter","a","isFreeAction","hasDetailPanel","style","height","paging","emptyRowsWhenPaging","pageSize","paddingTop","paddingBottom","textAlign","colSpan","columns","emptyDataSourceMessage","toConsumableArray_default","Array","r","tableData","editing","components","EditRow","columnDef","hidden","icons","editRow","mode","onEditingCanceled","onEditingApproved","Row","level","onRowSelected","getFieldValue","detailPanel","path","currentPage","onToggleDetailPanel","onRowClick","isTreeData","onTreeExpandChanged","hasAnyEditingRow","groups","_this3","groupData","GroupRow","value","onGroupExpandChanged","_this4","col","groupOrder","sort","col1","col2","filtering","FilterRow","emptyCell","hasActions","actionsColumnIndex","onFilterChanged","onFilterSelectionChanged","filterRow","renderGroupedRows","renderUngroupedRows","showAddRow","renderEmpty","MTableBodyRow","isOpen","transform","Cell","id","rowData","padding","width","display","Actions","checked","e","toString","onChange","paddingLeft","_this5","CustomIcon","_ref","transition","rotateIconStyle","showDetailPanel","DetailPanel","panel","render","iconButton","animation","openIcon","rowStyle","cursor","opacity","_this6","renderColumns","splice","renderSelectionColumn","push","renderActions","endPos","childRows","marginLeft","isTreeExpanded","renderDetailPanelColumn","forEach","_this$props","rowProps","objectWithoutProperties_default","selected","hover","getStyle","panelIndex","isArray","concat","MTableGroupbar","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","isDragging","draggableStyle","userSelect","margin","isDraggingOver","background","overflow","border","borderStyle","state","minHeight","react_beautiful_dnd_esm","droppableId","direction","placeholder","provided","snapshot","ref","innerRef","getListStyle","groupColumns","variant","groupedBy","draggableId","draggableProps","dragHandleProps","getItemStyle","onSortChanged","label","float","groupSort","SortArrow","boxShadow","textTransform","onDelete","onGroupRemoved","MTableGroupRow","detail","column","isExpanded","freeCells","i","lookup","undefined","emptyValue","MTableCell","disableClick","cellStyle","getEmptyValue","type","Check","ThirdStateCheck","Date","toLocaleDateString","toLocaleTimeString","toLocaleString","getCurrencyValue","currencySetting","Intl","NumberFormat","locale","currency","currencyCode","minimumFractionDigits","maximumFractionDigits","format","cellProps","align","indexOf","handleClickCell","children","getRenderValue","FormField","target","keys","material_ui_pickers_esm","utils","DateFnsUtils","clearable","InputProps","renderLookupField","renderBooleanField","renderDateField","renderTimeField","renderDateTimeField","renderCurrencyField","renderTextField","MTableEditRow","JSON","parse","stringify","field","form_field","setState","saveTooltip","Clear","cancelTooltip","borderBottom","deleteText","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MTableFilterRow","multiple","filterValue","input","renderValue","selecteds","join","primary","indeterminate","val","startAdornment","position","filterTooltip","Filter","dateInputElement","onDateInputChange","date","renderLookupFilter","renderBooleanFilter","includes","renderDateTypeFilter","renderDefaultFilter","getComponentForColumn","MTableHeader","top","zIndex","backgroundColor","headerStyle","stickyStyle","sorting","active","orderBy","orderDirection","onOrderChange","grouping","isDragDisabled","selectedCount","dataCount","onAllSelected","headers","renderHeader","hasSelection","renderSelectionHeader","showActionsColumn","actionsHeaderIndex","renderActionsHeader","MTablePaginationInner","onChangePage","page","Math","max","ceil","count","rowsPerPage","classes","theme","className","root","firstTooltip","handleFirstPageButtonClick","aria-label","firstAriaLabel","LastPage","FirstPage","previousTooltip","handleBackButtonClick","previousAriaLabel","NextPage","PreviousPage","nextTooltip","handleNextButtonClick","nextAriaLabel","lastTooltip","handleLastPageButtonClick","lastAriaLabel","labelDisplayedRows","labelRowsPerPage","MTablePagination","withStyles","flexShrink","palette","text","secondary","spacing","unit","marginRight","withTheme","number","maxPages","smDown","handleNumberButtonClick","MTableToolbar","export","CsvBuilder","exportFileName","setDelimeter","exportDelimiter","setColumns","addRows","exportFile","exportButtonAnchorEl","columnsButtonAnchorEl","search","searchField","searchText","onSearchChanged","searchTooltip","Search","endAdornment","ResetSearch","searchFieldStyle","renderSearch","columnsButton","showColumnsTitle","currentTarget","showColumnsAriaLabel","ViewColumn","anchorEl","open","Boolean","onClose","fontWeight","addRemoveColumns","removable","control","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","Export","exportCsv","exportName","selectedRows","renderSelectedActions","renderDefaultActions","showTitle","nRowsSelected","replace","classNames","highlight","toolbarButtonAlignment","spacer","paddingRight","main","lighten","light","dark","flex","DataManager","isDataType","reduce","result","current","byString","filtered","filterData","searched","searchData","grouped","treefied","treefyData","sorted","sortData","paged","pageData","sortedData","lastEditingRow","originalData","pagedData","treefiedDataLength","filteredData","applyFilters","customFilterAndSearch","row","currentDate","selectedDate","currentDateToCompare","selectedDateToCompare","formatDate","currentHour","selectedHour","toUpperCase","searchedData","applySearch","searchable","some","defaultFilter","defaultGroupOrder","defaultGroupSort","parentFunc","columnId","filterSelectionChecked","findDataByPath","checkChildRows","childRow","detailPanelType","lastDetailPanelRow","setCheck","element","d","groupedData","find","c","start","destination","source","min","end","slice","last","pop","unshift","shift","newGroup","o","s","split","n","x","dataType","b","list","_","customSort","tmpData","subData","object","colDef","group","g","oldGroup","findGroupByGroupPath","treefiedData","addRow","parent","_this7","sortGroups","sortGroupData","sortList","sortTree","item","startIndex","endIndex","MaterialTable","onSelectionChange","apply","arguments","_this$props2","onChangeRowsPerPage","_this$props3","query","isLoading","then","totalCount","dataManager","setData","getRenderState","debounce","changeSearchText","isRemoteData","onQueryChange","debounceInterval","filters","operator","calculatedProps","getProps","setDataManagerFields","isInit","defaultSortColumnIndex","defaultSortDirection","findIndex","defaultSort","changeApplySearch","changeApplyFilters","changeCurrentPage","initialPage","changePageSize","changeOrder","changePaging","changeParentFunc","parentChildData","changeDetailPanelType","nextProps","body","editable","onRowAdd","Add","addTooltip","changeRowEditing","onRowUpdate","Edit","editTooltip","onRowDelete","Delete","deleteTooltip","pagination","Pagination","toolbar","paginationToolbar","overflowX","rowsPerPageOptions","pageSizeOptions","ActionsComponent","subProps","paginationType","m_table_pagination","m_table_stepped_pagination","from","to","onDragEnd","changeByDrag","Container","Toolbar","onSearchChange","changeColumnHidden","Groupbar","groupedColumn","changeGroupOrder","combine","reason","material_table_ScrollBar","double","doubleHorizontalScroll","maxBodyHeight","overflowY","header","Header","changeAllSelected","Body","changeFilterValue","onFilterChange","changeFilterSelectionChecked","changeRowSelected","changeDetailPanelVisibility","changeGroupExpand","changeTreeExpand","newData","oldData","catch","loadingType","left","renderFooter","verticalAlign","ScrollBar","DoubleScrollbar_default","Paper","TablePagination"],"mappings":"q+BAMMA,+IACSC,EAAQC,GAAO,IAAAC,EAAAC,KAC1B,GAAsB,oBAAXH,KACTA,EAASA,EAAOG,KAAKC,MAAMC,OAEzB,OAAO,KAIX,IAAMC,EACJC,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEC,IAAKT,EAAOU,KAAO,GAAKT,EACxBU,MAAM,UACNC,SAAUZ,EAAOY,SACjBC,QAAS,SAACC,GACJd,EAAOa,UACTb,EAAOa,QAAQC,EAAOZ,EAAKE,MAAMC,MACjCS,EAAMC,qBAIc,kBAAhBf,EAAOU,KACbH,EAAA,cAACC,EAAA,EAADQ,OAAAC,OAAA,GAAUjB,EAAOkB,UAAjB,CAA4BC,SAAS,UAASnB,EAAOU,MAErDH,EAAA,cAACP,EAAOU,KAASV,EAAOkB,aAMhC,OAAIlB,EAAOoB,QACFb,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOrB,EAAOoB,QAASX,IAAKT,EAAOoB,QAAU,GAAKnB,GAAQK,GAEnEA,mCAIF,IAAAgB,EAAAnB,KACP,OAAIA,KAAKC,MAAMmB,QACNpB,KAAKC,MAAMmB,QAAQC,IAAI,SAACxB,EAAQC,GAAT,OAAoBqB,EAAKG,aAAazB,EAAQC,KAGvE,YA3CiByB,aA+C5B3B,EAAc4B,aAAe,CAC3BJ,QAAS,GACTlB,KAAM,IAQON,8cCzDT6B,8IACQC,EAAeC,GAAY,IAAA5B,EAAAC,KAC/B4B,EAAYC,IAAA,GAAQJ,EAAWD,aAAaI,aAAiB5B,KAAKC,MAAM2B,cAC9E,GAAI5B,KAAKC,MAAM6B,QAAQC,4BAAoD,IAAtBJ,EAAWK,OAAc,CAC5E,IAAIC,EAAY,EAOhB,OANIjC,KAAKC,MAAM6B,QAAQI,WAAclC,KAAKC,MAAMmB,SAAWpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAiBtC,EAAKE,MAAM6B,QAAQI,YAAWF,OAAS,IACnJC,IAECjC,KAAKC,MAAMqC,gBACZL,IAGA7B,EAAA,cAACC,EAAA,EAAD,CAAUkC,MAAO,CAAEC,OAAQ,IAAMxC,KAAKC,MAAM6B,QAAQW,QAAUzC,KAAKC,MAAM6B,QAAQY,oBAAsB1C,KAAKC,MAAM0C,SAAW,IAAMrC,IAAK,WACtIF,EAAA,cAACC,EAAA,EAAD,CAAWkC,MAAO,CAAEK,WAAY,EAAGC,cAAe,EAAGC,UAAW,UAAYC,QAAS/C,KAAKC,MAAM+C,QAAQhB,OAASC,EAAW3B,IAAI,UAC7HsB,EAAaqB,yBAIf,GAAIjD,KAAKC,MAAM6B,QAAQY,oBAC5B,OACEtC,EAAA,cAACA,EAAA,SAAD,KACG8C,IAAIC,MAAMzB,IAAgBL,IAAI,SAAC+B,EAAGtD,GAAJ,OAAcM,EAAA,cAACC,EAAA,EAAD,CAAUkC,MAAO,CAAEC,OAAQ,IAAMlC,IAAK,SAAWR,MAC7F4B,EAAgB,GAAKtB,EAAA,cAACC,EAAA,EAAD,CAAUkC,MAAO,CAAEC,OAAQ,GAAKlC,IAAK,6DAM/CqB,GAAY,IAAAR,EAAAnB,KAC9B,OAAO2B,EAAWN,IAAI,SAACnB,EAAMJ,GAC3B,OAAII,EAAKmD,UAAUC,QAEflD,EAAA,cAACe,EAAKlB,MAAMsD,WAAWC,QAAvB,CACER,QAAS7B,EAAKlB,MAAM+C,QAAQb,OAAO,SAAAsB,GAAe,OAAQA,EAAUC,SACpEH,WAAYpC,EAAKlB,MAAMsD,WACvBrD,KAAMA,EACNyD,MAAOxC,EAAKlB,MAAM0D,MAClB/B,aAAYC,IAAA,GAAOJ,EAAWD,aAAaI,aAAagC,QAAYzC,EAAKlB,MAAM2B,aAAagC,SAC5FtD,IAAKR,EACL+D,KAAM3D,EAAKmD,UAAUC,QACrBxB,QAASX,EAAKlB,MAAM6B,QACpBgC,kBAAmB3C,EAAKlB,MAAM6D,kBAC9BC,kBAAmB5C,EAAKlB,MAAM8D,oBAMhC3D,EAAA,cAACe,EAAKlB,MAAMsD,WAAWS,IAAvB,CACET,WAAYpC,EAAKlB,MAAMsD,WACvBI,MAAOxC,EAAKlB,MAAM0D,MAClBzD,KAAMA,EACNJ,MAAOA,EACPQ,IAAKR,EACLmE,MAAO,EACPnC,QAASX,EAAKlB,MAAM6B,QACpBoC,cAAe/C,EAAKlB,MAAMiE,cAC1B9C,QAASD,EAAKlB,MAAMmB,QACpB4B,QAAS7B,EAAKlB,MAAM+C,QACpBmB,cAAehD,EAAKlB,MAAMkE,cAC1BC,YAAajD,EAAKlB,MAAMmE,YACxBC,KAAM,CAACvE,EAAQqB,EAAKlB,MAAM0C,SAAWxB,EAAKlB,MAAMqE,aAChDC,oBAAqBpD,EAAKlB,MAAMsE,oBAChCC,WAAYrD,EAAKlB,MAAMuE,WACvBC,WAAYtD,EAAKlB,MAAMwE,WACvBC,oBAAqBvD,EAAKlB,MAAMyE,oBAChCZ,kBAAmB3C,EAAKlB,MAAM6D,kBAC9BC,kBAAmB5C,EAAKlB,MAAM8D,kBAC9BY,iBAAkBxD,EAAKlB,MAAM0E,+DAOrBC,EAAQjD,GAAY,IAAAkD,EAAA7E,KACpC,OAAO2B,EAAWN,IAAI,SAACyD,EAAWhF,GAAZ,OACpBM,EAAA,cAACyE,EAAK5E,MAAMsD,WAAWwB,SAAvB,CACE3D,QAASyD,EAAK5E,MAAMmB,QACpBd,IAAKwE,EAAUE,OAAU,GAAKlF,EAC9BkD,QAAS6B,EAAK5E,MAAM+C,QACpBO,WAAYsB,EAAK5E,MAAMsD,WACvBa,YAAaS,EAAK5E,MAAMmE,YACxBD,cAAeU,EAAK5E,MAAMkE,cAC1BW,UAAWA,EACXF,OAAQA,EACRjB,MAAOkB,EAAK5E,MAAM0D,MAClBM,MAAO,EACPI,KAAM,CAACvE,EAAQ+E,EAAK5E,MAAM0C,SAAWkC,EAAK5E,MAAMqE,aAChDW,qBAAsBJ,EAAK5E,MAAMgF,qBACjCf,cAAeW,EAAK5E,MAAMiE,cAC1BM,WAAYK,EAAK5E,MAAMuE,WACvBV,kBAAmBe,EAAK5E,MAAM6D,kBAC9BC,kBAAmBc,EAAK5E,MAAM8D,kBAC9BQ,oBAAqBM,EAAK5E,MAAMsE,oBAChCG,oBAAqBG,EAAK5E,MAAMyE,oBAChC5C,QAAS+C,EAAK5E,MAAM6B,QACpB2C,WAAYI,EAAK5E,MAAMwE,WACvBE,iBAAkBE,EAAK5E,MAAM0E,sDAK1B,IAAAO,EAAAlF,KACH2B,EAAa3B,KAAKC,MAAM0B,WACtBiD,EAAS5E,KAAKC,MAAM+C,QACvBb,OAAO,SAAAgD,GAAG,OAAIA,EAAI9B,UAAU+B,YAAc,IAC1CC,KAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKjC,UAAU+B,WAAaG,EAAKlC,UAAU+B,aAE/D1D,EAAgB,EAIpB,OAHI1B,KAAKC,MAAM6B,QAAQW,SACrBf,EAAgB1B,KAAKC,MAAM0C,SAAWhB,EAAWK,QAGjD5B,EAAA,cAACC,EAAA,EAAD,KACGL,KAAKC,MAAM6B,QAAQ0D,WAClBpF,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWkC,UAAvB,CACEzC,QAAShD,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAe,OAAQA,EAAUC,SACpEC,MAAO3D,KAAKC,MAAM0D,MAClB+B,UAAW1F,KAAKC,MAAM6B,QAAQI,WAAclC,KAAKC,MAAMmB,SAAWpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAiB6C,EAAKjF,MAAM6B,QAAQI,YAAWF,OAAS,EAC5J2D,WAAa3F,KAAKC,MAAMmB,SAAWpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAiB6C,EAAKjF,MAAM6B,QAAQI,YAAWF,OAAS,EAC7H4D,mBAAoB5F,KAAKC,MAAM6B,QAAQ8D,mBACvCC,gBAAiB7F,KAAKC,MAAM4F,gBAC5B3D,UAAWlC,KAAKC,MAAM6B,QAAQI,UAC9B4D,yBAA0B9F,KAAKC,MAAM6F,yBACrClE,aAAYC,IAAA,GAAOJ,EAAWD,aAAaI,aAAamE,UAAc/F,KAAKC,MAAM2B,aAAamE,WAC9FzD,iBAAkBtC,KAAKC,MAAMmE,YAC7BK,WAAYzE,KAAKC,MAAMwE,aAG1BG,EAAO5C,OAAS,EACfhC,KAAKgG,kBAAkBpB,EAAQjD,GAC/B3B,KAAKiG,oBAAoBtE,GAG1B3B,KAAKC,MAAMiG,YACV9F,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWC,QAAvB,CACER,QAAShD,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAe,OAAQA,EAAUC,SACpEH,WAAYvD,KAAKC,MAAMsD,WACvBI,MAAO3D,KAAKC,MAAM0D,MAClBrD,IAAI,cACJuD,KAAK,MACLjC,aAAYC,IAAA,GAAOJ,EAAWD,aAAaI,aAAagC,QAAY5D,KAAKC,MAAM2B,aAAagC,SAC5F9B,QAAS9B,KAAKC,MAAM6B,QACpBgC,kBAAmB9D,KAAKC,MAAM6D,kBAC9BC,kBAAmB/D,KAAKC,MAAM8D,oBAGjC/D,KAAKmG,YAAYzE,EAAeC,WApJhBJ,aA0JzBE,EAAWD,aAAe,CACxBJ,QAAS,GACTkD,YAAa,EACb3B,SAAU,EACVhB,WAAY,GACZO,WAAW,EACXN,aAAc,CACZqB,uBAAwB,wBACxB8C,UAAW,GACXnC,QAAS,KAgCEnC,s9EClMM2E,iNA4CD,SAAAC,GAAM,MAAK,CAC3BC,UAAWD,EAAS,gBAAkB,yEA5CxB,IAAAlF,EAAAnB,KAcd,OAbeA,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAS,OAAKA,EAAUC,UAAYD,EAAUJ,UAAU+B,YAAc,KAC5G/D,IAAI,SAACoC,EAAW3D,GACf,IAAMkF,EAAQ7D,EAAKlB,MAAMkE,cAAchD,EAAKlB,MAAMC,KAAMuD,GACxD,OACErD,EAAA,cAACe,EAAKlB,MAAMsD,WAAWgD,KAAvB,CACE5C,MAAOxC,EAAKlB,MAAM0D,MAClBF,UAAWA,EACXuB,MAAOA,EACP1E,IAAKmD,EAAUJ,UAAUmD,GACzBC,QAAStF,EAAKlB,MAAMC,iDAOd,IAAA2E,EAAA7E,KACRoB,EAAUpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAiBwC,EAAK5E,MAAM6B,QAAQI,YACtF,OACE9B,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,QAAQpG,IAAI,qBAAqBiC,MAAO,CAAEoE,MAAO,GAAKvF,EAAQY,OAAQ0E,QAAS,YAChGtG,EAAA,qBAAKmC,MAAO,CAAEqE,QAAS,SACrBxG,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWsD,QAAvB,CAA+B3G,KAAMF,KAAKC,MAAMC,KAAMkB,QAASA,sDAK/C,IAAA8D,EAAAlF,KACtB,OACEI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,uBAAuBiC,MAAO,CAAEoE,MAAO,KACnEvG,EAAA,cAACC,EAAA,EAAD,CACEyG,SAA+C,IAAtC9G,KAAKC,MAAMC,KAAKmD,UAAUyD,QACnCpG,QAAS,SAACqG,GAAD,OAAOA,EAAEnG,mBAClBoE,MAAOhF,KAAKC,MAAMC,KAAKmD,UAAUmD,GAAGQ,WACpCC,SAAU,SAACtG,GAAD,OAAWuE,EAAKjF,MAAMiE,cAAcvD,EAAOuE,EAAKjF,MAAMoE,OAChE9B,MAAO,CACL2E,YAAa,GAAwB,GAAnBlH,KAAKC,MAAMgE,4DAWb,IAAAkD,EAAAnH,KAElBoH,EAAa,SAAAC,GAAA,IAAG9G,EAAH8G,EAAG9G,KAAMgC,EAAT8E,EAAS9E,MAAT,MAAqC,kBAAThC,EAAoBH,EAAA,cAACC,EAAA,EAAD,CAAMkC,MAAOA,GAAQhC,GAAegB,gBAAoBhB,EAAM,CAAEgC,WAEnI,MAAqC,mBAA1BvC,KAAKC,MAAMmE,YAElBhE,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,0BAA0BiC,MAAO,CAAEoE,MAAO,GAAI7D,UAAW,WACrF1C,EAAA,cAACC,EAAA,EAAD,CACEkC,MAAKV,IAAA,CAAIyF,WAAY,kBAAqBtH,KAAKuH,gBAAgBvH,KAAKC,MAAMC,KAAKmD,UAAUmE,kBACzF9G,QAAS,SAACC,GACRwG,EAAKlH,MAAMsE,oBAAoB4C,EAAKlH,MAAMoE,KAAM8C,EAAKlH,MAAMmE,aAC3DzD,EAAMC,oBAGRR,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8D,YAAlB,QAOJrH,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,0BAA0BiC,MAAO,CAAEoE,MAAO,GAAK3G,KAAKC,MAAMmE,YAAYpC,OAAQc,UAAW,WACpH9C,KAAKC,MAAMmE,YAAY/C,IAAI,SAACqG,EAAO5H,GAEb,oBAAV4H,IACTA,EAAQA,EAAMP,EAAKlH,MAAMC,OAG3B,IAAMmG,EAASc,EAAKlH,MAAMC,KAAKmD,UAAUmE,kBAAoBE,EAAMC,OAC/DC,EAAaxH,EAAA,cAAC+G,EAAKlH,MAAM0D,MAAM8D,YAAlB,MACbI,GAAY,EAgChB,OA/BIxB,EACEqB,EAAMI,UACRF,EAAaxH,EAAA,cAACgH,EAAD,CAAY7G,KAAMmH,EAAMI,WACrCD,GAAY,GAELH,EAAMnH,OACbqH,EAAaxH,EAAA,cAACgH,EAAD,CAAY7G,KAAMmH,EAAMnH,QAGhCmH,EAAMnH,OACbqH,EAAaxH,EAAA,cAACgH,EAAD,CAAY7G,KAAMmH,EAAMnH,OACrCsH,GAAY,GAGdD,EACExH,EAAA,cAACC,EAAA,EAAD,CACEC,IAAK,oBAAsBR,EAC3ByC,MAAKV,IAAA,CAAIyF,WAAY,kBAAqBH,EAAKI,gBAAgBM,GAAaxB,IAC5E5F,SAAUiH,EAAMjH,SAChBC,QAAS,SAACC,GACRwG,EAAKlH,MAAMsE,oBAAoB4C,EAAKlH,MAAMoE,KAAMqD,EAAMC,QACtDhH,EAAMC,oBAGPgH,GAGDF,EAAMzG,UACR2G,EAAaxH,EAAA,cAACC,EAAA,EAAD,CAASC,IAAK,oBAAsBR,EAAOoB,MAAOwG,EAAMzG,SAAU2G,IAG1EA,wCAQf,IAAIrF,EAAQ,CACV+E,WAAY,kBAwBd,MArB2C,oBAAhCtH,KAAKC,MAAM6B,QAAQiG,SAC5BxF,EAAKV,IAAA,GACAU,EACAvC,KAAKC,MAAM6B,QAAQiG,SAAS/H,KAAKC,MAAMC,OAGtCF,KAAKC,MAAM6B,QAAQiG,WACzBxF,EAAKV,IAAA,GACAU,EACAvC,KAAKC,MAAM6B,QAAQiG,WAItB/H,KAAKC,MAAMuE,aACbjC,EAAMyF,OAAS,WAGdhI,KAAKC,MAAM0E,mBACZpC,EAAM0F,QAAU,IAGX1F,mCAGA,IAAA2F,EAAAlI,KACDgD,EAAUhD,KAAKmI,gBAIrB,GAHInI,KAAKC,MAAM6B,QAAQI,WACrBc,EAAQoF,OAAO,EAAG,EAAGpI,KAAKqI,yBAExBrI,KAAKC,MAAMmB,SAAWpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAiB6F,EAAKjI,MAAM6B,QAAQI,YAAWF,OAAS,EAClH,IAA+C,IAA3ChC,KAAKC,MAAM6B,QAAQ8D,mBACrB5C,EAAQsF,KAAKtI,KAAKuI,sBACb,GAAIvI,KAAKC,MAAM6B,QAAQ8D,oBAAsB,EAAG,CACrD,IAAI4C,EAAS,EACTxI,KAAKC,MAAM6B,QAAQI,YACrBsG,EAAS,GAEXxF,EAAQoF,OAAOpI,KAAKC,MAAM6B,QAAQ8D,mBAAqB4C,EAAQ,EAAGxI,KAAKuI,iBAIvEvI,KAAKC,MAAMwE,aACTzE,KAAKC,MAAMC,KAAKmD,UAAUoF,WAAazI,KAAKC,MAAMC,KAAKmD,UAAUoF,UAAUzG,OAAS,EACtFgB,EAAQoF,OAAO,EAAG,EAChBhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAK,uBAAwBiC,MAAO,CAAEoE,MAAO,KACrEvG,EAAA,cAACC,EAAA,EAAD,CACEkC,MAAKV,IAAA,CACHyF,WAAY,iBACZoB,WAA+B,GAAnB1I,KAAKC,MAAMgE,OACpBjE,KAAKuH,gBAAgBvH,KAAKC,MAAMC,KAAKmD,UAAUsF,iBAEpDjI,QAAS,SAACC,GACRuH,EAAKjI,MAAMyE,oBAAoBwD,EAAKjI,MAAMoE,MAC1C1D,EAAMC,oBAGRR,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8D,YAAlB,SAMNzE,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAK,2BAKpDN,KAAKC,MAAMmE,aACbpB,EAAQoF,OAAO,EAAG,EAAGpI,KAAK4I,2BAG5B5I,KAAKC,MAAM+C,QACRb,OAAO,SAAAsB,GAAS,OAAIA,EAAUJ,UAAU+B,YAAc,IACtDyD,QAAQ,SAAApF,GACPT,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAK,iBAAmBmD,EAAUJ,UAAUmD,QAlDxF,IAAAsC,EAgEW9I,KAAKC,MAVrBmE,EAtDK0E,EAsDL1E,YAGAI,GAzDKsE,EAuDL3E,cAvDK2E,EAwDLrE,WAxDKqE,EAyDLtE,YAGAD,GA5DKuE,EA0DL5E,cA1DK4E,EA2DLpE,oBA3DKoE,EA4DLvE,qBACAT,EA7DKgF,EA6DLhF,kBACAC,EA9DK+E,EA8DL/E,kBACAY,EA/DKmE,EA+DLnE,iBACGoE,EAhEEC,IAAAF,EAAA,kLAkEP,OACE1I,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAADQ,OAAAC,OAAA,CACEmI,SAAUtE,GACNoE,EAFN,CAGEG,QAAO1E,EACPjC,MAAOvC,KAAKmJ,WACZzI,QAAS,SAACC,GACR6D,GAAcA,EAAW7D,EAAOuH,EAAKjI,MAAMC,KACzC,SAACkJ,GACC,IAAI1B,EAAQtD,EACRjB,MAAMkG,QAAQ3B,KAChBA,EAAQA,EAAM0B,GAAc,GAAGzB,QAGjCpD,EAAoB2D,EAAKjI,MAAMoE,KAAMqD,QAI1C1E,GAEFhD,KAAKC,MAAMC,KAAKmD,UAAUoF,WAAazI,KAAKC,MAAMC,KAAKmD,UAAUsF,gBAChE3I,KAAKC,MAAMC,KAAKmD,UAAUoF,UAAUpH,IAAI,SAACnB,EAAMJ,GAAP,OACtCM,EAAA,cAAC8H,EAAKjI,MAAMsD,WAAWS,IAAvBnD,OAAAC,OAAA,GACMoH,EAAKjI,MADX,CAEEC,KAAMA,EACNJ,MAAOA,EACPQ,IAAKR,EACLmE,MAAOiE,EAAKjI,MAAMgE,MAAQ,EAC1BI,KAAI,GAAAiF,OAAApG,IAAMgF,EAAKjI,MAAMoE,MAAjB,CAAuBvE,IAC3BgE,kBAAmBA,EACnBC,kBAAmBA,EACnBY,iBAAkBuD,EAAKjI,MAAM0E,sBAIlC3E,KAAKC,MAAMC,KAAKmD,WAAarD,KAAKC,MAAMC,KAAKmD,UAAUmE,iBACtDpH,EAAA,cAACC,EAAA,EAAD,KAGED,EAAA,cAACC,EAAA,EAAD,CAAW0C,QAASC,EAAQhB,OAAQ0E,QAAQ,QACzC1G,KAAKC,MAAMC,KAAKmD,UAAUmE,gBAAgBxH,KAAKC,MAAMC,gBA7PzBqB,aAsQ3C6E,EAAc5E,aAAe,CAC3BJ,QAAS,GACTtB,MAAO,EACPI,KAAM,GACN4B,QAAS,GACTuC,KAAM,wzDC1QFkF,cACJ,SAAAA,EAAYtJ,GAAO,IAAAF,EAAA,OAAAyJ,IAAAxJ,KAAAuJ,GACjBxJ,EAAA0J,IAAAzJ,KAAA0J,IAAAH,GAAAI,KAAA3J,KAAMC,IADW2J,IAAAC,IAAA9J,GAAA,eAMJ,SAAC+J,EAAYC,GAAb,OAAAlI,IAAA,CAEbmI,WAAY,OAEZC,OAAM,KAAAX,OAAO,EAAP,WAMHS,KAhBcH,IAAAC,IAAA9J,GAAA,eAmBJ,SAAAmK,GAAc,MAAK,CAEhCC,WAAY,YACZvD,QAAS,OACTD,MAAO,OACPD,QAAS,EACT0D,SAAU,OACVC,OAAQ,iBACRC,YAAa,YAzBbvK,EAAKwK,MAAQ,GAFIxK,wDA8BV,IAAAoB,EAAAnB,KACP,OACEI,EAAA,cAACC,EAAA,EAAD,CAASkC,MAAO,CAAEmE,QAAS,EAAG8D,UAAW,UACvCpK,EAAA,cAACqK,EAAA,EAAD,CAAWC,YAAY,SAASC,UAAU,aAAaC,YAAY,UAChE,SAACC,EAAUC,GAAX,OACC1K,EAAA,qBACE2K,IAAKF,EAASG,SACdzI,MAAOpB,EAAK8J,aAAaH,EAASZ,iBAEjC/I,EAAKlB,MAAMiL,aAAalJ,OAAS,GAChC5B,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,UAAU5I,MAAO,CAAEmE,QAAS,IAC7CvF,EAAKlB,MAAM2B,aAAawJ,WAG5BjK,EAAKlB,MAAMiL,aAAa7J,IAAI,SAACoC,EAAW3D,GACvC,OACEM,EAAA,cAACqK,EAAA,EAAD,CACEnK,IAAKmD,EAAUJ,UAAUmD,GACzB6E,YAAa5H,EAAUJ,UAAUmD,GAAGQ,WACpClH,MAAOA,GACN,SAAC+K,EAAUC,GAAX,OACC1K,EAAA,oBAAAS,OAAAC,OAAA,CACEiK,IAAKF,EAASG,UACVH,EAASS,eACTT,EAASU,gBAHf,CAIEhJ,MAAOpB,EAAKqK,aAAaV,EAAShB,WAAYe,EAASS,eAAe/I,SAEtEnC,EAAA,cAACC,EAAA,EAADQ,OAAAC,OAAA,GACM+J,EAASU,gBADf,CAEE7K,QAAS,kBAAMS,EAAKlB,MAAMwL,cAAchI,IACxCiI,MACEtL,EAAA,yBACEA,EAAA,qBAAKmC,MAAO,CAAEoJ,MAAO,SAAWlI,EAAUvC,OACzCuC,EAAUJ,UAAUuI,WACnBxL,EAAA,cAACe,EAAKlB,MAAM0D,MAAMkI,UAAlB,CACEtJ,MAAO,CACL+E,WAAY,iBACZhB,UAA6C,SAAlC7C,EAAUJ,UAAUuI,UAAuB,kBAAoB,OAC1E5K,SAAU,OAMpBuB,MAAO,CAAEuJ,UAAW,OAAQC,cAAe,QAC3CZ,QAAQ,YACRa,SAAU,kBAAM7K,EAAKlB,MAAMgM,eAAexI,EAAW3D,YAO7B,IAAnCqB,EAAKlB,MAAMiL,aAAalJ,QACvB5B,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,UAAU5I,MAAO,CAAEmE,QAAS,IAC7CvF,EAAKlB,MAAM2B,aAAagJ,aAG5BC,EAASD,uBAzFKrJ,aAkG7BgI,EAAe/H,aAAe,GAUf+H,+dC7GM2C,iNAED,SAAA7F,GAAM,MAAK,CAC3BC,UAAWD,EAAS,gBAAkB,kEAG/B,IAAAlF,EAAAnB,KACH+C,EAAU/C,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAS,OAAKA,EAAUC,SAAQ1B,OACxEhC,KAAKC,MAAM6B,QAAQI,WAAaa,IAChC/C,KAAKC,MAAMmE,aAAerB,IAC1B/C,KAAKC,MAAMmB,SAAWpB,KAAKC,MAAMmB,QAAQY,OAAS,GAAKe,IACvD,IAEIoJ,EAFEC,EAASpM,KAAKC,MAAM2E,OAAO5E,KAAKC,MAAMgE,OAGxCjE,KAAKC,MAAM6E,UAAUuH,aAErBF,EADEnM,KAAKC,MAAM2E,OAAO5C,OAAUhC,KAAKC,MAAMgE,MAAQ,EACxCjE,KAAKC,MAAM6E,UAAUF,OAAOvD,IAAI,SAACyD,EAAWhF,GAAZ,OACvCM,EAAA,cAACe,EAAKlB,MAAMsD,WAAWwB,SAAvB,CACE3D,QAASD,EAAKlB,MAAMmB,QACpBd,IAAKwE,EAAUE,OAAU,GAAKlF,EAC9BkD,QAAS7B,EAAKlB,MAAM+C,QACpBO,WAAYpC,EAAKlB,MAAMsD,WACvBa,YAAajD,EAAKlB,MAAMmE,YACxBD,cAAehD,EAAKlB,MAAMkE,cAC1BW,UAAWA,EACXF,OAAQzD,EAAKlB,MAAM2E,OACnBjB,MAAOxC,EAAKlB,MAAM0D,MAClBM,MAAO9C,EAAKlB,MAAMgE,MAAQ,EAC1BI,KAAI,GAAAiF,OAAApG,IAAM/B,EAAKlB,MAAMoE,MAAjB,CAAuBvE,IAC3BmF,qBAAsB9D,EAAKlB,MAAMgF,qBACjCf,cAAe/C,EAAKlB,MAAMiE,cAC1BM,WAAYrD,EAAKlB,MAAMuE,WACvBD,oBAAqBpD,EAAKlB,MAAMsE,oBAChCT,kBAAmB3C,EAAKlB,MAAM6D,kBAC9BC,kBAAmB5C,EAAKlB,MAAM8D,kBAC9BjC,QAASX,EAAKlB,MAAM6B,QACpB6C,iBAAkBxD,EAAKlB,MAAM0E,qBAKxB3E,KAAKC,MAAM6E,UAAU5E,KAAKmB,IAAI,SAACoF,EAAS3G,GAAV,OACrCM,EAAA,cAACe,EAAKlB,MAAMsD,WAAWS,IAAvB,CACE5C,QAASD,EAAKlB,MAAMmB,QACpBd,IAAKR,EACLkD,QAAS7B,EAAKlB,MAAM+C,QACpBO,WAAYpC,EAAKlB,MAAMsD,WACvBrD,KAAMuG,EACNrC,YAAajD,EAAKlB,MAAMmE,YACxBD,cAAehD,EAAKlB,MAAMkE,cAC1BR,MAAOxC,EAAKlB,MAAM0D,MAClBU,KAAI,GAAAiF,OAAApG,IAAM/B,EAAKlB,MAAMoE,MAAjB,CAAuBvE,IAC3BoE,cAAe/C,EAAKlB,MAAMiE,cAC1BM,WAAYrD,EAAKlB,MAAMuE,WACvBD,oBAAqBpD,EAAKlB,MAAMsE,oBAChCzC,QAASX,EAAKlB,MAAM6B,QACpB2C,WAAYtD,EAAKlB,MAAMwE,WACvBC,oBAAqBvD,EAAKlB,MAAMyE,oBAChCZ,kBAAmB3C,EAAKlB,MAAM6D,kBAC9BC,kBAAmB5C,EAAKlB,MAAM8D,kBAC9BY,iBAAkBxD,EAAKlB,MAAM0E,sBAOrC,IADA,IAAM2H,EAAY,GACTC,EAAI,EAAGA,EAAIvM,KAAKC,MAAMgE,MAAOsI,IACpCD,EAAUhE,KAAKlI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,cAGpC,IAAI1B,EAAQhF,KAAKC,MAAM6E,UAAUE,MAejC,OAdGoH,EAAOzE,OACR3C,EAAQoH,EAAOzE,OAAO3C,EAAO,SAEtBoH,EAAOI,SACdxH,EAAQoH,EAAOI,OAAOxH,SAEVyH,IAAVzH,GAAiC,OAAVA,IAAmBoH,EAAOM,aAEjD1H,EAD+B,oBAAtBoH,EAAOM,WACRN,EAAOM,aAEPN,EAAOM,YAKjBtM,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,KACGiM,EACDlM,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWgD,KAAvB,CAA4BxD,QAASA,EAAS2D,QAAQ,OAAO1B,MAAOA,GAClE5E,EAAA,cAACC,EAAA,EAAD,CACEkC,MAAKV,IAAA,CAAIyF,WAAY,kBAAqBtH,KAAKuH,gBAAgBvH,KAAKC,MAAM6E,UAAUuH,aACpF3L,QAAS,SAACC,GACRQ,EAAKlB,MAAMgF,qBAAqB9D,EAAKlB,MAAMoE,QAG7CjE,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8D,YAAlB,OAEFrH,EAAA,uBAAIgM,EAAOlL,MAAQ,QAGtBiL,UAtGmC5K,aA4G5C2K,EAAe1K,aAAe,CAC5BwB,QAAS,GACT4B,OAAQ,GACR9C,QAAS,GACTmC,MAAO,0pDCjHY0I,iNA6DD,SAAA5F,GACZhH,EAAKE,MAAMwD,UAAUmJ,cACvB7F,EAAEnG,0CAIK,WACT,IAAIiM,EAAY,GAYhB,OATEA,EAD4C,oBAAnC9M,EAAKE,MAAMwD,UAAUoJ,UACrBhL,IAAA,GAAQgL,EAAc9M,EAAKE,MAAMwD,UAAUoJ,UAAU9M,EAAKE,MAAM+E,QAEhEnD,IAAA,GAAQgL,EAAc9M,EAAKE,MAAMwD,UAAUoJ,WAGlD9M,EAAKE,MAAMwD,UAAUmJ,eACvBC,EAAU7E,OAAS,WAGdnG,IAAA,GAAK9B,EAAKE,MAAMsC,MAAUsK,qEA9EjC,QAAwCJ,IAApCzM,KAAKC,MAAMwD,UAAUiJ,kBAAkDD,IAArBzM,KAAKC,MAAM+E,OAA4C,OAArBhF,KAAKC,MAAM+E,OACjG,OAAOhF,KAAK8M,cAAc9M,KAAKC,MAAMwD,UAAUiJ,YAEjD,GAAI1M,KAAKC,MAAMwD,UAAUkE,OACvB,OAAO3H,KAAKC,MAAMwD,UAAUkE,OAAO3H,KAAKC,MAAMwG,QAAS,OAClD,GAAkC,YAA9BzG,KAAKC,MAAMwD,UAAUsJ,KAAoB,CAClD,IAAMxK,EAAQ,CAAEO,UAAW,OAAQ6D,MAAO,QAC1C,OAAI3G,KAAKC,MAAM+E,MACN5E,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMqJ,MAAlB,CAAwBzK,MAAOA,IAE/BnC,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMsJ,gBAAlB,CAAkC1K,MAAOA,IAE7C,MAAkC,SAA9BvC,KAAKC,MAAMwD,UAAUsJ,KAC1B/M,KAAKC,MAAM+E,iBAAiBkI,KACvBlN,KAAKC,MAAM+E,MAAMmI,qBAEjBnN,KAAKC,MAAM+E,MAEmB,SAA9BhF,KAAKC,MAAMwD,UAAUsJ,KAC1B/M,KAAKC,MAAM+E,iBAAiBkI,KACvBlN,KAAKC,MAAM+E,MAAMoI,qBAEjBpN,KAAKC,MAAM+E,MAEmB,aAA9BhF,KAAKC,MAAMwD,UAAUsJ,KAC1B/M,KAAKC,MAAM+E,iBAAiBkI,KACvBlN,KAAKC,MAAM+E,MAAMqI,iBAEjBrN,KAAKC,MAAM+E,MAEmB,aAA9BhF,KAAKC,MAAMwD,UAAUsJ,KACvB/M,KAAKsN,iBAAiBtN,KAAKC,MAAMwD,UAAU8J,gBAAiBvN,KAAKC,MAAM+E,OAGzEhF,KAAKC,MAAM+E,4CAGN0H,GACZ,MAA0B,oBAAfA,EACF1M,KAAKC,MAAMwD,UAAUiJ,WAAW1M,KAAKC,MAAMwG,SAE3CiG,2CAIMa,EAAiBvI,GAChC,YAAwByH,IAApBc,EACK,IAAIC,KAAKC,kBAAyChB,IAA3Bc,EAAgBG,OAAwBH,EAAgBG,OAAS,QAC7F,CACEnL,MAAO,WACPoL,cAA4ClB,IAAjCc,EAAgBK,aAA8BL,EAAgBK,aAAe,MACxFC,2BAAkEpB,IAA1Cc,EAAgBM,sBAAuCN,EAAgBM,sBAAwB,EACvHC,2BAAkErB,IAA1Cc,EAAgBO,sBAAuCP,EAAgBO,sBAAwB,IACtHC,YAAkBtB,IAAVzH,EAAuBA,EAAQ,GAErC,IAAIwI,KAAKC,aAAa,QAAS,CAAElL,MAAO,WAAYoL,SAAU,QAASI,YAAkBtB,IAAVzH,EAAuBA,EAAQ,oCA0BhH,IAAA8D,EAEsC9I,KAAKC,MAAnB+N,GAFxBlF,EAECrF,UAFDqF,EAEYrC,QAFZuC,IAAAF,EAAA,0BAIP,OACE1I,EAAA,cAACC,EAAA,EAADQ,OAAAC,OAAA,GACMkN,EADN,CAEEzL,MAAOvC,KAAKmJ,WACZ8E,OAA2D,IAApD,CAAC,WAAWC,QAAQlO,KAAKC,MAAMwD,UAAUsJ,MAAe,QAAU,OACzErM,QAASV,KAAKmO,kBAEbnO,KAAKC,MAAMmO,SACXpO,KAAKqO,yBA/F0B9M,aAqGxCoL,EAAWnL,aAAe,CACxBiC,UAAW,GACXuB,WAAOyH,+6BCvGH6B,sJAEgB,IAAAvO,EAAAC,KAClB,OACEI,EAAA,cAACC,EAAA,EAAD,CACE2E,MAAOhF,KAAKC,MAAM+E,OAAS,GAC3BiC,SAAU,SAAAtG,GAAK,OAAIZ,EAAKE,MAAMgH,SAAStG,EAAM4N,OAAOvJ,QACpDzC,MAAO,CACLvB,SAAU,KAGXH,OAAO2N,KAAKxO,KAAKC,MAAMwD,UAAU+I,QAAQnL,IAAI,SAAAf,GAAG,OAC/CF,EAAA,cAACC,EAAA,EAAD,CAAUC,IAAKA,EAAK0E,MAAO1E,GAAMP,EAAKE,MAAMwD,UAAU+I,OAAOlM,oDAOhD,IAAAa,EAAAnB,KACnB,OACEI,EAAA,cAACC,EAAA,EAAD,CACEyG,QAAS9G,KAAKC,MAAM+E,MACpBiC,SAAU,SAAAtG,GAAK,OAAIQ,EAAKlB,MAAMgH,SAAStG,EAAM4N,OAAOzH,UACpDvE,MAAO,CACL2E,YAAa,EACbtE,WAAY,EACZC,cAAe,+CAOrB,OACEzC,EAAA,cAACqO,EAAA,EAAD,CAAyBC,MAAOC,KAC9BvO,EAAA,cAACqO,EAAA,EAAD,CACEV,OAAO,aACP/I,MAAOhF,KAAKC,MAAM+E,OAAS,KAC3BiC,SAAUjH,KAAKC,MAAMgH,SACrB2H,WAAS,EACTC,WAAY,CACVtM,MAAO,CACLvB,SAAU,kDASpB,OACEZ,EAAA,cAACqO,EAAA,EAAD,CAAyBC,MAAOC,KAC9BvO,EAAA,cAACqO,EAAA,EAAD,CACEV,OAAO,WACP/I,MAAOhF,KAAKC,MAAM+E,OAAS,KAC3BiC,SAAUjH,KAAKC,MAAMgH,SACrB2H,WAAS,EACTC,WAAY,CACVtM,MAAO,CACLvB,SAAU,sDASpB,OACEZ,EAAA,cAACqO,EAAA,EAAD,CAAyBC,MAAOC,KAC9BvO,EAAA,cAACqO,EAAA,EAAD,CACEV,OAAO,sBACP/I,MAAOhF,KAAKC,MAAM+E,OAAS,KAC3BiC,SAAUjH,KAAKC,MAAMgH,SACrB2H,WAAS,EACTC,WAAY,CACVtM,MAAO,CACLvB,SAAU,kDAQJ,IAAA6D,EAAA7E,KAChB,OACEI,EAAA,cAACC,EAAA,EAAD,CACEkC,MAAqC,YAA9BvC,KAAKC,MAAMwD,UAAUsJ,KAAqB,CAAEpB,MAAO,SAAY,GACtEoB,KAAoC,YAA9B/M,KAAKC,MAAMwD,UAAUsJ,KAAqB,SAAW,OAC3DnC,YAAa5K,KAAKC,MAAMwD,UAAUvC,MAClC8D,MAAOhF,KAAKC,MAAM+E,MAClBiC,SAAU,SAAAtG,GAAK,OAAIkE,EAAK5E,MAAMgH,SAAStG,EAAM4N,OAAOvJ,QACpD6J,WAAY,CACVtM,MAAO,CACLvB,SAAU,qDAQlB,MAAO,sCA4BP,OAtBIhB,KAAKC,MAAMwD,UAAU+I,OACXxM,KAAK8O,oBAEoB,YAA9B9O,KAAKC,MAAMwD,UAAUsJ,KAChB/M,KAAK+O,qBAEoB,SAA9B/O,KAAKC,MAAMwD,UAAUsJ,KAChB/M,KAAKgP,kBAEoB,SAA9BhP,KAAKC,MAAMwD,UAAUsJ,KAChB/M,KAAKiP,kBAEoB,aAA9BjP,KAAKC,MAAMwD,UAAUsJ,KAChB/M,KAAKkP,sBAEoB,aAA9BlP,KAAKC,MAAMwD,UAAUsJ,KAChB/M,KAAKmP,sBAGLnP,KAAKoP,yBAlIC7N,aAgJT+M,sxBC9IMe,cAEnB,SAAAA,EAAYpP,GAAO,IAAAF,EAAA,OAAAyJ,IAAAxJ,KAAAqP,IACjBtP,EAAA0J,IAAAzJ,KAAA0J,IAAA2F,GAAA1F,KAAA3J,KAAMC,KAEDsK,MAAQ,CACXrK,KAAMD,EAAMC,KAAOoP,KAAKC,MAAMD,KAAKE,UAAUvP,EAAMC,OAAS,IAJ7CH,+DAQH,IAAAoB,EAAAnB,KAyBd,OAxBeA,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAS,OAAKA,EAAUC,UAAYD,EAAUJ,UAAU+B,YAAc,KAC5G/D,IAAI,SAACoC,EAAW3D,GACf,IAAMkF,EAAQ7D,EAAKoJ,MAAMrK,KAAKuD,EAAUgM,OAKxC,OAHc,IAAV3P,GACuBqB,EAAKlB,MAAMgE,MAGpC7D,EAAA,cAACC,EAAA,EAAD,CACEC,IAAKmD,EAAUJ,UAAUmD,GACzByH,OAAgD,IAAzC,CAAC,WAAWC,QAAQzK,EAAUsJ,MAAe,QAAU,QAE9D3M,EAAA,cAACsP,EAAD,CACEpP,IAAKmD,EAAUJ,UAAUmD,GACzB/C,UAAWA,EACXuB,MAAOA,EACPiC,SAAU,SAAAjC,GACR,IAAM9E,EAAI2B,IAAA,GAAQV,EAAKoJ,MAAMrK,MAC7BA,EAAKuD,EAAUgM,OAASzK,EACxB7D,EAAKwO,SAAS,CAAEzP,uDAQd,IAAA2E,EAAA7E,KACR4B,EAAYC,IAAA,GAAQwN,EAAc7N,aAAaI,aAAiB5B,KAAKC,MAAM2B,cAC3ER,EAAU,CACd,CACEb,KAAMP,KAAKC,MAAM0D,MAAMqJ,MACvB/L,QAASW,EAAagO,YACtBlP,QAAS,kBACSmE,EAAK0F,MAAMrK,KACZmD,UACfwB,EAAK5E,MAAM8D,kBAAkBc,EAAK5E,MAAM4D,KAAMgB,EAAK0F,MAAMrK,KAAM2E,EAAK5E,MAAMC,QAG9E,CACEK,KAAMP,KAAKC,MAAM0D,MAAMkM,MACvB5O,QAASW,EAAakO,cACtBpP,QAAS,WACPmE,EAAK5E,MAAM6D,kBAAkBe,EAAK5E,MAAM4D,KAAMgB,EAAK5E,MAAMC,SAI/D,OACEE,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,QAAQpG,IAAI,qBAAqBiC,MAAO,CAAEoE,MAAO,GAAKvF,EAAQY,OAAQ0E,QAAS,YAChGtG,EAAA,qBAAKmC,MAAO,CAAEqE,QAAS,SACrBxG,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWsD,QAAvB,CAA+B3G,KAAMF,KAAKC,MAAMC,KAAMkB,QAASA,yCAYrE,MALc,CAEZ2O,aAAc,kDAOhB,IAEI/M,EAFEpB,EAAYC,IAAA,GAAQwN,EAAc7N,aAAaI,aAAiB5B,KAAKC,MAAM2B,cAGjF,GAAwB,QAApB5B,KAAKC,MAAM4D,MAAsC,WAApB7D,KAAKC,MAAM4D,KAC1Cb,EAAUhD,KAAKmI,oBAEZ,CACH,IAAMpF,EAAU/C,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAS,OAAKA,EAAUC,UAAYD,EAAUJ,UAAU+B,YAAc,KAAIpD,OACpHgB,EAAU,CACR5C,EAAA,cAACC,EAAA,EAAD,CACEqG,QAAmD,IAA1C1G,KAAKC,MAAM6B,QAAQ8D,mBAA2B,YAAS6G,EAChEnM,IAAI,qBACJyC,QAASA,GACT3C,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,MACjBvJ,EAAaoO,cAWtB,GAJIhQ,KAAKC,MAAM6B,QAAQI,WACrBc,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,yBAGN,IAA3CN,KAAKC,MAAM6B,QAAQ8D,mBACrB5C,EAAQsF,KAAKtI,KAAKuI,sBACb,GAAIvI,KAAKC,MAAM6B,QAAQ8D,oBAAsB,EAAG,CACrD,IAAI4C,EAAS,EACTxI,KAAKC,MAAM6B,QAAQI,YACrBsG,EAAS,GAEXxF,EAAQoF,OAAOpI,KAAKC,MAAM6B,QAAQ8D,mBAAqB4C,EAAQ,EAAGxI,KAAKuI,iBAIrEvI,KAAKC,MAAMmE,aACbpB,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,2BAGrDN,KAAKC,MAAM+C,QACRb,OAAO,SAAAsB,GAAS,OAAIA,EAAUJ,UAAU+B,YAAc,IACtDyD,QAAQ,SAAApF,GACPT,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAK,iBAAmBmD,EAAUJ,UAAUmD,QA5CxF,IAAAsC,EAyDH9I,KAAKC,MADJ8I,GAxDED,EAgDL1E,YAhDK0E,EAiDLrE,WAjDKqE,EAkDLtE,WAlDKsE,EAmDL5E,cAnDK4E,EAoDLpE,oBApDKoE,EAqDLvE,oBArDKuE,EAsDL/E,kBAtDK+E,EAuDLhF,kBAvDKkF,IAAAF,EAAA,gJA2DP,OACE1I,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAADQ,OAAAC,OAAA,GACMiI,EADN,CAEExG,MAAOvC,KAAKmJ,aAEXnG,WA7IgCzB,aAoJ3C8N,EAAc7N,aAAe,CAC3BJ,QAAS,GACTtB,MAAO,EACPgC,QAAS,GACTuC,KAAM,GACNzC,aAAc,CACZgO,YAAa,OACbE,cAAe,SACfE,WAAY,0+CCxJhB,IAEMC,EAAY,CAChBC,WAAY,CACV3N,MAAO,CACL4N,UAAWC,IACXzJ,MAAO,OAKP0J,2NACiB,SAAC5M,GAAD,OACnBrD,EAAA,cAACC,EAAA,EAAD,CAAakC,MAAO,CAAEoE,MAAO,SAC3BvG,EAAA,cAACC,EAAA,EAAD,CACEiQ,UAAQ,EACRtL,MAAOvB,EAAUJ,UAAUkN,aAAe,GAC1CtJ,SAAU,SAAAtG,GACRZ,EAAKE,MAAM4F,gBAAgBpC,EAAUJ,UAAUmD,GAAI7F,EAAM4N,OAAOvJ,QAElEwL,MAAOpQ,EAAA,cAACC,EAAA,EAAD,CAAOmG,GAAG,6BACjBiK,YAAa,SAAAC,GAAS,OAAIA,EAAUrP,IAAI,SAAA4H,GAAQ,OAAIxF,EAAU+I,OAAOvD,KAAW0H,KAAK,OACrFV,UAAWA,GAGTpP,OAAO2N,KAAK/K,EAAU+I,QAAQnL,IAAI,SAAAf,GAAG,OACnCF,EAAA,cAACC,EAAA,EAAD,CAAUC,IAAKA,EAAK0E,MAAO1E,GACzBF,EAAA,cAACC,EAAA,EAAD,CAAUyG,UAASrD,EAAUJ,UAAUkN,aAAc9M,EAAUJ,UAAUkN,YAAYrC,QAAQ5N,EAAI0G,aAAe,IAChH5G,EAAA,cAACC,EAAA,EAAD,CAAcuQ,QAASnN,EAAU+I,OAAOlM,6CAQ9B,SAACmD,GAAD,OACpBrD,EAAA,cAACC,EAAA,EAAD,CACEwQ,mBAAmDpE,IAApChJ,EAAUJ,UAAUkN,YACnCzJ,QAA6C,YAApCrD,EAAUJ,UAAUkN,YAC7BtJ,SAAU,WACR,IAAI6J,OACoCrE,IAApChJ,EAAUJ,UAAUkN,YACtBO,EAAM,UACuC,YAApCrN,EAAUJ,UAAUkN,cAC7BO,EAAM,aAGR/Q,EAAKE,MAAM4F,gBAAgBpC,EAAUJ,UAAUmD,GAAIsK,yCAKnC,SAACrN,GACrB,IAAM7B,EAAYC,IAAA,GAAQwO,EAAgB7O,aAAaI,aAAiB7B,EAAKE,MAAM2B,cACnF,OACExB,EAAA,cAACC,EAAA,EAAD,CACEkC,MAA0B,YAAnBkB,EAAUsJ,KAAqB,CAAEpB,MAAO,SAAY,GAC3DoB,KAAyB,YAAnBtJ,EAAUsJ,KAAqB,SAAW,OAChD/H,MAAOvB,EAAUJ,UAAUkN,aAAe,GAC1CtJ,SAAU,SAACtG,GACTZ,EAAKE,MAAM4F,gBAAgBpC,EAAUJ,UAAUmD,GAAI7F,EAAM4N,OAAOvJ,QAElE6J,WAAY,CACVkC,eACE3Q,EAAA,cAACC,EAAA,EAAD,CAAgB2Q,SAAS,SACvB5Q,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAaqP,eAC3B7Q,EAAA,cAACe,EAAKlB,MAAM0D,MAAMuN,OAAlB,+CASS,SAACzN,GACtB,IAAI0N,EAAmB,KACjBC,EAAoB,SAAAC,GAAI,OAAItR,EAAKE,MAAM4F,gBAAgBpC,EAAUJ,UAAUmD,GAAI6K,IA4BrF,MA1BuB,SAAnB5N,EAAUsJ,KACZoE,EACE/Q,EAAA,cAACqO,EAAA,EAAD,CACEzJ,MAAOvB,EAAUJ,UAAUkN,aAAe,KAC1CtJ,SAAUmK,EACVxC,WAAS,IAGe,aAAnBnL,EAAUsJ,KACnBoE,EACE/Q,EAAA,cAACqO,EAAA,EAAD,CACEzJ,MAAOvB,EAAUJ,UAAUkN,aAAe,KAC1CtJ,SAAUmK,EACVxC,WAAS,IAGe,SAAnBnL,EAAUsJ,OACnBoE,EACE/Q,EAAA,cAACqO,EAAA,EAAD,CACEzJ,MAAOvB,EAAUJ,UAAUkN,aAAe,KAC1CtJ,SAAUmK,EACVxC,WAAS,KAMbxO,EAAA,cAACqO,EAAA,EAAD,CAAyBC,MAAOC,KAC7BwC,0EAKe1N,GACpB,OAA4B,IAAxBA,EAAU+B,UACL,KAGL/B,EAAUgM,MACRhM,EAAU+I,OACLxM,KAAKsR,mBAAmB7N,GACH,YAAnBA,EAAUsJ,KACZ/M,KAAKuR,oBAAoB9N,GACvB,CAAC,OAAQ,WAAY,QAAQ+N,SAAS/N,EAAUsJ,MAClD/M,KAAKyR,qBAAqBhO,GAE1BzD,KAAK0R,oBAAoBjO,QARpC,mCAaO,IAAAoB,EAAA7E,KACDgD,EAAUhD,KAAKC,MAAM+C,QACxBb,OAAO,SAAAsB,GAAS,OAAKA,EAAUC,UAAYD,EAAUJ,UAAU+B,YAAc,KAC7E/D,IAAI,SAAAoC,GAAS,OACZrD,EAAA,cAACC,EAAA,EAAD,CAAWC,IAAKmD,EAAUJ,UAAUmD,IACjC3B,EAAK8M,sBAAsBlO,MAWlC,GAPIzD,KAAKC,MAAMiC,WACbc,EAAQoF,OAAO,EAAG,EAChBhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,wBAC5BF,EAAA,cAACC,EAAA,EAAD,CAAU4G,SAAUjH,KAAKC,MAAM6F,6BAIjC9F,KAAKC,MAAMyF,WAAa1F,KAAKC,MAAM0F,WACrC,IAAuC,IAAnC3F,KAAKC,MAAM2F,mBACb5C,EAAQsF,KAAKlI,EAAA,cAACC,EAAA,EAAD,CAAWC,IAAI,2BACvB,CACL,IAAIkI,EAAS,EACTxI,KAAKC,MAAMiC,YACbsG,EAAS,GAEXxF,EAAQoF,OAAOpI,KAAKC,MAAM2F,mBAAqB4C,EAAQ,EAAGpI,EAAA,cAACC,EAAA,EAAD,CAAWC,IAAI,uBAuB7E,OAnBIN,KAAKC,MAAMqC,gBACbU,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,OAAOpG,IAAI,6BAGjDN,KAAKC,MAAMwE,WAAa,GAC1BzB,EAAQoF,OAAO,EAAG,EAChBhI,EAAA,cAACC,EAAA,EAAD,CACEqG,QAAQ,OACRpG,IAAK,0BAKXN,KAAKC,MAAM+C,QACRb,OAAO,SAAAsB,GAAS,OAAIA,EAAUJ,UAAU+B,YAAc,IACtDyD,QAAQ,SAAApF,GACPT,EAAQoF,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,WAAWpG,IAAK,mBAAqBmD,EAAUJ,UAAUmD,QAInGpG,EAAA,cAACC,EAAA,EAAD,CAAUkC,MAAO,CAAEC,OAAQ,KACxBQ,UAzKqBzB,aA+K9B8O,EAAgB7O,aAAe,CAC7BkE,WAAW,EACX1C,QAAS,GACTd,WAAW,EACXyD,YAAY,EACZ/D,aAAc,CACZqP,cAAe,WAiBJZ,48CCnNTuB,6MACU,CACZZ,SAAU,SACVa,IAAK,EACLC,OAAQ,GACRC,gBAAiB,wEAGJ,IAAA5Q,EAAAnB,KA0Cb,OAzCeA,KAAKC,MAAM+C,QAAQb,OAAO,SAAAsB,GAAS,OAAKA,EAAUC,UAAYD,EAAUJ,UAAU+B,YAAc,KAC5G/D,IAAI,SAACoC,EAAW3D,GAAZ,OACHM,EAAA,cAACC,EAAA,EAAD,CACEC,IAAKmD,EAAUJ,UAAUmD,GACzByH,OAAgD,IAAzC,CAAC,WAAWC,QAAQzK,EAAUsJ,MAAe,QAAU,OAE9DxK,MAAKV,IAAA,GAAOV,EAAKlB,MAAM+R,YAAgBvO,EAAUuO,YAAgB7Q,EAAK8Q,eAEjD,IAAnBxO,EAAU4B,OAAwC,IAAtB5B,EAAUyO,SAAqB/Q,EAAKlB,MAAMiS,QACpE9R,EAAA,cAACC,EAAA,EAAD,CACA8R,OAAQhR,EAAKlB,MAAMmS,UAAY3O,EAAUJ,UAAUmD,GACnDmE,UAAWxJ,EAAKlB,MAAMoS,gBAAkB,MACxC3R,QAAS,WACP,IAAM2R,EAAiB5O,EAAUJ,UAAUmD,KAAOrF,EAAKlB,MAAMmS,QAAU,MAAsC,QAA9BjR,EAAKlB,MAAMoS,eAA2B,OAAS,MAC9HlR,EAAKlB,MAAMqS,cAAc7O,EAAUJ,UAAUmD,GAAI6L,KAGjDlR,EAAKlB,MAAMsS,UAAY9O,EAAUgM,MAC/BrP,EAAA,cAACqK,EAAA,EAAD,CACAnK,IAAKmD,EAAUJ,UAAUmD,GACzB6E,YAAa5H,EAAUJ,UAAUmD,GAAGQ,WACpCwL,gBAAuC,IAAvB/O,EAAU8O,SAC1BzS,MAAOA,GACN,SAAC+K,EAAUC,GAAX,OACC1K,EAAA,oBAAAS,OAAAC,OAAA,CACEiK,IAAKF,EAASG,UACVH,EAASS,eACTT,EAASU,iBAGZ9H,EAAUvC,SAIfuC,EAAUvC,OAGduC,EAAUvC,uDAQpB,IAAMU,EAAYC,IAAA,GAAQ+P,EAAapQ,aAAaI,aAAiB5B,KAAKC,MAAM2B,cAChF,OACExB,EAAA,cAACC,EAAA,EAAD,CACEC,IAAI,qBACJoG,QAAQ,WACRnE,MAAKV,IAAA,GAAO7B,KAAKC,MAAM+R,YAAlB,CAA+BlP,UAAW,UAAa9C,KAAKiS,cAEjE7R,EAAA,cAACC,EAAA,EAAD,KAAiBuB,EAAaR,0DAIZ,IAAAyD,EAAA7E,KACtB,OACEI,EAAA,cAACC,EAAA,EAAD,CACEqG,QAAQ,OACRpG,IAAI,uBACJiC,MAAKV,IAAA,GAAO7B,KAAKC,MAAM+R,YAAgBhS,KAAKiS,cAE5C7R,EAAA,cAACC,EAAA,EAAD,CACEwQ,cAAe7Q,KAAKC,MAAMwS,cAAgB,GAAKzS,KAAKC,MAAMwS,cAAgBzS,KAAKC,MAAMyS,UACrF5L,QAAS9G,KAAKC,MAAMwS,gBAAkBzS,KAAKC,MAAMyS,UACjDzL,SAAU,SAACtG,EAAOmG,GAAR,OAAoBjC,EAAK5E,MAAM0S,eAAiB9N,EAAK5E,MAAM0S,cAAc7L,wCAKlF,IAAA5B,EAAAlF,KACD4S,EAAU5S,KAAK6S,eAKrB,GAJI7S,KAAKC,MAAM6S,cAAgB9S,KAAKC,MAAMyS,WACxCE,EAAQxK,OAAO,EAAG,EAAGpI,KAAK+S,yBAGxB/S,KAAKC,MAAM+S,kBACb,GAAIhT,KAAKC,MAAMgT,oBAAsB,EAAG,CACtC,IAAIzK,EAAS,EACTxI,KAAKC,MAAM6S,eACbtK,EAAS,GAEXoK,EAAQxK,OAAOpI,KAAKC,MAAMgT,mBAAqBzK,EAAQ,EAAGxI,KAAKkT,4BACnB,IAAnClT,KAAKC,MAAMgT,oBACpBL,EAAQtK,KAAKtI,KAAKkT,uBA8BtB,OA1BIlT,KAAKC,MAAMqC,gBACbsQ,EAAQxK,OAAO,EAAG,EAChBhI,EAAA,cAACC,EAAA,EAAD,CACEqG,QAAQ,OACRpG,IAAI,0BACJiC,MAAKV,IAAA,GAAO7B,KAAKC,MAAM+R,YAAgBhS,KAAKiS,gBAK9CjS,KAAKC,MAAMwE,WAAa,GAC1BmO,EAAQxK,OAAO,EAAG,EAChBhI,EAAA,cAACC,EAAA,EAAD,CACEqG,QAAQ,OACRpG,IAAK,uBACLiC,MAAKV,IAAA,GAAO7B,KAAKC,MAAM+R,YAAgBhS,KAAKiS,gBAKlDjS,KAAKC,MAAM+C,QACRb,OAAO,SAAAsB,GAAS,OAAIA,EAAUJ,UAAU+B,YAAc,IACtDyD,QAAQ,SAAApF,GACPmP,EAAQxK,OAAO,EAAG,EAAGhI,EAAA,cAACC,EAAA,EAAD,CAAWqG,QAAQ,WAAWpG,IAAK,mBAAqBmD,EAAUJ,UAAUmD,GAAIjE,MAAO2C,EAAK+M,iBAInH7R,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,KACGuS,WA/HgBrR,aAsI3BqQ,EAAapQ,aAAe,CAC1BkR,UAAW,EACXI,cAAc,EACdd,YAAa,GACbS,cAAe,EACfP,SAAS,EACTtQ,aAAc,CACZR,QAAS,WAEXgR,aAAS3F,EACT4F,eAAgB,MAChBY,mBAAoB,GAoBPrB,miDCzKTuB,4NACyB,SAAAxS,GAC3BZ,EAAKE,MAAMmT,aAAazS,EAAO,wCAGT,SAAAA,GACtBZ,EAAKE,MAAMmT,aAAazS,EAAOZ,EAAKE,MAAMoT,KAAO,wCAG3B,SAAA1S,GACtBZ,EAAKE,MAAMmT,aAAazS,EAAOZ,EAAKE,MAAMoT,KAAO,4CAGvB,SAAA1S,GAC1BZ,EAAKE,MAAMmT,aACTzS,EACA2S,KAAKC,IAAI,EAAGD,KAAKE,KAAKzT,EAAKE,MAAMwT,MAAQ1T,EAAKE,MAAMyT,aAAe,8DAI9D,IAAA5K,EAC8C9I,KAAKC,MAAlD0T,EADD7K,EACC6K,QAASF,EADV3K,EACU2K,MAAOJ,EADjBvK,EACiBuK,KAAMK,EADvB5K,EACuB4K,YAAaE,EADpC9K,EACoC8K,MAErChS,EAAYC,IAAA,GAAQsR,EAAsB3R,aAAaI,aAAiB5B,KAAKC,MAAM2B,cAEzF,OACExB,EAAA,qBAAKyT,UAAWF,EAAQG,MACtB1T,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAamS,cAC3B3T,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAKgU,2BACdvT,SAAmB,IAAT4S,EACVY,aAAYrS,EAAasS,gBAEH,QAApBN,EAAMjJ,UAAsBvK,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMwQ,SAAlB,MAAgC/T,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMyQ,UAAlB,SAIpEhU,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAayS,iBAC3BjU,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAKsU,sBACd7T,SAAmB,IAAT4S,EACVY,aAAYrS,EAAa2S,mBAEH,QAApBX,EAAMjJ,UAAsBvK,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM6Q,SAAlB,MAAgCpU,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8Q,aAAlB,SAIpErU,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAa8S,aAC3BtU,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAK2U,sBACdlU,SAAU4S,GAAQC,KAAKE,KAAKC,EAAQC,GAAe,EACnDO,aAAYrS,EAAagT,eAEH,QAApBhB,EAAMjJ,UAAsBvK,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8Q,aAAlB,MAAoCrU,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM6Q,SAAlB,SAIxEpU,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAaiT,aAC3BzU,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAK8U,0BACdrU,SAAU4S,GAAQC,KAAKE,KAAKC,EAAQC,GAAe,EACnDO,aAAYrS,EAAamT,eAEH,QAApBnB,EAAMjJ,UAAsBvK,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMyQ,UAAlB,MAAiChU,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMwQ,SAAlB,iBAnEzC5S,aA+FpC4R,EAAsB3R,aAAe,CACnCI,aAAc,CACZmS,aAAc,aACdM,gBAAiB,gBACjBK,YAAa,YACbG,YAAa,YACbG,mBAAoB,yBACpBC,iBAAkB,mBAItB,IAEeC,EAFUC,qBA9BH,SAAAvB,GAAK,MAAK,CAC9BE,KAAM,CACJsB,WAAY,EACZ5U,MAAOoT,EAAMyB,QAAQC,KAAKC,UAC1B7M,WAAgC,QAApBkL,EAAMjJ,UAAsB,EAAyB,IAArBiJ,EAAM4B,QAAQC,KAC1DC,YAAiC,QAApB9B,EAAMjJ,UAA2C,IAArBiJ,EAAM4B,QAAQC,KAAa,KAyBrB,CAAEE,WAAW,GAAvCR,CAA+ChC,6qCC1GlEA,4NACyB,SAAAxS,GAC3BZ,EAAKE,MAAMmT,aAAazS,EAAO,wCAGT,SAAAA,GACtBZ,EAAKE,MAAMmT,aAAazS,EAAOZ,EAAKE,MAAMoT,KAAO,wCAG3B,SAAA1S,GACtBZ,EAAKE,MAAMmT,aAAazS,EAAOZ,EAAKE,MAAMoT,KAAO,0CAGzB,SAAAuC,GAAM,OAAI,SAAAjV,GAClCZ,EAAKE,MAAMmT,aAAazS,EAAOiV,6CAGL,SAAAjV,GAC1BZ,EAAKE,MAAMmT,aACTzS,EACA2S,KAAKC,IAAI,EAAGD,KAAKE,KAAKzT,EAAKE,MAAMwT,MAAQ1T,EAAKE,MAAMyT,aAAe,8DAI9D,IAAA5K,EACuC9I,KAAKC,MAA3C0T,EADD7K,EACC6K,QAASF,EADV3K,EACU2K,MAAOJ,EADjBvK,EACiBuK,KAAMK,EADvB5K,EACuB4K,YAExB9R,EAAYC,IAAA,GAAQsR,EAAsB3R,aAAaI,aAAiB5B,KAAKC,MAAM2B,cACnFiU,EAAWvC,KAAKE,KAAKC,EAAQC,GAAe,EAClD,OACEtT,EAAA,qBAAKyT,UAAWF,EAAQG,MACtB1T,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAayS,iBAC3BjU,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAKsU,sBACd7T,SAAmB,IAAT4S,EACVY,aAAYrS,EAAa2S,mBAEzBnU,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8Q,aAAlB,SAINrU,EAAA,cAACC,EAAA,EAAD,CAAQyV,QAAQ,GACd1V,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAKgU,2BACdC,aAAYrS,EAAasS,gBAC1B9T,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAkB,IAATkI,EAAa,KAAO,SAAzC,OACAA,EAAO,GAAKjT,EAAA,gCACZiT,EAAO,GAAKjT,EAAA,0BAAMA,EAAA,cAACC,EAAA,EAAD,CACfK,QAASV,KAAK+V,wBAAwB1C,EAAK,GAC3CY,aAAYrS,EAAamT,eAC1B3U,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,SAASkI,KAC/BA,EAAO,GAAKA,EAAOwC,GAAWzV,EAAA,8BAAOA,EAAA,cAACC,EAAA,EAAD,CAClCK,QAASV,KAAK+V,wBAAwB1C,GACtCY,aAAYrS,EAAamT,eAE3B3U,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,MAAMkI,EAAO,KAElCA,EAAOwC,EAAU,GAAKzV,EAAA,0BAAMA,EAAA,cAACC,EAAA,EAAD,CACzBK,QAASV,KAAK+V,wBAAwB1C,EAAK,GAC3CY,aAAYrS,EAAamT,eAC1B3U,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,SAASkI,EAAO,KACpCA,EAAOwC,EAAU,GAAKzV,EAAA,gCACxByV,EAAW,GAAKzV,EAAA,8BAAOA,EAAA,cAACC,EAAA,EAAD,CACpBK,QAASV,KAAK8U,0BACdb,aAAYrS,EAAamT,eAE3B3U,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAASkI,IAASwC,EAAW,KAAO,SAAUA,EAAW,MAG3EzV,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAa8S,aAC3BtU,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CACEK,QAASV,KAAK2U,sBACdlU,SAAU4S,GAAQwC,EAClB5B,aAAYrS,EAAagT,eAEzBxU,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM6Q,SAAlB,iBA9EsBjT,aAwGpC4R,EAAsB3R,aAAe,CACnCI,aAAc,CACZyS,gBAAiB,gBACjBK,YAAa,YACbM,mBAAoB,yBACpBC,iBAAkB,mBAItB,IAEeC,EAFUC,qBA1BH,SAAAvB,GAAK,MAAK,CAC9BE,KAAM,CACJsB,WAAY,EACZ5U,MAAOoT,EAAMyB,QAAQC,KAAKC,UAC1B7M,WAAiC,IAArBkL,EAAM4B,QAAQC,QAsBqB,CAAEE,WAAW,GAAvCR,CAA+ChC,u0CC9GlE6C,eACJ,SAAAA,EAAY/V,GAAO,IAAAF,EAAA,OAAAyJ,IAAAxJ,KAAAgW,GACjBjW,EAAA0J,IAAAzJ,KAAA0J,IAAAsM,GAAArM,KAAA3J,KAAMC,IADW2J,IAAAC,IAAA9J,GAAA,YAQP,WACV,IAAMiD,EAAUjD,EAAKE,MAAM+C,QACxBb,OAAO,SAAAsB,GACN,OAAQA,EAAUC,QAAUD,EAAUgM,QAA8B,IAArBhM,EAAUwS,SAGvD/V,EAAOH,EAAKE,MAAM0B,WAAWN,IAAI,SAAAoF,GAAO,OAC5CzD,EAAQ3B,IAAI,SAAAoC,GAAS,OAAIgD,EAAQhD,EAAUgM,WAI7B,IAAIyG,eAAYnW,EAAKE,MAAMkW,gBAAkBpW,EAAKE,MAAMiB,OAAS,QAAU,QACxFkV,aAAarW,EAAKE,MAAMoW,iBACxBC,WAAWtT,EAAQ3B,IAAI,SAAAoC,GAAS,OAAIA,EAAUvC,SAC9CqV,QAAQrW,GACRsW,aAEHzW,EAAK4P,SAAS,CAAE8G,qBAAsB,SAvBtC1W,EAAKwK,MAAQ,CACXmM,sBAAuB,KACvBD,qBAAsB,MAJP1W,8DA4BJ,IAAAoB,EAAAnB,KACP4B,EAAYC,IAAA,GAAQmU,EAAcxU,aAAaI,aAAiB5B,KAAKC,MAAM2B,cACjF,OAAI5B,KAAKC,MAAM0W,OAEXvW,EAAA,cAACC,EAAA,EAAD,CACEwT,UAAW7T,KAAKC,MAAM0T,QAAQiD,YAC9B5R,MAAOhF,KAAKC,MAAM4W,WAClB5P,SAAU,SAAAtG,GAAK,OAAIQ,EAAKlB,MAAM6W,gBAAgBnW,EAAM4N,OAAOvJ,QAC3DxE,MAAM,UACNqO,WAAY,CACVkC,eACE3Q,EAAA,cAACC,EAAA,EAAD,CAAgB2Q,SAAS,SACvB5Q,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAamV,eAC3B3W,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMqT,OAAlB,CAAyBxW,MAAM,UAAUQ,SAAS,YAIxDiW,aACE7W,EAAA,cAACC,EAAA,EAAD,CAAgB2Q,SAAS,OACvB5Q,EAAA,cAACC,EAAA,EAAD,CACEI,UAAWT,KAAKC,MAAM4W,WACtBnW,QAAS,kBAAMS,EAAKlB,MAAM6W,gBAAgB,MAE1C1W,EAAA,cAAAJ,KAAMC,MAAM0D,MAAMuT,YAAlB,CAA8B1W,MAAM,UAAUQ,SAAS,YAI7DuB,MAAOvC,KAAKC,MAAMkX,oBAMjB,oDAIY,IAAAtS,EAAA7E,KACf4B,EAAYC,IAAA,GAAQmU,EAAcxU,aAAaI,aAAiB5B,KAAKC,MAAM2B,cACjF,OACExB,EAAA,yBACGJ,KAAKoX,eACLpX,KAAKC,MAAMoX,eACVjX,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAa0V,kBAC3BlX,EAAA,cAACC,EAAA,EAAD,CACEG,MAAM,UACNE,QAAS,SAAAC,GAAK,OAAIkE,EAAK8K,SAAS,CAAE+G,sBAAuB/V,EAAM4W,iBAC/DtD,aAAYrS,EAAa4V,sBAEzBpX,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM8T,WAAlB,QAGJrX,EAAA,cAACC,EAAA,EAAD,CACEqX,SAAU1X,KAAKuK,MAAMmM,sBACrBiB,KAAMC,QAAQ5X,KAAKuK,MAAMmM,uBACzBmB,QAAS,kBAAMhT,EAAK8K,SAAS,CAAE+G,sBAAuB,SACtDtW,EAAA,cAACC,EAAA,EAAD,CAAUC,IAAK,OAAQG,UAAQ,EAAC8B,MAAO,CAAE0F,QAAS,EAAG6P,WAAY,IAAK9W,SAAU,KAC7EY,EAAamW,kBAGd/X,KAAKC,MAAM+C,QAAQ3B,IAAI,SAAC8D,EAAKrF,GAC3B,OACEM,EAAA,cAACC,EAAA,EAAD,CAAUC,IAAK6E,EAAI9B,UAAUmD,GAAI/F,UAA4B,IAAlB0E,EAAI6S,WAC7C5X,EAAA,cAACC,EAAA,EAAD,CACEqL,MAAOvG,EAAIjE,MACX+W,QACE7X,EAAA,cAACC,EAAA,EAAD,CACEyG,SAAU3B,EAAIzB,OACduD,SAAU,SAACtG,EAAOmG,GAChBjC,EAAK5E,MAAMiY,iBAAiB/S,EAAI9B,UAAUmD,IAAKM,aAYpE9G,KAAKC,MAAMkY,cACV/X,EAAA,0BACEA,EAAA,cAACC,EAAA,EAAD,CAASa,MAAOU,EAAawW,aAC3BhY,EAAA,cAACC,EAAA,EAAD,CACEG,MAAM,UACNE,QAAS,SAAAC,GAAK,OAAIkE,EAAK8K,SAAS,CAAE8G,qBAAsB9V,EAAM4W,iBAC9DtD,aAAYrS,EAAayW,iBACzBjY,EAAA,cAAAJ,KAAMC,MAAM0D,MAAM2U,OAAlB,QAGJlY,EAAA,cAACC,EAAA,EAAD,CACEqX,SAAU1X,KAAKuK,MAAMkM,qBACrBkB,KAAMC,QAAQ5X,KAAKuK,MAAMkM,sBACzBoB,QAAS,kBAAMhT,EAAK8K,SAAS,CAAE8G,qBAAsB,SAErDrW,EAAA,cAACC,EAAA,EAAD,CAAUC,IAAI,aAAaI,QAASV,KAAKuY,WACtC3W,EAAa4W,cAMtBpY,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWsD,QAAvB,CAA+BzF,QAASpB,KAAKC,MAAMmB,SAAWpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAIA,EAAEC,kEAMnG,OACEjC,EAAA,cAACA,EAAA,SAAD,KACGJ,KAAKoX,eACNhX,EAAA,cAAAJ,KAAMC,MAAMsD,WAAWsD,QAAvB,CAA+BzF,QAASpB,KAAKC,MAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAenC,KAAMF,KAAKC,MAAMwY,wDAM9G,OACErY,EAAA,yBACGJ,KAAKC,MAAMwY,cAAgBzY,KAAKC,MAAMwY,aAAazW,OAAS,EACzDhC,KAAK0Y,wBACL1Y,KAAK2Y,yDAMN,IACChF,EAAY3T,KAAKC,MAAjB0T,QACF/R,EAAYC,IAAA,GAAQmU,EAAcxU,aAAaI,aAAiB5B,KAAKC,MAAM2B,cAC3EV,EAAQlB,KAAKC,MAAM2Y,UAAa5Y,KAAKC,MAAMwY,cAAgBzY,KAAKC,MAAMwY,aAAazW,OAAS,EAAIJ,EAAaiX,cAAcC,QAAQ,MAAO9Y,KAAKC,MAAMwY,aAAazW,QAAUhC,KAAKC,MAAMiB,MAAS,KACtM,OACEd,EAAA,cAACC,EAAA,EAAD,CAASwT,UAAWkF,KAAWpF,EAAQG,KAATlK,IAAA,GAAkB+J,EAAQqF,UAAYhZ,KAAKC,MAAMwY,cAAgBzY,KAAKC,MAAMwY,aAAazW,OAAS,KAC7Hd,GAASd,EAAA,qBAAKyT,UAAWF,EAAQzS,OAChCd,EAAA,cAACC,EAAA,EAAD,CAAY8K,QAAQ,MAAMjK,IAEW,UAAtClB,KAAKC,MAAMgZ,wBAAsC7Y,EAAA,qBAAKyT,UAAWF,EAAQuF,SAC1E9Y,EAAA,qBAAKyT,UAAWF,EAAQvS,SACrBpB,KAAKuI,yBAzKYhH,aAgL5ByU,GAAcxU,aAAe,CAC3BJ,QAAS,GACT4B,QAAS,GACTqU,eAAe,EACfzV,aAAc,CACZmW,iBAAkB,wBAClBc,cAAe,sBACfvB,iBAAkB,eAClBE,qBAAsB,eACtBY,YAAa,SACbC,gBAAiB,SACjBG,WAAY,gBACZzB,cAAe,UAEjBJ,QAAQ,EACRiC,WAAW,EACXK,uBAAwB,QACxBpC,WAAY,GACZ4B,aAAc,GACdvX,MAAO,aAwBT,IA4BeiU,wBA5BA,SAAAvB,GAAK,MAAK,CACvBE,KAAM,CACJqF,aAAcvF,EAAM4B,QAAQC,MAE9BuD,UACyB,UAAvBpF,EAAMyB,QAAQtI,KACV,CACAvM,MAAOoT,EAAMyB,QAAQE,UAAU6D,KAC/BrH,gBAAiBsH,kBAAQzF,EAAMyB,QAAQE,UAAU+D,MAAO,MAExD,CACA9Y,MAAOoT,EAAMyB,QAAQC,KAAK1E,QAC1BmB,gBAAiB6B,EAAMyB,QAAQE,UAAUgE,MAE/CL,OAAQ,CACNM,KAAM,WAERpY,QAAS,CACPZ,MAAOoT,EAAMyB,QAAQC,KAAKC,WAE5BrU,MAAO,CACLsY,KAAM,YAER5C,YAAa,CACX1P,YAAkC,EAArB0M,EAAM4B,QAAQC,QAIhBN,CAAmBa,qxEC9PbyD,cAmCnB,SAAAA,IAAc,IAAA1Z,EAAAC,KAAAwJ,IAAAxJ,KAAAyZ,GAAA7P,IAAA5J,KAAA,gBAlCC,GAkCD4J,IAAA5J,KAAA,eAjCA,GAiCA4J,IAAA5J,KAAA,cAhCA,GAgCA4J,IAAA5J,KAAA,kBA/BI,YA+BJ4J,IAAA5J,KAAA,0BA9BW,GA8BX4J,IAAA5J,KAAA,0BA7BOyM,GA6BP7C,IAAA5J,KAAA,sBA5BGyM,GA4BH7C,IAAA5J,KAAA,WA3BH,GA2BG4J,IAAA5J,KAAA,iBA1BG,IA0BH4J,IAAA5J,KAAA,WAzBH,GAyBG4J,IAAA5J,KAAA,UAxBL,GAwBK4J,IAAA5J,KAAA,aAvBD,MAuBC4J,IAAA5J,KAAA,aAtBD,IAsBC4J,IAAA5J,KAAA,gBArBE,GAqBF4J,IAAA5J,KAAA,qBApBO,GAoBP4J,IAAA5J,KAAA,OAlBP,IAkBO4J,IAAA5J,KAAA,UAjBJ,IAiBI4J,IAAA5J,KAAA,eAfC,IAeD4J,IAAA5J,KAAA,eAdC,IAcD4J,IAAA5J,KAAA,cAbA,IAaA4J,IAAA5J,KAAA,eAZC,IAYD4J,IAAA5J,KAAA,aAXD,IAWC4J,IAAA5J,KAAA,YAVF,IAUE4J,IAAA5J,KAAA,aATD,IASC4J,IAAA5J,KAAA,YAPH,GAOG4J,IAAA5J,KAAA,YANH,GAMG4J,IAAA5J,KAAA,WALJ,GAKI4J,IAAA5J,KAAA,YAJH,GAIG4J,IAAA5J,KAAA,UAHL,GAGK4J,IAAA5J,KAAA,SAFN,GAEM4J,IAAA5J,KAAA,iBA0PG,SAAC2B,EAAY0C,GAC5B,GAAItE,EAAK2Z,WAAW,QAKlB,OAJarV,EAAKsV,OAAO,SAACC,EAAQC,GAChC,OAAOD,EAAOvW,UAAUoF,UAAUoR,IACjC,CAAExW,UAAW,CAAEoF,UAAW9G,KAK7B,IAAMzB,EAAO,CAAE0E,OAAQjD,GAavB,OAXa0C,EAAKsV,OAAO,SAACC,EAAQC,GAChC,OAAID,EAAOhV,OAAO5C,OAAS,EAClB4X,EAAOhV,OAAOiV,GAEdD,EAAO1Z,KACP0Z,EAAO1Z,KAAK2Z,QAGnB,GAED3Z,KA/QO0J,IAAA5J,KAAA,gBAkSE,SAACyG,EAAShD,GACxB,IAAIuB,EAA6C,qBAA7ByB,EAAQhD,EAAUgM,OAAyBhJ,EAAQhD,EAAUgM,OAAS1P,EAAK+Z,SAASrT,EAAShD,EAAUgM,OAK3H,OAJIhM,EAAU+I,SACZxH,EAAQvB,EAAU+I,OAAOxH,IAGpBA,IAxSK4E,IAAA5J,KAAA,iBA0WG,WAyBf,OAxBsB,IAAlBD,EAAKga,UACPha,EAAKia,cAGe,IAAlBja,EAAKka,UACPla,EAAKma,cAGc,IAAjBna,EAAKoa,SAAqBpa,EAAK2Z,WAAW,UAC5C3Z,EAAK+E,aAGe,IAAlB/E,EAAKqa,UAAsBra,EAAK2Z,WAAW,SAC7C3Z,EAAKsa,cAGa,IAAhBta,EAAKua,QACPva,EAAKwa,YAGY,IAAfxa,EAAKya,OACPza,EAAK0a,WAGA,CACLzX,QAASjD,EAAKiD,QACdsB,YAAavE,EAAKuE,YAClBpE,KAAMH,EAAK2a,WACXC,eAAgB5a,EAAK4a,eACrBvI,QAASrS,EAAKqS,QACdC,eAAgBtS,EAAKsS,eACrBuI,aAAc7a,EAAKG,KACnByC,SAAU5C,EAAK4C,SACfhB,WAAY5B,EAAK8a,UACjBhE,WAAY9W,EAAK8W,WACjBpE,cAAe1S,EAAK0S,cACpBqI,mBAAoB/a,EAAK+a,sBA/YflR,IAAA5J,KAAA,aAuZD,WACXD,EAAKka,SAAWla,EAAKoa,QAAUpa,EAAKqa,SAAWra,EAAKua,OAASva,EAAKya,OAAQ,EAE1Eza,EAAKgb,aAAL7X,IAAwBnD,EAAKG,MAQzBH,EAAKib,cACPjb,EAAKiD,QAAQb,OAAO,SAAAsB,GAAS,OAAIA,EAAUJ,UAAUkN,cAAa1H,QAAQ,SAAApF,GAAa,IAC7E+I,EAAmC/I,EAAnC+I,OAAQO,EAA2BtJ,EAA3BsJ,KAAM1J,EAAqBI,EAArBJ,UAAWoM,EAAUhM,EAAVgM,MAC7BhM,EAAUwX,sBACZlb,EAAKgb,aAAehb,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAAG,QAAMzX,EAAUwX,sBAAsB5X,EAAUkN,YAAa2K,EAAKzX,KAG9G+I,EACFzM,EAAKgb,aAAehb,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAC3C,OAAQ7X,EAAUkN,aACiB,IAAjClN,EAAUkN,YAAYvO,QACtBqB,EAAUkN,YAAYrC,QAAQgN,EAAIzL,IAAUyL,EAAIzL,GAAOzI,aAAe,IAExD,YAAT+F,EACThN,EAAKgb,aAAehb,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAC3C,OAAQA,EAAIzL,GAAS,KAAQpM,EAAUkN,cAEvB,YAATxD,GAAsB1J,EAAUkN,YACzCxQ,EAAKgb,aAAehb,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAC3C,OAAQA,EAAIzL,IAAoC,YAA1BpM,EAAUkN,cAC5B2K,EAAIzL,IAAoC,cAA1BpM,EAAUkN,cAErB,CAAC,OAAQ,YAAYiB,SAASzE,GACvChN,EAAKgb,aAAehb,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAC3C,IAAMC,EAAcD,EAAIzL,GAAS,IAAIvC,KAAKgO,EAAIzL,IAAU,KAExD,GAAI0L,GAA0C,iBAA3BA,EAAYnU,WAA+B,CAC5D,IAAMoU,EAAe/X,EAAUkN,YAC3B8K,EAAuB,GACvBC,EAAwB,GAU5B,MARa,SAATvO,GACFsO,EAAuBE,aAAWJ,EAAa,cAC/CG,EAAwBC,aAAWH,EAAc,eAC/B,aAATrO,IACTsO,EAAuBE,aAAWJ,EAAa,sBAC/CG,EAAwBC,aAAWH,EAAc,uBAG5CC,IAAyBC,EAGlC,OAAO,IAGTvb,EAAKgb,aADa,SAAThO,EACWhN,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAC3C,IAAMM,EAAcN,EAAIzL,IAAU,KAElC,GAAI+L,EAAa,CACf,IAAMC,EAAepY,EAAUkN,YAG/B,OAAOiL,IAFsBD,aAAWE,EAAc,SAKxD,OAAO,IAGW1b,EAAKgb,aAAa5Y,OAAO,SAAA+Y,GAC3C,OAAOA,EAAIzL,IAAUyL,EAAIzL,GAAOzI,WAAW0U,cAAclK,SAASnO,EAAUkN,YAAYmL,mBAOlG3b,EAAKga,UAAW,IApeJnQ,IAAA5J,KAAA,aAueD,WACXD,EAAKoa,QAAUpa,EAAKqa,SAAWra,EAAKua,OAASva,EAAKya,OAAQ,EAE1Dza,EAAK4b,aAALzY,IAAwBnD,EAAKgb,cAEzBhb,EAAK8W,YAAc9W,EAAK6b,cAC1B7b,EAAK4b,aAAe5b,EAAK4b,aAAaxZ,OAAO,SAAA+Y,GAC3C,OAAOnb,EAAKiD,QACTb,OAAO,SAAAsB,GAAe,YAAgCgJ,IAAzBhJ,EAAUoY,YAA4BpY,EAAUC,OAASD,EAAUoY,aAChGC,KAAK,SAAArY,GACJ,GAAIA,EAAUwX,sBACZ,QAASxX,EAAUwX,sBAAsBlb,EAAK8W,WAAYqE,EAAKzX,GAE5D,GAAIA,EAAUgM,MAAO,CACxB,IAAMzK,EAAQjF,EAAKoE,cAAc+W,EAAKzX,GACtC,GAAIuB,EACF,OAAOA,EAAMgC,WAAW0U,cAAclK,SAASzR,EAAK8W,WAAW6E,qBAO3E3b,EAAKka,UAAW,gDA3fV/Z,GAAM,IAAAiB,EAAAnB,KACZA,KAAKyS,cAAgB,EAErBzS,KAAKE,KAAOA,EAAKmB,IAAI,SAAC6Z,EAAKpb,GAKzB,OAJAob,EAAI7X,UAAJxB,IAAA,GAAqBqZ,EAAI7X,UAAzB,CAAoCmD,GAAI1G,IACpCob,EAAI7X,UAAUyD,SAChB3F,EAAKsR,gBAEAyI,IAGTlb,KAAK+Z,UAAW,qCAGP/W,GACThD,KAAKgD,QAAUA,EAAQ3B,IAAI,SAACoC,EAAW3D,GAQrC,OAPA2D,EAAUJ,UAAVxB,IAAA,CACE0O,YAAa9M,EAAUsY,cACvB3W,WAAY3B,EAAUuY,kBACtBpQ,UAAWnI,EAAUwY,kBAAoB,OACtCxY,EAAUJ,UAJf,CAKEmD,GAAI1G,IAEC2D,8CAIOmY,GAChB5b,KAAK4b,YAAcA,EACnB5b,KAAKia,UAAW,6CAGCe,GACjBhb,KAAKgb,aAAeA,EACpBhb,KAAK+Z,UAAW,uCAGLtX,GACXzC,KAAKyC,OAASA,EACdzC,KAAKwa,OAAQ,4CAGGlW,GAChBtE,KAAKsE,YAAcA,EACnBtE,KAAKwa,OAAQ,yCAGA7X,GACb3C,KAAK2C,SAAWA,EAChB3C,KAAKwa,OAAQ,2CAGE0B,GACflc,KAAKkc,WAAaA,4CAGFC,EAAUnX,GAC1BhF,KAAKgD,QAAQmZ,GAAU9Y,UAAUkN,YAAcvL,EAC/ChF,KAAK+Z,UAAW,uDAGWjT,GAC3B9G,KAAKoc,uBAAyBtV,EAC9B9G,KAAK+Z,UAAW,4CAGAjT,EAASzC,GAAM,IAAAQ,EAAA7E,KACzByG,EAAUzG,KAAKqc,eAAerc,KAAK0a,WAAYrW,GACrDoC,EAAQpD,UAAUyD,QAAUA,EAC5B9G,KAAKyS,cAAgBzS,KAAKyS,eAAiB3L,EAAU,GAAK,IAEnC,SAAjBwV,EAAiB7V,GAClBA,EAAQpD,UAAUoF,WACnBhC,EAAQpD,UAAUoF,UAAUI,QAAQ,SAAA0T,GAClCA,EAASlZ,UAAUyD,QAAUA,EAC7BjC,EAAK4N,cAAgB5N,EAAK4N,eAAiB3L,EAAU,GAAK,GAC1DwV,EAAeC,KAKrBD,CAAe7V,GAEfzG,KAAK+Z,UAAW,sDAGU1V,EAAMsD,GAChC,IAAMlB,EAAUzG,KAAKqc,eAAerc,KAAK0a,WAAYrW,GAEjDoC,EAAQpD,UAAUmE,kBAAoBG,EACxClB,EAAQpD,UAAUmE,qBAAkBiF,EAGpChG,EAAQpD,UAAUmE,gBAAkBG,EAGT,WAAzB3H,KAAKwc,iBAAgCxc,KAAKyc,oBAAsBzc,KAAKyc,oBAAsBhW,IAC7FzG,KAAKyc,mBAAmBpZ,UAAUmE,qBAAkBiF,GAGtDzM,KAAKyc,mBAAqBhW,4CAGVpC,GAChB,IAAMoC,EAAUzG,KAAKqc,eAAerc,KAAK0a,WAAYrW,GACrDoC,EAAQ4F,YAAc5F,EAAQ4F,oDAGfwK,GACf7W,KAAK6W,WAAaA,EAClB7W,KAAKia,UAAW,2CAGDxT,EAAS5C,GACpB4C,GACFA,EAAQpD,UAAUC,QAAUO,EAExB7D,KAAK2a,gBAAkB3a,KAAK2a,gBAAkBlU,IAChDzG,KAAK2a,eAAetX,UAAUC,aAAUmJ,GAIxCzM,KAAK2a,eADH9W,EACoB4C,OAGAgG,GAGjBzM,KAAK2a,iBACZ3a,KAAK2a,eAAetX,UAAUC,aAAUmJ,EACxCzM,KAAK2a,oBAAiBlO,6CAIR3F,GAChB,IAAI2L,EAAgB,EACpB,GAAIzS,KAAK0Z,WAAW,SAAU,EACX,SAAXgD,EAAYxc,GAChBA,EAAK2I,QAAQ,SAAA8T,GACPA,EAAQ/X,OAAO5C,OAAS,EAC1B0a,EAASC,EAAQ/X,QAGjB+X,EAAQzc,KAAK2I,QAAQ,SAAA+T,GACnBA,EAAEvZ,UAAUyD,QAAUA,EACtB2L,QAMRiK,CAAS1c,KAAK6c,kBAGd7c,KAAK2b,aAAata,IAAI,SAAA6Z,GAEpB,OADAA,EAAI7X,UAAUyD,QAAUA,EACjBoU,IAETzI,EAAgBzS,KAAK2b,aAAa3Z,OAGpChC,KAAKyS,cAAgB3L,EAAU2L,EAAgB,sCAGrCL,EAASC,GACnBrS,KAAKoS,QAAUA,EACfpS,KAAKqS,eAAiBA,EACtBrS,KAAKsE,YAAc,EAEnBtE,KAAKsa,QAAS,2CAGC6B,GACf,IAAM/P,EAASpM,KAAKgD,QAAQ8Z,KAAK,SAAAC,GAAC,OAAIA,EAAE1Z,UAAUmD,KAAO2V,IAEtB,QAA/B/P,EAAO/I,UAAUuI,UACnBQ,EAAO/I,UAAUuI,UAAY,OAG7BQ,EAAO/I,UAAUuI,UAAY,MAG/B5L,KAAKsa,QAAS,6CAGG6B,EAAUzY,GACZ1D,KAAKgD,QAAQ8Z,KAAK,SAAAC,GAAC,OAAIA,EAAE1Z,UAAUmD,KAAO2V,IAClDzY,OAASA,2CAGDW,GACf,IAAMoC,EAAUzG,KAAKqc,eAAerc,KAAK0a,WAAYrW,GACrDoC,EAAQpD,UAAUsF,gBAAkBlC,EAAQpD,UAAUsF,6DAGlCoE,GACpB/M,KAAKwc,gBAAkBzP,uCAGZ6M,GACX,IAAIoD,EAAQ,EAERpY,EAAS5E,KAAKgD,QACfb,OAAO,SAAAgD,GAAG,OAAIA,EAAI9B,UAAU+B,YAAc,IAC1CC,KAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKjC,UAAU+B,WAAaG,EAAKlC,UAAU+B,aAGnE,GAAuC,WAAnCwU,EAAOqD,YAAYvS,aAA0D,WAA9BkP,EAAOsD,OAAOxS,YAA0B,CACzFsS,EAAQ1J,KAAK6J,IAAIvD,EAAOqD,YAAYnd,MAAO8Z,EAAOsD,OAAOpd,OACzD,IAAMsd,EAAM9J,KAAKC,IAAIqG,EAAOqD,YAAYnd,MAAO8Z,EAAOsD,OAAOpd,OAI7D,GAFA8E,EAASA,EAAOyY,MAAML,EAAOI,EAAM,GAE/BxD,EAAOqD,YAAYnd,MAAQ8Z,EAAOsD,OAAOpd,MAAO,CAElD,IAAMwd,EAAO1Y,EAAO2Y,MACpB3Y,EAAO4Y,QAAQF,OAEZ,CAEH,IAAMA,EAAO1Y,EAAO6Y,QACpB7Y,EAAO0D,KAAKgV,SAGX,GAAuC,WAAnC1D,EAAOqD,YAAYvS,aAA0D,YAA9BkP,EAAOsD,OAAOxS,YAA2B,CAC/F,IAAMgT,EAAW1d,KAAKgD,QAAQ8Z,KAAK,SAAAC,GAAC,OAAIA,EAAE1Z,UAAUmD,IAAMoT,EAAOvO,cACjEzG,EAAOwD,OAAOwR,EAAOqD,YAAYnd,MAAO,EAAG4d,QAExC,GAAuC,YAAnC9D,EAAOqD,YAAYvS,aAA2D,WAA9BkP,EAAOsD,OAAOxS,YAA0B,CAC3E1K,KAAKgD,QAAQ8Z,KAAK,SAAAC,GAAC,OAAIA,EAAE1Z,UAAUmD,IAAMoT,EAAOvO,cACxDhI,UAAU+B,gBAAaqH,EACnC7H,EAAOwD,OAAOwR,EAAOsD,OAAOpd,MAAO,QAEhC,GAAuC,YAAnC8Z,EAAOqD,YAAYvS,aAA2D,YAA9BkP,EAAOsD,OAAOxS,YAIrE,OAGF,IAAK,IAAI6B,EAAI,EAAGA,EAAI3H,EAAO5C,OAAQuK,IACjC3H,EAAO2H,GAAGlJ,UAAU+B,WAAa4X,EAAQzQ,EAG3CvM,KAAKsa,OAASta,KAAKma,SAAU,+CA6BVxY,EAAY0C,GAC/B,IAAMnE,EAAO,CAAE0E,OAAQjD,GAUvB,OARa0C,EAAKsV,OAAO,SAACC,EAAQC,GAChC,GAAKD,EAKL,OADcA,EAAOhV,OAAOkY,KAAK,SAAA1a,GAAC,OAAIA,EAAE4C,QAAU6U,KAEjD3Z,oCAaIyd,EAAGC,GACV,GAAKA,EAAL,CAOA,IADA,IAAIxb,GADJwb,GADAA,EAAIA,EAAE9E,QAAQ,aAAc,QACtBA,QAAQ,MAAO,KACX+E,MAAM,KACPtR,EAAI,EAAGuR,EAAI1b,EAAEJ,OAAQuK,EAAIuR,IAAKvR,EAAG,CACxC,IAAIwR,EAAI3b,EAAEmK,GACV,KAAIoR,GAAKI,KAAKJ,GAGZ,OAFAA,EAAIA,EAAEI,GAKV,OAAOJ,sCAGE5Q,GACT,IAAIiR,EAAW,SASf,OAPIhe,KAAKkc,WACP8B,EAAW,OAEJhe,KAAKgD,QAAQ8Z,KAAK,SAAA1a,GAAC,OAAIA,EAAEiB,UAAU+B,YAAc,MACxD4Y,EAAW,SAGNjR,IAASiR,+BAGb5b,EAAG6b,EAAGlR,GACT,MAAa,YAATA,EACK3K,EAAI6b,EAEJ7b,EAAI6b,GAAK,EAAI7b,EAAI6b,EAAI,EAAI,mCAI3BC,GAAM,IAAAhZ,EAAAlF,KACPyD,EAAYzD,KAAKgD,QAAQ8Z,KAAK,SAAAqB,GAAC,OAAIA,EAAE9a,UAAUmD,KAAOtB,EAAKkN,UAmBjE,OAhBI3O,EAAU2a,WACgB,SAAxBpe,KAAKqS,eACE6L,EAAK7Y,KAAK,SAACjD,EAAG6b,GAAJ,OAAUxa,EAAU2a,WAAWH,EAAG7b,EAAG,SAG/C8b,EAAK7Y,KAAK,SAACjD,EAAG6b,GAAJ,OAAUxa,EAAU2a,WAAWhc,EAAG6b,EAAG,SAIjDC,EAAK7Y,KACY,SAAxBrF,KAAKqS,eACD,SAACjQ,EAAG6b,GAAJ,OAAU/Y,EAAKG,KAAKH,EAAKf,cAAc8Z,EAAGxa,GAAYyB,EAAKf,cAAc/B,EAAGqB,GAAYA,EAAUsJ,OAClG,SAAC3K,EAAG6b,GAAJ,OAAU/Y,EAAKG,KAAKH,EAAKf,cAAc/B,EAAGqB,GAAYyB,EAAKf,cAAc8Z,EAAGxa,GAAYA,EAAUsJ,4CA8JhG,IAAA5F,EAAAnH,KACVA,KAAKsa,OAASta,KAAKwa,OAAQ,EAE3B,IAAM6D,EAAOnb,IAAOlD,KAAK2b,cAEnB/W,EAAS5E,KAAKgD,QACjBb,OAAO,SAAAgD,GAAG,OAAIA,EAAI9B,UAAU+B,YAAc,IAC1CC,KAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKjC,UAAU+B,WAAaG,EAAKlC,UAAU+B,aAE7DkZ,EAAUD,EAAQ1E,OAAO,SAACC,EAAQC,GAEtC,IAAI0E,EAAS3E,EAgBb,OAfA2E,EAAS3Z,EAAO+U,OAAO,SAACgE,EAAGa,GACzB,IAAMxZ,EAAQ6U,EAAQ2E,EAAO/O,QAAUtI,EAAK2S,SAASD,EAAS2E,EAAO/O,OACjEgP,EAAQd,EAAE/Y,OAAOkY,KAAK,SAAA4B,GAAC,OAAIA,EAAE1Z,QAAUA,IAC3C,IAAKyZ,EAAO,CACV,IAAMpa,EAAI,GAAAiF,OAAApG,IAAQya,EAAEtZ,MAAQ,IAAlB,CAAuBW,IAC7B2Z,EAAWxX,EAAKyX,qBAAqBzX,EAAK0V,YAAaxY,IAAS,GAEpEoa,EAAQ,CAAEzZ,QAAOJ,OAAQ,GAAI1E,KAAM,GAAImM,WAAYsS,EAAStS,WAAYhI,KAAMA,GAC9EsZ,EAAE/Y,OAAO0D,KAAKmW,GAEhB,OAAOA,GACNF,IAEIre,KAAKoI,KAAKuR,GAEVD,GACN,CAAEhV,OAAQ,KAEb5E,KAAK6c,YAAcyB,EAAQ1Z,OAC3B5E,KAAKma,SAAU,uCAGJ,IAAAjS,EAAAlI,KACXA,KAAKsa,OAASta,KAAKwa,OAAQ,EAC3Bxa,KAAKE,KAAK2I,QAAQ,SAAAzG,GAAC,OAAIA,EAAEiB,UAAUoF,UAAY,OAC/CzI,KAAK6e,aAAe,GACpB7e,KAAK8a,mBAAqB,EAuB1B9a,KAAK2b,aAAa9S,QAAQ,SAAApC,IArBX,SAATqY,EAAUrY,GACd,IAAIsY,EAAS7W,EAAKgU,WAAWzV,EAASyB,EAAKhI,MAEvC6e,GACFA,EAAO1b,UAAUoF,UAAYsW,EAAO1b,UAAUoF,WAAa,GAEvDsW,EAAO1b,UAAUoF,UAAU+I,SAAS/K,KACtCsY,EAAO1b,UAAUoF,UAAUH,KAAK7B,GAChCyB,EAAK4S,sBAGPgE,EAAOC,IAGH7W,EAAK2W,aAAarN,SAAS/K,KAC7ByB,EAAK2W,aAAavW,KAAK7B,GACvByB,EAAK4S,sBAMTgE,CAAOrY,KAGTzG,KAAKoa,UAAW,qCAGP,IAAA4E,EAAAhf,KAGT,GAFAA,KAAKwa,OAAQ,EAETxa,KAAK0Z,WAAW,SAAU,CAC5B1Z,KAAK0a,WAALxX,IAAsBlD,KAAK6c,aAE3B,IAAMjY,EAAS5E,KAAKgD,QACjBb,OAAO,SAAAgD,GAAG,OAAIA,EAAI9B,UAAU+B,YAAc,IAC1CC,KAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKjC,UAAU+B,WAAaG,EAAKlC,UAAU+B,aAE7D6Z,EAAa,SAACf,EAAMza,GACxB,OAAIA,EAAU2a,WACLF,EAAK7Y,KACwB,SAAlC5B,EAAUJ,UAAUuI,UAChB,SAACxJ,EAAG6b,GAAJ,OAAUxa,EAAU2a,WAAWH,EAAEjZ,MAAO5C,EAAE4C,MAAO,UACjD,SAAC5C,EAAG6b,GAAJ,OAAUxa,EAAU2a,WAAWhc,EAAE4C,MAAOiZ,EAAEjZ,MAAO,WAIhDkZ,EAAK7Y,KACwB,SAAlC5B,EAAUJ,UAAUuI,UAChB,SAACxJ,EAAG6b,GAAJ,OAAUe,EAAK3Z,KAAK4Y,EAAEjZ,MAAO5C,EAAE4C,MAAOvB,EAAUsJ,OAChD,SAAC3K,EAAG6b,GAAJ,OAAUe,EAAK3Z,KAAKjD,EAAE4C,MAAOiZ,EAAEjZ,MAAOvB,EAAUsJ,SAK1D/M,KAAK0a,WAAauE,EAAWjf,KAAK0a,WAAY9V,EAAO,KAE/B,SAAhBsa,EAAiBhB,EAAMja,GAC3Bia,EAAKrV,QAAQ,SAAA8T,GACX,GAAIA,EAAQ/X,OAAO5C,OAAS,EAAG,CAC7B,IAAMoK,EAASxH,EAAOX,GACtB0Y,EAAQ/X,OAASqa,EAAWtC,EAAQ/X,OAAQwH,GAC5C8S,EAAcvC,EAAQ/X,OAAQX,EAAQ,QAGlC+a,EAAK5M,SAAW,GAAK4M,EAAK3M,iBAC5BsK,EAAQzc,KAAO8e,EAAKG,SAASxC,EAAQzc,SAM7Cgf,CAAclf,KAAK0a,WAAY,QAE5B,GAAI1a,KAAK0Z,WAAW,SAEvB,GADA1Z,KAAK0a,WAALxX,IAAsBlD,KAAK6e,eACN,GAAjB7e,KAAKoS,QAAe,CACtBpS,KAAK0a,WAAa1a,KAAKmf,SAASnf,KAAK0a,aAEpB,SAAX0E,EAAYlB,GAChBA,EAAKrV,QAAQ,SAAAwW,GACPA,EAAKhc,UAAUoF,YACjB4W,EAAKhc,UAAUoF,UAAYuW,EAAKG,SAASE,EAAKhc,UAAUoF,WACxD2W,EAASC,EAAKhc,UAAUoF,cAK9B2W,CAASpf,KAAK0a,kBAGT1a,KAAK0Z,WAAW,YACvB1Z,KAAK0a,WAALxX,IAAsBlD,KAAK2b,eACN,GAAjB3b,KAAKoS,UACPpS,KAAK0a,WAAa1a,KAAKmf,SAASnf,KAAK0a,cAIzC1a,KAAKsa,QAAS,qCAMd,GAFAta,KAAK6a,UAAL3X,IAAqBlD,KAAK0a,YAEtB1a,KAAKyC,OAAQ,CACf,IAAM6c,EAAatf,KAAKsE,YAActE,KAAK2C,SACrC4c,EAAWD,EAAatf,KAAK2C,SAEnC3C,KAAK6a,UAAY7a,KAAK6a,UAAUwC,MAAMiC,EAAYC,GAGpDvf,KAAKwa,OAAQ,yFCtqBXgF,eAGJ,SAAAA,EAAYvf,GAAO,IAAAF,EAAAyJ,IAAAxJ,KAAAwf,GACjBzf,EAAA0J,IAAAzJ,KAAA0J,IAAA8V,GAAA7V,KAAA3J,KAAMC,IADW2J,IAAAC,IAAA9J,GAAA,cAFL,IAAI0Z,IAEC7P,IAAAC,IAAA9J,GAAA,oBAyHC,WAClB,GAAIA,EAAKE,MAAMwf,kBAAmB,CAChC,IAAMhH,EAAe1Y,EAAKwK,MAAMrK,KAAKiC,OAAO,SAAA+Y,GAAG,OAAIA,EAAI7X,UAAUyD,UACjE/G,EAAKE,MAAMwf,kBAAkBhH,MA5Hd7O,IAAAC,IAAA9J,GAAA,eAgIJ,WAAa,IAAA+I,EAC1B/I,EAAKE,MAAMmT,eAAgBtK,EAAA/I,EAAKE,OAAMmT,aAAXsM,MAAA5W,EAAA6W,aAjIV/V,IAAAC,IAAA9J,GAAA,sBAoIG,WAAa,IAAA6f,EACjC7f,EAAKE,MAAM4f,sBAAuBD,EAAA7f,EAAKE,OAAM4f,oBAAXH,MAAAE,EAAAD,aArIjB/V,IAAAC,IAAA9J,GAAA,gBAwIH,WAAa,IAAA+f,EAC3B/f,EAAKE,MAAMqS,gBAAiBwN,EAAA/f,EAAKE,OAAMqS,cAAXoN,MAAAI,EAAAH,aAzIX/V,IAAAC,IAAA9J,GAAA,eA4IJ,kBAAOoD,MAAMkG,QAAQtJ,EAAKE,MAAMC,QA5I5B0J,IAAAC,IAAA9J,GAAA,gBA8IH,SAACggB,GACfhgB,EAAK4P,SAAS,CAAEqQ,WAAW,GAAQ,WACjCjgB,EAAKE,MAAMC,KAAK6f,GAAOE,KAAK,SAACrG,GAC3BmG,EAAMG,WAAatG,EAAOsG,WAC1BH,EAAM1M,KAAOuG,EAAOvG,KACpBtT,EAAKogB,YAAYC,QAAQxG,EAAO1Z,MAChCH,EAAK4P,SAAL9N,IAAA,CACEme,WAAW,GACRjgB,EAAKogB,YAAYE,iBAFtB,CAGEN,iBAvJWnW,IAAAC,IAAA9J,GAAA,iBA6JFugB,oBAAS,WAGxB,GAFAvgB,EAAKogB,YAAYI,iBAAiBxgB,EAAKwK,MAAMsM,YAEzC9W,EAAKygB,eAAgB,CACvB,IAAMT,EAAKle,IAAA,GAAQ9B,EAAKwK,MAAMwV,OAC9BA,EAAM1M,KAAO,EACb0M,EAAMpJ,OAAS5W,EAAKwK,MAAMsM,WAE1B9W,EAAK0gB,cAAcV,QAGnBhgB,EAAK4P,SAAS5P,EAAKogB,YAAYE,mBAEhCtgB,EAAKE,MAAM6B,QAAQ4e,mBA1KH9W,IAAAC,IAAA9J,GAAA,iBA4KFugB,oBAAS,WACxB,GAAIvgB,EAAKygB,eAAgB,CACvB,IAAMT,EAAKle,IAAA,GAAQ9B,EAAKwK,MAAMwV,OAC9BA,EAAMY,QAAU5gB,EAAKwK,MAAMvH,QACxBb,OAAO,SAAAC,GAAC,OAAIA,EAAEiB,UAAUkN,cACxBlP,IAAI,SAAAe,GAAC,MAAK,CACTgK,OAAQhK,EACRwe,SAAU,IACV5b,MAAO5C,EAAEiB,UAAUkN,eAGvBxQ,EAAK0gB,cAAcV,QAGnBhgB,EAAK4P,SAAS5P,EAAKogB,YAAYE,mBAEhCtgB,EAAKE,MAAM6B,QAAQ4e,mBAzLpB,IAAMG,EAAkB9gB,EAAK+gB,SAAS7gB,GAHrB,OAIjBF,EAAKghB,qBAAqBF,GAAiB,GAE3C9gB,EAAKwK,MAAL1I,IAAA,CACE3B,KAAM,IACHH,EAAKogB,YAAYE,iBAFtB,CAGEN,MAAO,CACLY,QAAS,GACTvO,QAAS,KACTC,eAAgB,MAChBgB,KAAM,EACN1Q,SAAUke,EAAgB/e,QAAQa,SAClCgU,OAAQ,GAERuJ,WAAY,GAEdha,YAAY,IAnBGnG,mEAuBC,IAAAoB,EAAAnB,KAClBA,KAAK2P,SAAS3P,KAAKmgB,YAAYE,iBAAkB,WAC3Clf,EAAKqf,gBACPrf,EAAKsf,cAActf,EAAKoJ,MAAMwV,sDAKf9f,EAAO+gB,GAC1B,IAAIC,GAA0B,EAC1BC,EAAuB,GACvBjhB,IAEFihB,GADAD,EAAyBhhB,EAAM+C,QAAQme,UAAU,SAAA/e,GAAC,OAAIA,EAAEgf,gBACP,EAAInhB,EAAM+C,QAAQie,GAAwBG,YAAc,IAG3GphB,KAAKmgB,YAAY7J,WAAWrW,EAAM+C,SAE9BhD,KAAKwgB,gBACPxgB,KAAKmgB,YAAYkB,mBAAkB,GACnCrhB,KAAKmgB,YAAYmB,oBAAmB,KAGpCthB,KAAKmgB,YAAYkB,mBAAkB,GACnCrhB,KAAKmgB,YAAYmB,oBAAmB,GACpCthB,KAAKmgB,YAAYC,QAAQngB,EAAMC,OAGjC8gB,GAAUhhB,KAAKmgB,YAAYoB,kBAAkBthB,EAAM6B,QAAQ0f,YAAcvhB,EAAM6B,QAAQ0f,YAAc,GACrGR,GAAUhhB,KAAKmgB,YAAYsB,eAAexhB,EAAM6B,QAAQa,UACxDqe,GAAUhhB,KAAKmgB,YAAYuB,YAAYT,EAAwBC,GAC/DF,GAAUhhB,KAAKmgB,YAAYwB,aAAa1hB,EAAM6B,QAAQW,QACtDue,GAAUhhB,KAAKmgB,YAAYyB,iBAAiB3hB,EAAM4hB,iBAClD7hB,KAAKmgB,YAAY2B,sBAAsB7hB,EAAM6B,QAAQ0a,0EAGtBuF,GAC/B,IAAM9hB,EAAQD,KAAK8gB,SAASiB,GAC5B/hB,KAAK+gB,qBAAqB9gB,GAC1BD,KAAK2P,SAAS3P,KAAKmgB,YAAYE,mDAGxBpgB,GAAO,IAAA4E,EAAA7E,KACR6gB,EAAehf,IAAA,GAAS5B,GAASD,KAAKC,OAEtC2B,EAAeif,EAAgBjf,aAAaogB,KAkDlD,OAhDAnB,EAAgBzf,QAAhB8B,IAA+B2d,EAAgBzf,SAAW,IACtDyf,EAAgBoB,WACdpB,EAAgBoB,SAASC,UAC3BrB,EAAgBzf,QAAQkH,KAAK,CAC3B/H,KAAMsgB,EAAgBld,MAAMwe,IAC5BlhB,QAASW,EAAawgB,WACtB/f,cAAc,EACd3B,QAAS,WACPmE,EAAKsb,YAAYkC,mBACjBxd,EAAK8K,SAAL9N,IAAA,GACKgD,EAAKsb,YAAYE,iBADtB,CAEEna,YAAarB,EAAK0F,MAAMrE,iBAK5B2a,EAAgBoB,SAASK,aAC3BzB,EAAgBzf,QAAQkH,KAAK,CAC3B/H,KAAMsgB,EAAgBld,MAAM4e,KAC5BthB,QAASW,EAAa4gB,YACtB9hB,QAAS,SAACqG,EAAGN,GACX5B,EAAKsb,YAAYkC,iBAAiB5b,EAAS,UAC3C5B,EAAK8K,SAAL9N,IAAA,GACKgD,EAAKsb,YAAYE,iBADtB,CAEEna,YAAY,QAKhB2a,EAAgBoB,SAASQ,aAC3B5B,EAAgBzf,QAAQkH,KAAK,CAC3B/H,KAAMsgB,EAAgBld,MAAM+e,OAC5BzhB,QAASW,EAAa+gB,cACtBjiB,QAAS,SAACqG,EAAGN,GACX5B,EAAKsb,YAAYkC,iBAAiB5b,EAAS,UAC3C5B,EAAK8K,SAAL9N,IAAA,GACKgD,EAAKsb,YAAYE,iBADtB,CAEEna,YAAY,SAOtB2a,EAAgBtd,WAAhB1B,IAAA,GAAkC2d,EAAche,aAAa+B,WAAesd,EAAgBtd,YAC5Fsd,EAAgBld,MAAhB9B,IAAA,GAA6B2d,EAAche,aAAamC,MAAUkd,EAAgBld,OAClFkd,EAAgB/e,QAAhBD,IAAA,GAA+B2d,EAAche,aAAaM,QAAY+e,EAAgB/e,SAE/E+e,yCAwEM,IAAA3b,EAAAlF,KACPC,EAAQD,KAAK8gB,WACnB,GAAI7gB,EAAM6B,QAAQW,OAAQ,CACxB,IAAMb,EAAYC,IAAA,GAAQ2d,EAAche,aAAaI,aAAaghB,WAAe5iB,KAAKC,MAAM2B,aAAaghB,YACzG,OACExiB,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAakC,MAAO,CAAEqE,QAAS,SAC7BxG,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACH,EAAMsD,WAAWsf,WAAlB,CACElP,QAAS,CACPmP,QAAS7iB,EAAM0T,QAAQoP,mBAEzBxgB,MAAO,CAAEoJ,MAAiC,QAA1B1L,EAAM2T,MAAMjJ,UAAsB,OAAS,QAASqY,UAAW,QAC/EjgB,QAAS,EACT0Q,MAAOzT,KAAKwgB,eAAiBxgB,KAAKuK,MAAMwV,MAAMG,WAAalgB,KAAKuK,MAAMrK,KAAK8B,OAC3E2B,MAAO1D,EAAM0D,MACb+P,YAAa1T,KAAKuK,MAAM5H,SACxBsgB,mBAAoBhjB,EAAM6B,QAAQohB,gBAClC7P,KAAMrT,KAAKwgB,eAAiBxgB,KAAKuK,MAAMwV,MAAM1M,KAAOrT,KAAKuK,MAAMjG,YAC/D8O,aAAc,SAACzS,EAAO0S,GACpB,GAAInO,EAAKsb,eAAgB,CACvB,IAAMT,EAAKle,IAAA,GAAQqD,EAAKqF,MAAMwV,OAC9BA,EAAM1M,KAAOA,EACbnO,EAAKub,cAAcV,QAGnB7a,EAAKib,YAAYoB,kBAAkBlO,GACnCnO,EAAKyK,SAASzK,EAAKib,YAAYE,iBAAkB,WAC/Cnb,EAAKkO,aAAaC,MAIxBwM,oBAAqB,SAAClf,GAGpB,GAFAuE,EAAKib,YAAYsB,eAAe9gB,EAAM4N,OAAOvJ,OAEzCE,EAAKsb,eAAgB,CACvB,IAAMT,EAAKle,IAAA,GAAQqD,EAAKqF,MAAMwV,OAC9BA,EAAMpd,SAAWhC,EAAM4N,OAAOvJ,MAC9B+a,EAAM1M,KAAO,EACbnO,EAAKub,cAAcV,QAGnB7a,EAAKib,YAAYoB,kBAAkB,GACnCrc,EAAKyK,SAASzK,EAAKib,YAAYE,iBAAkB,WAC/Cnb,EAAK2a,oBAAoBlf,EAAM4N,OAAOvJ,UAI5Cme,iBAAkB,SAACC,GAAD,MAA+C,WAAjCnjB,EAAM6B,QAAQuhB,eAC5CjjB,EAAA,cAACkjB,EAADziB,OAAAC,OAAA,GAAsBsiB,EAAtB,CAAgCzf,MAAO1D,EAAM0D,MAAO/B,aAAcA,KAClExB,EAAA,cAACmjB,EAAD1iB,OAAAC,OAAA,GAA6BsiB,EAA7B,CAAuCzf,MAAO1D,EAAM0D,MAAO/B,aAAcA,MAC3EoT,mBAAoB,SAACkG,GAAD,OAAStZ,EAAaoT,mBAAmB8D,QAAQ,SAAUoC,EAAIsI,MAAM1K,QAAQ,OAAQoC,EAAIuI,IAAI3K,QAAQ,UAAWoC,EAAIzH,QACxIwB,iBAAkBrT,EAAaqT,wDASpC,IAAA9N,EAAAnH,KACDC,EAAQD,KAAK8gB,WAEnB,OACE1gB,EAAA,cAACqK,EAAA,EAAD,CAAiBiZ,UAAW,SAAA9J,GAC1BzS,EAAKgZ,YAAYwD,aAAa/J,GAC9BzS,EAAKwI,SAASxI,EAAKgZ,YAAYE,oBAE/BjgB,EAAA,cAACH,EAAMsD,WAAWqgB,UAAlB,CAA4BrhB,MAAO,CAAEyO,SAAU,aAC5C/Q,EAAM6B,QAAQghB,SACb1iB,EAAA,cAACH,EAAMsD,WAAWsgB,QAAlB,CACEziB,QAASnB,EAAMmB,QACfmC,WAAYtD,EAAMsD,WAClBkV,aAAczY,KAAKuK,MAAMkI,cAAgB,EAAIzS,KAAKuK,MAAMqQ,aAAazY,OAAO,SAAAC,GAAO,OAAOA,EAAEiB,UAAUyD,UAAa,GACnH9D,QAAShD,KAAKuK,MAAMvH,QACpBqU,cAAepX,EAAM6B,QAAQuV,cAC7B1T,MAAO1D,EAAM0D,MACbwU,aAAclY,EAAM6B,QAAQqW,aAC5B9B,gBAAiBpW,EAAM6B,QAAQuU,gBAC/BF,eAAgBlW,EAAM6B,QAAQqU,eAC9BxU,WAAY3B,KAAKuK,MAAM5I,WACvBgV,OAAQ1W,EAAM6B,QAAQ6U,OACtBiC,UAAW3Y,EAAM6B,QAAQ8W,UACzBK,uBAAwBhZ,EAAM6B,QAAQmX,uBACtCpC,WAAY7W,KAAKuK,MAAMsM,WACvBM,iBAAkBlX,EAAM6B,QAAQqV,iBAChCjW,MAAOjB,EAAMiB,MACb4V,gBAAiB,SAAAD,GAAU,OAAI1P,EAAKwI,SAAS,CAAEkH,cAAc1P,EAAK2c,iBAClE5L,iBAAkB,SAACiE,EAAUzY,GAC3ByD,EAAKgZ,YAAY4D,mBAAmB5H,EAAUzY,GAC9CyD,EAAKwI,SAASxI,EAAKgZ,YAAYE,mBAEjCze,aAAYC,IAAA,GAAO2d,EAAche,aAAaI,aAAakhB,QAAY9iB,KAAKC,MAAM2B,aAAakhB,WAGlG7iB,EAAM6B,QAAQyQ,UACbnS,EAAA,cAACH,EAAMsD,WAAWygB,SAAlB,CACErgB,MAAO1D,EAAM0D,MACb/B,aAAYC,IAAA,GAAO2d,EAAche,aAAaI,aAAa2Q,SAAatS,EAAM2B,aAAa2Q,UAC3FrH,aAAclL,KAAKuK,MAAMvH,QACtBb,OAAO,SAAAgD,GAAG,OAAIA,EAAI9B,UAAU+B,YAAc,IAC1CC,KAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKjC,UAAU+B,WAAaG,EAAKlC,UAAU+B,aAEnEqG,cAAe,SAACwY,GACd9c,EAAKgZ,YAAY+D,iBAAiBD,EAAc5gB,UAAUmD,IAC1DW,EAAKwI,SAASxI,EAAKgZ,YAAYE,mBAEjCpU,eAAgB,SAACgY,EAAenkB,GAC9B,IAAM8Z,EAAS,CACbuK,QAAS,KACTlH,YAAa,CAAEvS,YAAa,UAAW5K,MAAO,GAC9CuL,YAAa4Y,EAAc5gB,UAAUmD,GACrC3C,KAAM,QACNugB,OAAQ,OACRlH,OAAQ,CAAEpd,QAAO4K,YAAa,UAC9BqC,KAAM,WAER5F,EAAKgZ,YAAYwD,aAAa/J,GAC9BzS,EAAKwI,SAASxI,EAAKgZ,YAAYE,qBAIrCjgB,EAAA,cAACikB,GAAD,CAAWC,OAAQrkB,EAAM6B,QAAQyiB,wBAC/BnkB,EAAA,cAACqK,EAAA,EAAD,CAAWC,YAAY,UAAUC,UAAU,cACxC,SAACE,EAAUC,GAAX,OACC1K,EAAA,qBACE2K,IAAKF,EAASG,UAGd5K,EAAA,qBAAKmC,MAAO,CAAE4N,UAAWlQ,EAAM6B,QAAQ0iB,cAAeC,UAAW,SAC/DrkB,EAAA,cAACC,EAAA,EAAD,KACGJ,EAAM6B,QAAQ4iB,QACbtkB,EAAA,cAACH,EAAMsD,WAAWohB,OAAlB,CACE/iB,aAAYC,IAAA,GAAO2d,EAAche,aAAaI,aAAa8iB,OAAWvd,EAAKlH,MAAM2B,aAAa8iB,QAC9F1hB,QAASmE,EAAKoD,MAAMvH,QACpB8P,aAAc7S,EAAM6B,QAAQI,UAC5B8P,YAAa/R,EAAM6B,QAAQkQ,YAC3BS,cAAetL,EAAKoD,MAAMkI,cAC1BC,UAAWzS,EAAM4hB,gBAAkB1a,EAAKoD,MAAMuQ,mBAAqB3T,EAAKoD,MAAMrK,KAAK8B,OACnFM,iBAAkBrC,EAAMmE,YACxB4O,kBAAmB/S,EAAMmB,SAAWnB,EAAMmB,QAAQe,OAAO,SAAAC,GAAC,OAAKA,EAAEC,eAAiB8E,EAAKlH,MAAM6B,QAAQI,YAAWF,OAAS,EACzHoQ,QAASjL,EAAKoD,MAAM6H,QACpBC,eAAgBlL,EAAKoD,MAAM8H,eAC3BM,cAAe,SAAC7L,GACdK,EAAKgZ,YAAYyE,kBAAkB9d,GACnCK,EAAKwI,SAASxI,EAAKgZ,YAAYE,iBAAkB,kBAAMlZ,EAAKsY,uBAE9DnN,cAAe,SAACF,EAASC,GAGvB,GAFAlL,EAAKgZ,YAAYuB,YAAYtP,EAASC,GAElClL,EAAKqZ,eAAgB,CACvB,IAAMT,EAAKle,IAAA,GAAQsF,EAAKoD,MAAMwV,OAC9BA,EAAM1M,KAAO,EACb0M,EAAM3N,QAAUjL,EAAKoD,MAAMvH,QAAQ8Z,KAAK,SAAA1a,GAAC,OAAIA,EAAEiB,UAAUmD,KAAO4L,IAChE2N,EAAM1N,eAAiBA,EACvBlL,EAAKsZ,cAAcV,QAGnB5Y,EAAKwI,SAASxI,EAAKgZ,YAAYE,iBAAkB,WAC/ClZ,EAAKmL,cAAcF,EAASC,MAIlCY,mBAAoBhT,EAAM6B,QAAQ8D,mBAClCsM,QAASjS,EAAM6B,QAAQoQ,QACvBK,SAAUtS,EAAM6B,QAAQyQ,SACxB9N,gBAA2CgI,IAA/BtF,EAAKlH,MAAM4hB,kBAK3BzhB,EAAA,cAACH,EAAMsD,WAAWshB,KAAlB,CACEzjB,QAASnB,EAAMmB,QACfmC,WAAYtD,EAAMsD,WAClBI,MAAO1D,EAAM0D,MACbhC,WAAYwF,EAAKoD,MAAM5I,WACvB2C,YAAa6C,EAAKoD,MAAMjG,YACxB3B,SAAUwE,EAAKoD,MAAM5H,SACrBK,QAASmE,EAAKoD,MAAMvH,QACpBoB,YAAanE,EAAMmE,YACnBtC,QAAS7B,EAAM6B,QACfqC,cAAegD,EAAKgZ,YAAYhc,cAChCM,gBAA2CgI,IAA/BtF,EAAKlH,MAAM4hB,gBACvBhc,gBAAiB,SAACsW,EAAUnX,GAC1BmC,EAAKgZ,YAAY2E,kBAAkB3I,EAAUnX,GAC7CmC,EAAKwI,SAAS,GAAI,kBAAMxI,EAAK4d,oBAG/Bjf,yBAA0B,SAACnF,GACzBwG,EAAKgZ,YAAY6E,6BAA6BrkB,EAAM4N,OAAOzH,SAC3DK,EAAKwI,SAASxI,EAAKgZ,YAAYE,mBAEjCnc,cAAe,SAACvD,EAAO0D,GACrB8C,EAAKgZ,YAAY8E,kBAAkBtkB,EAAM4N,OAAOzH,QAASzC,GACzD8C,EAAKwI,SAASxI,EAAKgZ,YAAYE,iBAAkB,kBAAMlZ,EAAKsY,uBAE9Dlb,oBAAqB,SAACF,EAAMsD,GAC1BR,EAAKgZ,YAAY+E,4BAA4B7gB,EAAMsD,GACnDR,EAAKwI,SAASxI,EAAKgZ,YAAYE,mBAEjCpb,qBAAsB,SAACZ,GACrB8C,EAAKgZ,YAAYgF,kBAAkB9gB,GACnC8C,EAAKwI,SAASxI,EAAKgZ,YAAYE,mBAEjC3b,oBAAqB,SAACL,GACpB8C,EAAKgZ,YAAYiF,iBAAiB/gB,GAClC8C,EAAKwI,SAASxI,EAAKgZ,YAAYE,mBAEjCvc,kBAAmB,SAACD,EAAM4C,GACX,QAAT5C,EACFsD,EAAKwI,SAAS,CAAEzJ,YAAY,IAEZ,WAATrC,GAA8B,WAATA,IAC5BsD,EAAKgZ,YAAYkC,iBAAiB5b,GAClCU,EAAKwI,SAASxI,EAAKgZ,YAAYE,oBAGnCtc,kBAAmB,SAACF,EAAMwhB,EAASC,GACpB,QAATzhB,EACFsD,EAAKwI,SAAS,CAAEqQ,WAAW,GAAQ,WACjC7Y,EAAKlH,MAAMgiB,SAASC,SAASmD,GAC1BpF,KAAK,SAAArG,GACJzS,EAAKwI,SAAS,CAAEqQ,WAAW,EAAO9Z,YAAY,GAAS,WACjDiB,EAAKqZ,gBACPrZ,EAAKsZ,cAActZ,EAAKoD,MAAMwV,WAInCwF,MAAM,SAAAnB,GACLjd,EAAKwI,SAAS,CAAEqQ,WAAW,QAIjB,WAATnc,EACPsD,EAAKwI,SAAS,CAAEqQ,WAAW,GAAQ,WACjC7Y,EAAKlH,MAAMgiB,SAASK,YAAY+C,EAASC,GACtCrF,KAAK,SAAArG,GACJzS,EAAKgZ,YAAYkC,iBAAiBiD,GAClCne,EAAKwI,SAAL9N,IAAA,CACEme,WAAW,GACR7Y,EAAKgZ,YAAYE,kBACnB,WACGlZ,EAAKqZ,gBACPrZ,EAAKsZ,cAActZ,EAAKoD,MAAMwV,WAInCwF,MAAM,SAAAnB,GACLjd,EAAKwI,SAAS,CAAEqQ,WAAW,QAKjB,WAATnc,GACPsD,EAAKwI,SAAS,CAAEqQ,WAAW,GAAQ,WACjC7Y,EAAKlH,MAAMgiB,SAASQ,YAAY6C,GAC7BrF,KAAK,SAAArG,GACJzS,EAAKgZ,YAAYkC,iBAAiBiD,GAClCne,EAAKwI,SAAL9N,IAAA,CACEme,WAAW,GACR7Y,EAAKgZ,YAAYE,kBACnB,WACGlZ,EAAKqZ,gBACPrZ,EAAKsZ,cAActZ,EAAKoD,MAAMwV,WAInCwF,MAAM,SAAAnB,GACLjd,EAAKwI,SAAS,CAAEqQ,WAAW,SAKrCpe,aAAYC,IAAA,GAAO2d,EAAche,aAAaI,aAAaogB,KAAS7a,EAAKlH,MAAM2B,aAAaogB,MAC5Fxd,WAAY2C,EAAKlH,MAAMuE,WACvB0B,WAAYiB,EAAKoD,MAAMrE,WACvBvB,oBAAqBwC,EAAKoD,MAAMoQ,iBAAkBxT,EAAKoD,MAAMrE,YAC7D5D,iBAAkBrC,EAAMmE,gBAI7ByG,EAASD,iBAMhB5K,KAAKuK,MAAMyV,WAAa/f,EAAM+f,YAA4C,WAA9B/f,EAAM6B,QAAQ0jB,aAC1DplB,EAAA,qBAAKmC,MAAO,CAAEyO,SAAU,WAAYrK,MAAO,SACzCvG,EAAA,qBAAKmC,MAAO,CAAEyO,SAAU,WAAYa,IAAK,EAAG4T,KAAM,EAAGjjB,OAAQ,OAAQmE,MAAO,SAC1EvG,EAAA,cAACC,EAAA,EAAD,QAILL,KAAK0lB,gBAEJ1lB,KAAKuK,MAAMyV,WAAa/f,EAAM+f,YAA4C,YAA9B/f,EAAM6B,QAAQ0jB,aAC1DplB,EAAA,qBAAKmC,MAAO,CAAEyO,SAAU,WAAYa,IAAK,EAAG4T,KAAM,EAAGjjB,OAAQ,OAAQmE,MAAO,SAC1EvG,EAAA,qBAAKmC,MAAO,CAAEqE,QAAS,QAASD,MAAO,OAAQnE,OAAQ,OAAQuP,gBAAiB,cAC9E3R,EAAA,qBAAKmC,MAAO,CAAEqE,QAAS,aAAcD,MAAO,OAAQnE,OAAQ,OAAQmjB,cAAe,SAAU7iB,UAAW,WACtG1C,EAAA,cAACC,EAAA,EAAD,kBA9eUkB,aAyftBqkB,GAAY,SAAAve,GAA0B,IAAvBid,EAAuBjd,EAAvBid,OAAQlW,EAAe/G,EAAf+G,SAC3B,OAAIkW,EAEAlkB,EAAA,cAACylB,EAAAzjB,EAAD,KACGgM,GAMHhO,EAAA,qBAAKmC,MAAO,CAAEygB,UAAW,SACtB5U,IAMToR,GAAche,aAAe,CAC3BJ,QAAS,GACTuS,QAAS,GACT3Q,QAAS,GACTO,WAAY,CACVsD,QAASjH,EACTilB,KAAMpjB,EACN8E,KAAMoG,EACNiX,UAAWkC,IACXtiB,QAAS6L,EACT5J,UAAW4K,EACX2T,SAAUza,EACVxE,SAAUmH,EACVyY,OAAQ/S,EACRiR,WAAYkD,IACZ/hB,IAAKoC,EACLyd,QAAS7N,IAEX9V,KAAM,GACNyD,MAAO,CAELwe,IAAK,SAACliB,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,YAChB+M,MAAO,SAAC/M,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,UAClB4P,MAAO,SAAC5P,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,UAClByiB,OAAQ,SAACziB,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,mBACnBwH,YAAa,SAACxH,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,kBACxBsiB,KAAM,SAACtiB,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,SACjBqY,OAAQ,SAACrY,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,aACnBiR,OAAQ,SAACjR,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,gBACnBmU,UAAW,SAACnU,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,eACtBkU,SAAU,SAAClU,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,cACrBuU,SAAU,SAACvU,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,kBACrBwU,aAAc,SAACxU,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,iBACzBiX,YAAa,SAACjX,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,UACxB+W,OAAQ,SAAC/W,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,WACnB4L,UAAW,SAAC5L,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,iBACtBgN,gBAAiB,SAAChN,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,WAC5BwX,WAAY,SAACxX,GAAD,OAAWG,EAAA,cAACC,EAAA,EAASJ,EAAV,iBAGzB+f,WAAW,EACX9e,MAAO,cACPY,QAAS,CACP8D,mBAAoB,EACpByR,eAAe,EACfmF,gBAAiB,WACjBkE,iBAAkB,IAClB6D,wBAAwB,EACxB7hB,qBAAqB,EACrByV,cAAc,EACd9B,gBAAiB,IACjB7Q,WAAW,EACXkf,QAAQ,EACRc,YAAa,UACb/iB,QAAQ,EACRE,SAAU,EACVugB,gBAAiB,CAAC,EAAG,GAAI,IACzBG,eAAgB,SAChBthB,4BAA4B,EAC5B4U,QAAQ,EACRiC,WAAW,EACXK,uBAAwB,QACxB9B,iBAAkB,GAClBjV,WAAW,EACXgQ,SAAS,EACT4Q,SAAS,GAEXlhB,aAAc,CACZ2Q,SAAU,CACRnH,UAAW,cACXR,YAAa,iCAEfgY,WAAY,CACV5N,mBAAoB,yBACpBC,iBAAkB,kBAEpB6N,QAAS,GACT4B,OAAQ,GACR1C,KAAM,CACJjc,UAAW,GACXnC,QAAS,CACPgM,YAAa,OACbE,cAAe,SACfE,WAAY,iCAEdoS,WAAY,MACZO,cAAe,SACfH,YAAa,UAsJJrN,yBARA,SAAAvB,GAAK,MAAK,CACvBmP,kBAAmB,CACjBrc,QAAS,KAMqB,CAAEiP,WAAW,GAAhCR,CAAwCqK","file":"static/js/docz-examples-01-example-basic~docz-examples-02-example-column-types~docz-examples-03-example-action~ff3dd4d6.9c91b878.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, IconButton, Tooltip } from '@material-ui/core';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableActions extends React.Component {\r\n  renderButton(action, index) {\r\n    if (typeof action === 'function') {\r\n      action = action(this.props.data);\r\n      if (!action) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const button = (\r\n      <span>\r\n        <IconButton\r\n          key={action.icon + '' + index}\r\n          color=\"inherit\"\r\n          disabled={action.disabled}          \r\n          onClick={(event) => {\r\n            if (action.onClick) {\r\n              action.onClick(event, this.props.data);\r\n              event.stopPropagation();\r\n            }\r\n          }}\r\n        >\r\n          {typeof action.icon === \"string\" ?\r\n            <Icon {...action.iconProps} fontSize=\"small\">{action.icon}</Icon>\r\n            :\r\n            <action.icon {...action.iconProps} />\r\n          }\r\n        </IconButton>\r\n      </span>\r\n    );\r\n\r\n    if (action.tooltip) {\r\n      return <Tooltip title={action.tooltip} key={action.tooltip + '' + index}>{button}</Tooltip>;\r\n    } else {\r\n      return button;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.actions) {\r\n      return this.props.actions.map((action, index) => (this.renderButton(action, index)));\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nMTableActions.defaultProps = {\r\n  actions: [],\r\n  data: {}\r\n};\r\n\r\nMTableActions.propTypes = {\r\n  actions: PropTypes.array.isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\r\n};\r\n\r\nexport default MTableActions;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableBody extends React.Component {\r\n  renderEmpty(emptyRowCount, renderData) {\r\n    const localization = { ...MTableBody.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {\r\n      let addColumn = 0;\r\n      if (this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)) {\r\n        addColumn++;\r\n      }\r\n      if(this.props.hasDetailPanel) {\r\n        addColumn++;\r\n      }\r\n      return (\r\n        <TableRow style={{ height: 49 * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1) }} key={'empty-' + 0} >\r\n          <TableCell style={{ paddingTop: 0, paddingBottom: 0, textAlign: 'center' }} colSpan={this.props.columns.length + addColumn} key=\"empty-\">\r\n            {localization.emptyDataSourceMessage}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    } else if (this.props.options.emptyRowsWhenPaging) {\r\n      return (\r\n        <React.Fragment>\r\n          {[...Array(emptyRowCount)].map((r, index) => <TableRow style={{ height: 49 }} key={'empty-' + index} />)}\r\n          {emptyRowCount > 0 && <TableRow style={{ height: 1 }} key={'empty-last1'} />}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderUngroupedRows(renderData) {\r\n    return renderData.map((data, index) => {\r\n      if (data.tableData.editing) {\r\n        return (\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            data={data}\r\n            icons={this.props.icons}\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            key={index}\r\n            mode={data.tableData.editing}\r\n            options={this.props.options}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <this.props.components.Row\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            data={data}\r\n            index={index}\r\n            key={index}\r\n            level={0}\r\n            options={this.props.options}\r\n            onRowSelected={this.props.onRowSelected}\r\n            actions={this.props.actions}\r\n            columns={this.props.columns}\r\n            getFieldValue={this.props.getFieldValue}\r\n            detailPanel={this.props.detailPanel}\r\n            path={[index + this.props.pageSize * this.props.currentPage]}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onRowClick={this.props.onRowClick}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  renderGroupedRows(groups, renderData) {\r\n    return renderData.map((groupData, index) => (\r\n      <this.props.components.GroupRow\r\n        actions={this.props.actions}\r\n        key={groupData.value || (\"\" + index)}\r\n        columns={this.props.columns}\r\n        components={this.props.components}\r\n        detailPanel={this.props.detailPanel}\r\n        getFieldValue={this.props.getFieldValue}\r\n        groupData={groupData}\r\n        groups={groups}\r\n        icons={this.props.icons}\r\n        level={0}\r\n        path={[index + this.props.pageSize * this.props.currentPage]}\r\n        onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n        onRowSelected={this.props.onRowSelected}\r\n        onRowClick={this.props.onRowClick}\r\n        onEditingCanceled={this.props.onEditingCanceled}\r\n        onEditingApproved={this.props.onEditingApproved}\r\n        onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n        onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n        options={this.props.options}\r\n        isTreeData={this.props.isTreeData}\r\n        hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    let renderData = this.props.renderData;\r\n    const groups = this.props.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    let emptyRowCount = 0;\r\n    if (this.props.options.paging) {\r\n      emptyRowCount = this.props.pageSize - renderData.length;\r\n    }\r\n    return (\r\n      <TableBody>\r\n        {this.props.options.filtering &&\r\n          <this.props.components.FilterRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            icons={this.props.icons}\r\n            emptyCell={this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            hasActions={(this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            actionsColumnIndex={this.props.options.actionsColumnIndex}\r\n            onFilterChanged={this.props.onFilterChanged}\r\n            selection={this.props.options.selection}\r\n            onFilterSelectionChanged={this.props.onFilterSelectionChanged}\r\n            localization={{ ...MTableBody.defaultProps.localization.filterRow, ...this.props.localization.filterRow }}\r\n            hasDetailPanel={!!this.props.detailPanel}\r\n            isTreeData={this.props.isTreeData}\r\n          />\r\n        }\r\n        {groups.length > 0 ?\r\n          this.renderGroupedRows(groups, renderData) :\r\n          this.renderUngroupedRows(renderData)\r\n        }\r\n\r\n        {this.props.showAddRow &&\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            key=\"key-add-row\"\r\n            mode=\"add\"\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            options={this.props.options}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        }\r\n        {this.renderEmpty(emptyRowCount, renderData)}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBody.defaultProps = {\r\n  actions: [],\r\n  currentPage: 0,\r\n  pageSize: 5,\r\n  renderData: [],\r\n  selection: false,\r\n  localization: {\r\n    emptyDataSourceMessage: 'No records to display',\r\n    filterRow: {},\r\n    editRow: {}\r\n  }\r\n};\r\n\r\nMTableBody.propTypes = {\r\n  actions: PropTypes.array,\r\n  components: PropTypes.object.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  currentPage: PropTypes.number,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  icons: PropTypes.object.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  options: PropTypes.object.isRequired,\r\n  pageSize: PropTypes.number,\r\n  renderData: PropTypes.array,\r\n  selection: PropTypes.bool.isRequired,\r\n  showAddRow: PropTypes.bool,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  localization: PropTypes.object,\r\n  onFilterChanged: PropTypes.func,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n};\r\n\r\nexport default MTableBody;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableBodyRow extends React.Component {\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.props.getFieldValue(this.props.data, columnDef);\r\n        return (\r\n          <this.props.components.Cell\r\n            icons={this.props.icons}\r\n            columnDef={columnDef}\r\n            value={value}\r\n            key={columnDef.tableData.id}\r\n            rowData={this.props.data}\r\n          />\r\n        );\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {\r\n    const actions = this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection);\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionColumn() {\r\n    return (\r\n      <TableCell padding=\"none\" key=\"key-selection-column\" style={{ width: 48 }}>\r\n        <Checkbox\r\n          checked={this.props.data.tableData.checked === true}\r\n          onClick={(e) => e.stopPropagation()}\r\n          value={this.props.data.tableData.id.toString()}\r\n          onChange={(event) => this.props.onRowSelected(event, this.props.path)}\r\n          style={{\r\n            paddingLeft: 12 + this.props.level * 20\r\n          }}\r\n        />\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  renderDetailPanelColumn() {\r\n\r\n    const CustomIcon = ({ icon, style }) => typeof icon === \"string\" ? <Icon style={style}>{icon}</Icon> : React.createElement(icon, { style });\r\n\r\n    if (typeof this.props.detailPanel == 'function') {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48, textAlign: 'center' }}>\r\n          <IconButton\r\n            style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.data.tableData.showDetailPanel) }}\r\n            onClick={(event) => {\r\n              this.props.onToggleDetailPanel(this.props.path, this.props.detailPanel);\r\n              event.stopPropagation();\r\n            }}\r\n          >\r\n            <this.props.icons.DetailPanel />\r\n          </IconButton>\r\n        </TableCell>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48 * this.props.detailPanel.length, textAlign: 'center' }}>\r\n          {this.props.detailPanel.map((panel, index) => {\r\n\r\n            if (typeof panel === \"function\") {\r\n              panel = panel(this.props.data);\r\n            }\r\n\r\n            const isOpen = this.props.data.tableData.showDetailPanel === panel.render;\r\n            let iconButton = <this.props.icons.DetailPanel />;\r\n            let animation = true;\r\n            if (isOpen) {\r\n              if (panel.openIcon) {\r\n                iconButton = <CustomIcon icon={panel.openIcon} />;\r\n                animation = false;\r\n              }\r\n              else if (panel.icon) {\r\n                iconButton = <CustomIcon icon={panel.icon} />;\r\n              }\r\n            }\r\n            else if (panel.icon) {\r\n              iconButton = <CustomIcon icon={panel.icon} />;\r\n              animation = false;\r\n            }\r\n\r\n            iconButton = (\r\n              <IconButton\r\n                key={\"key-detail-panel-\" + index}\r\n                style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(animation && isOpen) }}\r\n                disabled={panel.disabled}\r\n                onClick={(event) => {\r\n                  this.props.onToggleDetailPanel(this.props.path, panel.render);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                {iconButton}\r\n              </IconButton>);\r\n\r\n            if (panel.tooltip) {\r\n              iconButton = <Tooltip key={\"key-detail-panel-\" + index} title={panel.tooltip}>{iconButton}</Tooltip>;\r\n            }\r\n\r\n            return iconButton;\r\n          })}\r\n        </TableCell>\r\n      );\r\n    }\r\n  }\r\n\r\n  getStyle() {\r\n    let style = {       \r\n      transition: 'all ease 300ms',      \r\n    };\r\n\r\n    if (typeof this.props.options.rowStyle === \"function\") {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle(this.props.data)\r\n      };\r\n    }\r\n    else if(this.props.options.rowStyle) {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle\r\n      };\r\n    }\r\n\r\n    if (this.props.onRowClick) {\r\n      style.cursor = 'pointer';\r\n    }\r\n    \r\n    if(this.props.hasAnyEditingRow) {\r\n      style.opacity = 0.2;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const columns = this.renderColumns();\r\n    if (this.props.options.selection) {\r\n      columns.splice(0, 0, this.renderSelectionColumn());\r\n    }\r\n    if (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0) {\r\n      if (this.props.options.actionsColumnIndex === -1) {\r\n        columns.push(this.renderActions());\r\n      } else if (this.props.options.actionsColumnIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.options.selection) {\r\n          endPos = 1;\r\n        }\r\n        columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n      }\r\n    }\r\n\r\n    if (this.props.isTreeData) {\r\n      if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {\r\n        columns.splice(0, 0, (\r\n          <TableCell padding=\"none\" key={\"key-tree-data-column\"} style={{ width: 48 }}>\r\n            <IconButton\r\n              style={{\r\n                transition: 'all ease 200ms',\r\n                marginLeft: this.props.level * 20,\r\n                ...this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)\r\n              }}\r\n              onClick={(event) => {\r\n                this.props.onTreeExpandChanged(this.props.path);\r\n                event.stopPropagation();\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n          </TableCell>\r\n        ));\r\n      }\r\n      else {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-tree-data-column\"} />);\r\n      }\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      columns.splice(0, 0, this.renderDetailPanelColumn());\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const { \r\n      detailPanel, \r\n      getFieldValue, \r\n      isTreeData, \r\n      onRowClick, \r\n      onRowSelected, \r\n      onTreeExpandChanged, \r\n      onToggleDetailPanel, \r\n      onEditingCanceled,\r\n      onEditingApproved,\r\n      hasAnyEditingRow, \r\n      ...rowProps } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          selected={hasAnyEditingRow}\r\n          {...rowProps}\r\n          hover={onRowClick ? true : false}\r\n          style={this.getStyle()}\r\n          onClick={(event) => {\r\n            onRowClick && onRowClick(event, this.props.data,\r\n              (panelIndex) => {\r\n                let panel = detailPanel;\r\n                if (Array.isArray(panel)) {\r\n                  panel = panel[panelIndex || 0].render;\r\n                }\r\n\r\n                onToggleDetailPanel(this.props.path, panel);\r\n              });\r\n          }}          \r\n        >\r\n          {columns}\r\n        </TableRow>\r\n        {this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded &&\r\n          this.props.data.tableData.childRows.map((data, index) => (\r\n            <this.props.components.Row\r\n              {...this.props}\r\n              data={data}\r\n              index={index}\r\n              key={index}\r\n              level={this.props.level + 1}\r\n              path={[...this.props.path, index]}\r\n              onEditingCanceled={onEditingCanceled}\r\n              onEditingApproved={onEditingApproved}\r\n              hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n            />\r\n          ))\r\n        }\r\n        {this.props.data.tableData && this.props.data.tableData.showDetailPanel &&\r\n          <TableRow\r\n          // selected={this.props.index % 2 === 0}\r\n          >\r\n            <TableCell colSpan={columns.length} padding=\"none\">\r\n              {this.props.data.tableData.showDetailPanel(this.props.data)}\r\n            </TableCell>\r\n          </TableRow>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBodyRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  data: {},\r\n  options: {},\r\n  path: []\r\n};\r\n\r\nMTableBodyRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  columns: PropTypes.array,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, Toolbar, Chip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nclass MTableGroupbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    // padding: '8px 16px',\r\n    margin: `0 ${8}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    // background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  getListStyle = isDraggingOver => ({\r\n    // background: isDraggingOver ? 'lightblue' : '#0000000a',\r\n    background: '#0000000a',\r\n    display: 'flex',\r\n    width: '100%',\r\n    padding: 8,\r\n    overflow: 'auto',\r\n    border: '1px solid #ccc',\r\n    borderStyle: 'dashed'\r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <Toolbar style={{ padding: 0, minHeight: 'unset' }}>\r\n        <Droppable droppableId=\"groups\" direction=\"horizontal\" placeholder=\"Deneme\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={this.getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.props.groupColumns.length > 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.groupedBy}\r\n                </Typography>\r\n              }\r\n              {this.props.groupColumns.map((columnDef, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={columnDef.tableData.id}\r\n                    draggableId={columnDef.tableData.id.toString()}\r\n                    index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                      >\r\n                        <Chip\r\n                          {...provided.dragHandleProps}\r\n                          onClick={() => this.props.onSortChanged(columnDef)}\r\n                          label={\r\n                            <div>\r\n                              <div style={{ float: 'left' }}>{columnDef.title}</div>\r\n                              {columnDef.tableData.groupSort &&\r\n                                <this.props.icons.SortArrow\r\n                                  style={{\r\n                                    transition: '300ms ease all',\r\n                                    transform: columnDef.tableData.groupSort === \"desc\" ? 'rotate(-180deg)' : 'none',\r\n                                    fontSize: 18\r\n                                  }}\r\n                                />\r\n                              }\r\n                            </div>\r\n                          }\r\n                          style={{ boxShadow: 'none', textTransform: 'none' }}\r\n                          variant=\"contained\"\r\n                          onDelete={() => this.props.onGroupRemoved(columnDef, index)}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {this.props.groupColumns.length === 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.placeholder}\r\n                </Typography>\r\n              }\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupbar.defaultProps = {\r\n};\r\n\r\nMTableGroupbar.propTypes = {\r\n  localization: PropTypes.shape({\r\n    groupedBy: PropTypes.string,\r\n    placeholder: PropTypes.string\r\n  }),\r\n};\r\n\r\nexport default MTableGroupbar;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableCell, TableRow, IconButton } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableGroupRow extends React.Component {\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  render() {\r\n    let colSpan = this.props.columns.filter(columnDef => !columnDef.hidden).length;\r\n    this.props.options.selection && colSpan++;    \r\n    this.props.detailPanel && colSpan++;\r\n    this.props.actions && this.props.actions.length > 0 && colSpan++;\r\n    const column = this.props.groups[this.props.level];\r\n\r\n    let detail;\r\n    if (this.props.groupData.isExpanded) {\r\n      if (this.props.groups.length > (this.props.level + 1)) { // Is there another group\r\n        detail = this.props.groupData.groups.map((groupData, index) => (\r\n          <this.props.components.GroupRow\r\n            actions={this.props.actions}\r\n            key={groupData.value || (\"\" + index)}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            groupData={groupData}\r\n            groups={this.props.groups}            \r\n            icons={this.props.icons}\r\n            level={this.props.level + 1}\r\n            path={[...this.props.path, index]}\r\n            onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            options={this.props.options}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        ));\r\n      }\r\n      else {\r\n        detail = this.props.groupData.data.map((rowData, index) => (\r\n          <this.props.components.Row\r\n            actions={this.props.actions}\r\n            key={index}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            data={rowData}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            icons={this.props.icons}\r\n            path={[...this.props.path, index]}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        ));\r\n      }\r\n    }\r\n\r\n    const freeCells = [];\r\n    for (let i = 0; i < this.props.level; i++) {\r\n      freeCells.push(<TableCell padding=\"checkbox\" />);\r\n    }\r\n\r\n    let value = this.props.groupData.value;\r\n    if(column.render) {\r\n      value = column.render(value, 'group');\r\n    }\r\n    else if (column.lookup) {\r\n      value = column.lookup[value];\r\n    }\r\n    if((value === undefined || value === null) && column.emptyValue) {\r\n      if (typeof column.emptyValue === 'function') {\r\n        value = column.emptyValue();\r\n      } else {\r\n        value = column.emptyValue;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableRow>\r\n          {freeCells}\r\n          <this.props.components.Cell colSpan={colSpan} padding=\"none\" value={value}>\r\n            <IconButton\r\n              style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.groupData.isExpanded) }}\r\n              onClick={(event) => {\r\n                this.props.onGroupExpandChanged(this.props.path);\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n            <b>{column.title + \": \"}</b>            \r\n          </this.props.components.Cell>\r\n        </TableRow>\r\n        {detail}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupRow.defaultProps = {\r\n  columns: [],\r\n  groups: [],\r\n  options: {},\r\n  level: 0\r\n};\r\n\r\nMTableGroupRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.arrayOf(PropTypes.object),\r\n  components: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n  getFieldValue: PropTypes.func,\r\n  groupData: PropTypes.object,\r\n  groups: PropTypes.arrayOf(PropTypes.object),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  icons: PropTypes.object,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  level: PropTypes.number,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onRowSelected: PropTypes.func,\r\n  onRowClick: PropTypes.func,  \r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  options: PropTypes.object,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport { Icon, TableCell } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport default class MTableCell extends React.Component {\r\n  getRenderValue() {\r\n    if (this.props.columnDef.emptyValue !== undefined && (this.props.value === undefined || this.props.value === null)) {\r\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\r\n    }\r\n    if (this.props.columnDef.render) {\r\n      return this.props.columnDef.render(this.props.rowData, 'row');\r\n    } else if (this.props.columnDef.type === 'boolean') {\r\n      const style = { textAlign: 'left', width: '48px' };\r\n      if (this.props.value) {\r\n        return <this.props.icons.Check style={style} />;\r\n      } else {\r\n        return <this.props.icons.ThirdStateCheck style={style} />;\r\n      }\r\n    } else if (this.props.columnDef.type === 'date') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleDateString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'time') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleTimeString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'datetime') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'currency') {\r\n      return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);\r\n    }\r\n\r\n    return this.props.value;\r\n  }\r\n\r\n  getEmptyValue(emptyValue) {\r\n    if (typeof emptyValue === 'function') {\r\n      return this.props.columnDef.emptyValue(this.props.rowData);\r\n    } else {\r\n      return emptyValue;\r\n    }\r\n  }\r\n\r\n  getCurrencyValue(currencySetting, value) {\r\n    if (currencySetting !== undefined) {\r\n      return new Intl.NumberFormat((currencySetting.locale !== undefined) ? currencySetting.locale : 'en-US',\r\n        {\r\n          style: 'currency',\r\n          currency: (currencySetting.currencyCode !== undefined) ? currencySetting.currencyCode : 'USD',\r\n          minimumFractionDigits: (currencySetting.minimumFractionDigits !== undefined) ? currencySetting.minimumFractionDigits : 2,\r\n          maximumFractionDigits: (currencySetting.maximumFractionDigits !== undefined) ? currencySetting.maximumFractionDigits : 2\r\n        }).format((value !== undefined) ? value : 0);\r\n    } else {\r\n      return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format((value !== undefined) ? value : 0);\r\n    }\r\n  }\r\n\r\n  handleClickCell = e => {\r\n    if (this.props.columnDef.disableClick) {\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  getStyle = () => {\r\n    let cellStyle = {};\r\n\r\n    if (typeof this.props.columnDef.cellStyle === 'function') {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle(this.props.value) };\r\n    } else {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle };\r\n    }\r\n\r\n    if (this.props.columnDef.disableClick) {\r\n      cellStyle.cursor = 'default';\r\n    }\r\n\r\n    return { ...this.props.style, ...cellStyle };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { columnDef, rowData, ...cellProps } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        {...cellProps}\r\n        style={this.getStyle()}\r\n        align={['numeric'].indexOf(this.props.columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n        onClick={this.handleClickCell}\r\n      >\r\n        {this.props.children}\r\n        {this.getRenderValue()}\r\n      </TableCell>\r\n    );\r\n  }\r\n}\r\n\r\nMTableCell.defaultProps = {\r\n  columnDef: {},\r\n  value: undefined\r\n};\r\n\r\nMTableCell.propTypes = {\r\n  columnDef: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  rowData: PropTypes.object\r\n};\r\n","import * as React from 'react';\r\nimport { TextField, Checkbox, Select, MenuItem } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormField extends React.Component {\r\n\r\n  renderLookupField() {\r\n    return (\r\n      <Select\r\n        value={this.props.value || ''}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        style={{\r\n          fontSize: 13,\r\n        }}\r\n      >\r\n        {Object.keys(this.props.columnDef.lookup).map(key => (\r\n          <MenuItem key={key} value={key}>{this.props.columnDef.lookup[key]}</MenuItem>)\r\n        )}\r\n      </Select>\r\n    );\r\n\r\n  }\r\n\r\n  renderBooleanField() {\r\n    return (\r\n      <Checkbox\r\n        checked={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.checked)}\r\n        style={{\r\n          paddingLeft: 0,\r\n          paddingTop: 0,\r\n          paddingBottom: 0\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          format=\"dd.MM.yyyy\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <TimePicker\r\n          format=\"HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderDateTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DateTimePicker\r\n          format=\"dd.MM.yyyy HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTextField() {\r\n    return (\r\n      <TextField\r\n        style={this.props.columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={this.props.columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        placeholder={this.props.columnDef.title}\r\n        value={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        InputProps={{\r\n          style: {\r\n            fontSize: 13,\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCurrencyField() {\r\n    return \"ok\";\r\n  }\r\n\r\n  render() {\r\n    let component = \"ok\";\r\n\r\n    if (this.props.columnDef.lookup) {\r\n      component = this.renderLookupField();\r\n    }\r\n    else if (this.props.columnDef.type === \"boolean\") {\r\n      component = this.renderBooleanField();\r\n    }\r\n    else if (this.props.columnDef.type === \"date\") {\r\n      component = this.renderDateField();\r\n    }\r\n    else if (this.props.columnDef.type === \"time\") {\r\n      component = this.renderTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"datetime\") {\r\n      component = this.renderDateTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"currency\") {\r\n      component = this.renderCurrencyField();\r\n    }\r\n    else {\r\n      component = this.renderTextField();\r\n    }\r\n\r\n    return component;\r\n\r\n  }\r\n}\r\n\r\nFormField.propTypes = {\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n  columnDef: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FormField;","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport FormField from './form/form-field';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableEditRow extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data ? JSON.parse(JSON.stringify(props.data)) : {}\r\n    };    \r\n  }\r\n\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.state.data[columnDef.field];\r\n        const style = {};\r\n        if (index === 0) {\r\n          style.paddingLeft = 24 + this.props.level * 20;\r\n        }\r\n        return (\r\n          <TableCell\r\n            key={columnDef.tableData.id}\r\n            align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n          >\r\n            <FormField\r\n              key={columnDef.tableData.id}\r\n              columnDef={columnDef}\r\n              value={value}\r\n              onChange={value => {\r\n                const data = { ...this.state.data };\r\n                data[columnDef.field] = value;\r\n                this.setState({ data });\r\n              }} />\r\n          </TableCell>\r\n        );\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {    \r\n    const localization = { ...MTableEditRow.defaultProps.localization, ...this.props.localization };\r\n    const actions = [\r\n      {\r\n        icon: this.props.icons.Check,\r\n        tooltip: localization.saveTooltip,\r\n        onClick: () => {\r\n          const newData = this.state.data;\r\n          delete newData.tableData;\r\n          this.props.onEditingApproved(this.props.mode, this.state.data, this.props.data);\r\n        }\r\n      },\r\n      {\r\n        icon: this.props.icons.Clear,\r\n        tooltip: localization.cancelTooltip,\r\n        onClick: () => {\r\n          this.props.onEditingCanceled(this.props.mode, this.props.data);\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  getStyle() {\r\n    const style = {\r\n      // boxShadow: '1px 1px 1px 1px rgba(0,0,0,0.2)',\r\n      borderBottom: '1px solid red'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const localization = { ...MTableEditRow.defaultProps.localization, ...this.props.localization };\r\n\r\n    let columns;\r\n    if (this.props.mode === \"add\" || this.props.mode === \"update\") {\r\n      columns = this.renderColumns();\r\n    }\r\n    else {\r\n      const colSpan = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1)).length;\r\n      columns = [\r\n        <TableCell\r\n          padding={this.props.options.actionsColumnIndex === 0 ? \"none\" : undefined}\r\n          key=\"key-selection-cell\"\r\n          colSpan={colSpan}>\r\n          <Typography variant=\"h6\">\r\n            {localization.deleteText}\r\n          </Typography>\r\n        </TableCell>\r\n      ];\r\n    }\r\n\r\n\r\n    if (this.props.options.selection) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-selection-cell\" />);\r\n    }\r\n\r\n    if (this.props.options.actionsColumnIndex === -1) {\r\n      columns.push(this.renderActions());\r\n    } else if (this.props.options.actionsColumnIndex >= 0) {\r\n      let endPos = 0;\r\n      if (this.props.options.selection) {\r\n        endPos = 1;\r\n      }\r\n      columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-cell\" />);\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const { \r\n      detailPanel, \r\n      isTreeData, \r\n      onRowClick, \r\n      onRowSelected, \r\n      onTreeExpandChanged, \r\n      onToggleDetailPanel, \r\n      onEditingApproved,\r\n      onEditingCanceled,\r\n      ...rowProps \r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          {...rowProps}\r\n          style={this.getStyle()}\r\n        >\r\n          {columns}\r\n        </TableRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableEditRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  options: {},\r\n  path: [],\r\n  localization: {\r\n    saveTooltip: 'Save',\r\n    cancelTooltip: 'Cancel',\r\n    deleteText: 'Are you sure delete this row?',\r\n  }\r\n};\r\n\r\nMTableEditRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  columns: PropTypes.array,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,  \r\n  localization: PropTypes.object\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableCell, TableRow, TextField,\r\n  FormControl, Select, Input,\r\n  MenuItem, Checkbox, ListItemText,\r\n  InputAdornment, Icon, Tooltip,\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MTableFilterRow extends React.Component {\r\n  renderLookupFilter = (columnDef) => (\r\n    <FormControl style={{ width: '100%' }}>\r\n      <Select\r\n        multiple\r\n        value={columnDef.tableData.filterValue || []}\r\n        onChange={event => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        input={<Input id=\"select-multiple-checkbox\" />}\r\n        renderValue={selecteds => selecteds.map(selected => columnDef.lookup[selected]).join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {\r\n          Object.keys(columnDef.lookup).map(key => (\r\n            <MenuItem key={key} value={key}>\r\n              <Checkbox checked={columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false} />\r\n              <ListItemText primary={columnDef.lookup[key]} />\r\n            </MenuItem>\r\n          ))\r\n        }\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n\r\n  renderBooleanFilter = (columnDef) => (\r\n    <Checkbox\r\n      indeterminate={columnDef.tableData.filterValue === undefined}\r\n      checked={columnDef.tableData.filterValue === 'checked'}\r\n      onChange={() => {\r\n        let val;\r\n        if (columnDef.tableData.filterValue === undefined) {\r\n          val = 'checked';\r\n        } else if (columnDef.tableData.filterValue === 'checked') {\r\n          val = 'unchecked';\r\n        }\r\n\r\n        this.props.onFilterChanged(columnDef.tableData.id, val);\r\n      }}\r\n    />\r\n  )\r\n\r\n  renderDefaultFilter = (columnDef) => {\r\n    const localization = { ...MTableFilterRow.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TextField\r\n        style={columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        value={columnDef.tableData.filterValue || ''}\r\n        onChange={(event) => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Tooltip title={localization.filterTooltip}>\r\n                <this.props.icons.Filter />\r\n              </Tooltip>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateTypeFilter = (columnDef) => {\r\n    let dateInputElement = null;\r\n    const onDateInputChange = date => this.props.onFilterChanged(columnDef.tableData.id, date);\r\n\r\n    if (columnDef.type === 'date') {\r\n      dateInputElement = (\r\n        <DatePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'datetime') {\r\n      dateInputElement = (\r\n        <DateTimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'time') {\r\n      dateInputElement = (\r\n        <TimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        {dateInputElement}\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  getComponentForColumn(columnDef) {\r\n    if (columnDef.filtering === false) {\r\n      return null;\r\n    }\r\n\r\n    if (columnDef.field) {\r\n      if (columnDef.lookup) {\r\n        return this.renderLookupFilter(columnDef);\r\n      } else if (columnDef.type === 'boolean') {\r\n        return this.renderBooleanFilter(columnDef);\r\n      } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\r\n        return this.renderDateTypeFilter(columnDef);\r\n      } else {\r\n        return this.renderDefaultFilter(columnDef);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map(columnDef => (\r\n        <TableCell key={columnDef.tableData.id}>\r\n          {this.getComponentForColumn(columnDef)}\r\n        </TableCell>\r\n      ));\r\n\r\n    if (this.props.selection) {\r\n      columns.splice(0, 0, (\r\n        <TableCell padding=\"none\" key=\"key-selection-column\">\r\n          <Checkbox onChange={this.props.onFilterSelectionChanged} />\r\n        </TableCell>)\r\n      );\r\n    }\r\n    if (this.props.emptyCell && this.props.hasActions) {\r\n      if (this.props.actionsColumnIndex === -1) {\r\n        columns.push(<TableCell key=\"key-action-column\" />);\r\n      } else {\r\n        let endPos = 0;\r\n        if (this.props.selection) {\r\n          endPos = 1;\r\n        }\r\n        columns.splice(this.props.actionsColumnIndex + endPos, 0, <TableCell key=\"key-action-column\" />);\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-column\" />);\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      columns.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-filter\"}          \r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-filter\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    return (\r\n      <TableRow style={{ height: 10 }}>\r\n        {columns}\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nMTableFilterRow.defaultProps = {\r\n  emptyCell: false,\r\n  columns: [],\r\n  selection: false,\r\n  hasActions: false,\r\n  localization: {\r\n    filterTooltip: 'Filter'\r\n  }\r\n};\r\n\r\nMTableFilterRow.propTypes = {\r\n  emptyCell: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onFilterChanged: PropTypes.func.isRequired,\r\n  selection: PropTypes.bool.isRequired,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  actionsColumnIndex: PropTypes.number,\r\n  hasActions: PropTypes.bool,\r\n  localization: PropTypes.object\r\n};\r\n\r\nexport default MTableFilterRow;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableHead, TableRow, TableCell,\r\n  TableSortLabel, Checkbox, withStyles\r\n} from '@material-ui/core';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableHeader extends React.Component {\r\n  stickyStyle = {\r\n    position: 'sticky',\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: 'white', // Change according to theme,    \r\n  }\r\n\r\n  renderHeader() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => (\r\n        <TableCell\r\n          key={columnDef.tableData.id}\r\n          align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n\r\n          style={{ ...this.props.headerStyle, ...columnDef.headerStyle, ...this.stickyStyle }}\r\n        >\r\n          {(columnDef.sort !== false && columnDef.sorting !== false && this.props.sorting)\r\n            ? <TableSortLabel\r\n              active={this.props.orderBy === columnDef.tableData.id}\r\n              direction={this.props.orderDirection || 'asc'}\r\n              onClick={() => {\r\n                const orderDirection = columnDef.tableData.id !== this.props.orderBy ? 'asc' : this.props.orderDirection === 'asc' ? 'desc' : 'asc';\r\n                this.props.onOrderChange(columnDef.tableData.id, orderDirection);\r\n              }}\r\n            >\r\n              {(this.props.grouping && columnDef.field)\r\n                ? <Draggable\r\n                  key={columnDef.tableData.id}\r\n                  draggableId={columnDef.tableData.id.toString()}\r\n                  isDragDisabled={columnDef.grouping === false}\r\n                  index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    // style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                    >\r\n                      {columnDef.title}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n                : columnDef.title\r\n              }\r\n            </TableSortLabel>\r\n            : columnDef.title\r\n          }\r\n        </TableCell>\r\n      ));\r\n    return mapArr;\r\n  }\r\n\r\n  renderActionsHeader() {\r\n    const localization = { ...MTableHeader.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TableCell\r\n        key=\"key-actions-column\"\r\n        padding=\"checkbox\"\r\n        style={{ ...this.props.headerStyle, textAlign: 'center', ...this.stickyStyle }}\r\n      >\r\n        <TableSortLabel>{localization.actions}</TableSortLabel>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionHeader() {\r\n    return (\r\n      <TableCell\r\n        padding=\"none\"\r\n        key=\"key-selection-column\"\r\n        style={{ ...this.props.headerStyle, ...this.stickyStyle }}\r\n      >\r\n        <Checkbox\r\n          indeterminate={this.props.selectedCount > 0 && this.props.selectedCount < this.props.dataCount}\r\n          checked={this.props.selectedCount === this.props.dataCount}\r\n          onChange={(event, checked) => this.props.onAllSelected && this.props.onAllSelected(checked)}\r\n        />\r\n      </TableCell>\r\n    );\r\n  }\r\n  render() {\r\n    const headers = this.renderHeader();\r\n    if (this.props.hasSelection && this.props.dataCount) {\r\n      headers.splice(0, 0, this.renderSelectionHeader());\r\n    }\r\n\r\n    if (this.props.showActionsColumn) {\r\n      if (this.props.actionsHeaderIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.hasSelection) {\r\n          endPos = 1;\r\n        }\r\n        headers.splice(this.props.actionsHeaderIndex + endPos, 0, this.renderActionsHeader());\r\n      } else if (this.props.actionsHeaderIndex === -1) {\r\n        headers.push(this.renderActionsHeader());\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key=\"key-detail-panel-column\"\r\n          style={{ ...this.props.headerStyle, ...this.stickyStyle }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-header\"}\r\n          style={{ ...this.props.headerStyle, ...this.stickyStyle }}\r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        headers.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-header\" + columnDef.tableData.id} style={this.stickyStyle} />);\r\n      });\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headers}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nMTableHeader.defaultProps = {\r\n  dataCount: 0,\r\n  hasSelection: false,\r\n  headerStyle: {},\r\n  selectedCount: 0,\r\n  sorting: true,\r\n  localization: {\r\n    actions: 'Actions'\r\n  },\r\n  orderBy: undefined,\r\n  orderDirection: 'asc',\r\n  actionsHeaderIndex: 0\r\n};\r\n\r\nMTableHeader.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  dataCount: PropTypes.number,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  hasSelection: PropTypes.bool,\r\n  headerStyle: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  selectedCount: PropTypes.number,\r\n  sorting: PropTypes.bool,\r\n  onAllSelected: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  orderBy: PropTypes.number,\r\n  orderDirection: PropTypes.string,\r\n  actionsHeaderIndex: PropTypes.number,\r\n  showActionsColumn: PropTypes.bool,\r\n};\r\n\r\nexport default MTableHeader;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage, theme } = this.props;\r\n\r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };    \r\n\r\n    return (      \r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.firstTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.firstAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.LastPage /> : <this.props.icons.FirstPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.NextPage /> : <this.props.icons.PreviousPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.PreviousPage /> : <this.props.icons.NextPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.lastTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleLastPageButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.lastAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.FirstPage /> : <this.props.icons.LastPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.direction === 'rtl' ? 0 : theme.spacing.unit * 2.5,\r\n    marginRight: theme.direction === 'rtl' ? theme.spacing.unit * 2.5 : 0,\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  theme: PropTypes.any\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    firstTooltip: 'First Page',\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    lastTooltip: 'Last Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip, Hidden, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleNumberButtonClick = number => event => {\r\n    this.props.onChangePage(event, number);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage } = this.props;\r\n    \r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };\r\n    const maxPages = Math.ceil(count / rowsPerPage) - 1;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              <this.props.icons.PreviousPage/>\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Hidden smDown={true}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              aria-label={localization.firstAriaLabel}\r\n            ><Typography variant={page === 0 ? 'h6' : 'body1'}>1</Typography></IconButton></span>\r\n            {page > 2 && <span>..</span>}  \r\n            {page > 1 && <span><IconButton\r\n                onClick={this.handleNumberButtonClick(page-1)}\r\n                aria-label={localization.lastAriaLabel}\r\n              ><Typography variant='body1'>{page}</Typography></IconButton></span>}   \r\n            {page > 0 && page < maxPages &&<span> <IconButton\r\n                onClick={this.handleNumberButtonClick(page)}\r\n                aria-label={localization.lastAriaLabel}\r\n              >\r\n              <Typography variant='h6'>{page + 1}</Typography>\r\n            </IconButton></span>}    \r\n            {page < maxPages -1 && <span><IconButton\r\n                onClick={this.handleNumberButtonClick(page+1)}\r\n                aria-label={localization.lastAriaLabel}\r\n              ><Typography variant='body1'>{page + 2}</Typography></IconButton></span>}  \r\n              {page < maxPages -2 && <span>..</span>}  \r\n            {maxPages > 0 && <span> <IconButton\r\n                onClick={this.handleLastPageButtonClick}\r\n                aria-label={localization.lastAriaLabel}\r\n              >\r\n              <Typography variant={page === maxPages ? 'h6' : 'body1'}>{maxPages + 1}</Typography>\r\n            </IconButton></span>}\r\n        </Hidden>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= maxPages}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              <this.props.icons.NextPage/>\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, FormControlLabel, Icon, IconButton, InputAdornment, Menu, MenuItem, TextField, Toolbar, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport classNames from 'classnames';\r\nimport { CsvBuilder } from 'filefy';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableToolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsButtonAnchorEl: null,\r\n      exportButtonAnchorEl: null\r\n    };\r\n  }\r\n\r\n  exportCsv = () => {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => {\r\n        return !columnDef.hidden && columnDef.field && columnDef.export !== false; \r\n      });\r\n\r\n    const data = this.props.renderData.map(rowData =>\r\n      columns.map(columnDef => rowData[columnDef.field])\r\n    );\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv')\r\n      .setDelimeter(this.props.exportDelimiter)\r\n      .setColumns(columns.map(columnDef => columnDef.title))\r\n      .addRows(data)\r\n      .exportFile();\r\n\r\n    this.setState({ exportButtonAnchorEl: null });\r\n  }\r\n\r\n  renderSearch() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.search) {\r\n      return (\r\n        <TextField\r\n          className={this.props.classes.searchField}\r\n          value={this.props.searchText}\r\n          onChange={event => this.props.onSearchChanged(event.target.value)}\r\n          color=\"inherit\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Tooltip title={localization.searchTooltip}>\r\n                  <this.props.icons.Search color=\"inherit\" fontSize=\"small\" />\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  disabled={!this.props.searchText}\r\n                  onClick={() => this.props.onSearchChanged(\"\")}\r\n                >\r\n                  <this.props.icons.ResetSearch color=\"inherit\" fontSize=\"small\"/>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            style: this.props.searchFieldStyle\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderDefaultActions() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <div>\r\n        {this.renderSearch()}\r\n        {this.props.columnsButton &&\r\n          <span>\r\n            <Tooltip title={localization.showColumnsTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ columnsButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.showColumnsAriaLabel}>\r\n\r\n                <this.props.icons.ViewColumn />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.columnsButtonAnchorEl}\r\n              open={Boolean(this.state.columnsButtonAnchorEl)}\r\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}>\r\n              <MenuItem key={\"text\"} disabled style={{ opacity: 1, fontWeight: 600, fontSize: 12 }}>\r\n                {localization.addRemoveColumns}\r\n              </MenuItem>\r\n              {\r\n                this.props.columns.map((col, index) => {\r\n                  return (\r\n                    <MenuItem key={col.tableData.id} disabled={col.removable === false}>\r\n                      <FormControlLabel\r\n                        label={col.title}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={!col.hidden}\r\n                            onChange={(event, checked) => {\r\n                              this.props.onColumnsChanged(col.tableData.id, !checked);\r\n                            }\r\n                            } />\r\n                        }\r\n                      />\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              }\r\n            </Menu>\r\n          </span>\r\n        }\r\n        {this.props.exportButton &&\r\n          <span>\r\n            <Tooltip title={localization.exportTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ exportButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.exportAriaLabel}>\r\n                <this.props.icons.Export />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.exportButtonAnchorEl}\r\n              open={Boolean(this.state.exportButtonAnchorEl)}\r\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\r\n            >\r\n              <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\r\n                {localization.exportName}\r\n              </MenuItem>\r\n            </Menu>\r\n          </span>\r\n\r\n        }\r\n        <this.props.components.Actions actions={this.props.actions && this.props.actions.filter(a => a.isFreeAction)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelectedActions() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderSearch()}\r\n        <this.props.components.Actions actions={this.props.actions.filter(a => !a.isFreeAction)} data={this.props.selectedRows} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderActions() {\r\n    return (\r\n      <div>\r\n        {this.props.selectedRows && this.props.selectedRows.length > 0\r\n          ? this.renderSelectedActions()\r\n          : this.renderDefaultActions()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    const title = this.props.showTitle ? (this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.title) : null;\r\n    return (\r\n      <Toolbar className={classNames(classes.root, { [classes.highlight]: this.props.selectedRows && this.props.selectedRows.length > 0 })}>\r\n        {title && <div className={classes.title}>\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n        </div>}\r\n        {this.props.toolbarButtonAlignment === 'right' && <div className={classes.spacer} />}\r\n        <div className={classes.actions}>\r\n          {this.renderActions()}\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nMTableToolbar.defaultProps = {\r\n  actions: [],\r\n  columns: [],\r\n  columnsButton: false,\r\n  localization: {\r\n    addRemoveColumns: 'Add or remove columns',\r\n    nRowsSelected: '{0} row(s) selected',\r\n    showColumnsTitle: 'Show Columns',\r\n    showColumnsAriaLabel: 'Show Columns',\r\n    exportTitle: 'Export',\r\n    exportAriaLabel: 'Export',\r\n    exportName: 'Export as CSV',\r\n    searchTooltip: 'Search'\r\n  },\r\n  search: true,\r\n  showTitle: true,\r\n  toolbarButtonAlignment: 'right',\r\n  searchText: '',\r\n  selectedRows: [],\r\n  title: 'No Title!'\r\n};\r\n\r\nMTableToolbar.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.array,\r\n  columnsButton: PropTypes.bool,\r\n  localization: PropTypes.object.isRequired,\r\n  onColumnsChanged: PropTypes.func.isRequired,\r\n  onSearchChanged: PropTypes.func.isRequired,\r\n  search: PropTypes.bool.isRequired,\r\n  searchFieldStyle: PropTypes.object,\r\n  searchText: PropTypes.string.isRequired,\r\n  selectedRows: PropTypes.array,\r\n  title: PropTypes.string.isRequired,\r\n  showTitle: PropTypes.bool.isRequired,\r\n  toolbarButtonAlignment: PropTypes.string.isRequired,\r\n  renderData: PropTypes.array,\r\n  exportButton: PropTypes.bool,\r\n  exportDelimiter: PropTypes.string,\r\n  exportFileName: PropTypes.string,\r\n  classes: PropTypes.object\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark\r\n      },\r\n  spacer: {\r\n    flex: '1 1 10%'\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto'\r\n  },\r\n  searchField: {\r\n    paddingLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableToolbar);\r\n","import formatDate from 'date-fns/format';\r\n\r\nexport default class DataManager {\r\n  applyFilters = false;\r\n  applySearch = false;\r\n  currentPage = 0;\r\n  detailPanelType = 'multiple'\r\n  filterSelectionChecked = false;\r\n  lastDetailPanelRow = undefined;\r\n  lastEditingRow = undefined;\r\n  orderBy = -1;\r\n  orderDirection = '';\r\n  pageSize = 5;\r\n  paging = true;\r\n  parentFunc = null;\r\n  searchText = '';\r\n  selectedCount = 0;\r\n  treefiedDataLength = 0;\r\n\r\n  data = [];\r\n  columns = [];\r\n\r\n  filteredData = [];\r\n  searchedData = [];\r\n  groupedData = [];\r\n  treefiedData = [];\r\n  sortedData = [];\r\n  pagedData = [];\r\n  renderData = [];\r\n\r\n  filtered = false;\r\n  searched = false;\r\n  grouped = false;\r\n  treefied = false;\r\n  sorted = false;\r\n  paged = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setData(data) {\r\n    this.selectedCount = 0;\r\n\r\n    this.data = data.map((row, index) => {\r\n      row.tableData = { ...row.tableData, id: index };\r\n      if (row.tableData.checked) {\r\n        this.selectedCount++;\r\n      }\r\n      return row;\r\n    });\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  setColumns(columns) {\r\n    this.columns = columns.map((columnDef, index) => {\r\n      columnDef.tableData = {\r\n        filterValue: columnDef.defaultFilter,\r\n        groupOrder: columnDef.defaultGroupOrder,\r\n        groupSort: columnDef.defaultGroupSort || 'asc',\r\n        ...columnDef.tableData,\r\n        id: index\r\n      };\r\n      return columnDef;\r\n    });\r\n  }\r\n\r\n  changeApplySearch(applySearch) {\r\n    this.applySearch = applySearch;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeApplyFilters(applyFilters) {\r\n    this.applyFilters = applyFilters;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changePaging(paging) {\r\n    this.paging = paging;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeCurrentPage(currentPage) {\r\n    this.currentPage = currentPage;\r\n    this.paged = false;\r\n  }\r\n\r\n  changePageSize(pageSize) {\r\n    this.pageSize = pageSize;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeParentFunc(parentFunc) {\r\n    this.parentFunc = parentFunc;\r\n  }\r\n\r\n  changeFilterValue(columnId, value) {\r\n    this.columns[columnId].tableData.filterValue = value;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeFilterSelectionChecked(checked) {\r\n    this.filterSelectionChecked = checked;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeRowSelected(checked, path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.checked = checked;\r\n    this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n\r\n    const checkChildRows = rowData => {\r\n      if(rowData.tableData.childRows) {\r\n        rowData.tableData.childRows.forEach(childRow => {\r\n          childRow.tableData.checked = checked;\r\n          this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n          checkChildRows(childRow);\r\n        });\r\n      }\r\n    };\r\n\r\n    checkChildRows(rowData);\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeDetailPanelVisibility(path, render) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n\r\n    if (rowData.tableData.showDetailPanel === render) {\r\n      rowData.tableData.showDetailPanel = undefined;\r\n    }\r\n    else {\r\n      rowData.tableData.showDetailPanel = render;\r\n    }\r\n\r\n    if (this.detailPanelType === 'single' && this.lastDetailPanelRow && this.lastDetailPanelRow != rowData) {\r\n      this.lastDetailPanelRow.tableData.showDetailPanel = undefined;\r\n    }\r\n\r\n    this.lastDetailPanelRow = rowData;\r\n  }\r\n\r\n  changeGroupExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.isExpanded = !rowData.isExpanded;\r\n  }\r\n\r\n  changeSearchText(searchText) {\r\n    this.searchText = searchText;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeRowEditing(rowData, mode) {\r\n    if (rowData) {\r\n      rowData.tableData.editing = mode;\r\n\r\n      if (this.lastEditingRow && this.lastEditingRow != rowData) {\r\n        this.lastEditingRow.tableData.editing = undefined;\r\n      }\r\n\r\n      if (mode) {\r\n        this.lastEditingRow = rowData;\r\n      }\r\n      else {\r\n        this.lastEditingRow = undefined;\r\n      }\r\n    }\r\n    else if (this.lastEditingRow) {\r\n      this.lastEditingRow.tableData.editing = undefined;\r\n      this.lastEditingRow = undefined;\r\n    }\r\n  }\r\n\r\n  changeAllSelected(checked) {\r\n    let selectedCount = 0;\r\n    if (this.isDataType(\"group\")) {\r\n      const setCheck = (data) => {\r\n        data.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            setCheck(element.groups);\r\n          }\r\n          else {\r\n            element.data.forEach(d => {\r\n              d.tableData.checked = checked;\r\n              selectedCount++;\r\n            });\r\n          }\r\n        });\r\n      };\r\n\r\n      setCheck(this.groupedData);\r\n    }\r\n    else {\r\n      this.searchedData.map(row => {\r\n        row.tableData.checked = checked;\r\n        return row;\r\n      });\r\n      selectedCount = this.searchedData.length;\r\n    }\r\n\r\n    this.selectedCount = checked ? selectedCount : 0;\r\n  }\r\n\r\n  changeOrder(orderBy, orderDirection) {\r\n    this.orderBy = orderBy;\r\n    this.orderDirection = orderDirection;\r\n    this.currentPage = 0;\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeGroupOrder(columnId) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n\r\n    if (column.tableData.groupSort === 'asc') {\r\n      column.tableData.groupSort = 'desc';\r\n    }\r\n    else {\r\n      column.tableData.groupSort = 'asc';\r\n    }\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeColumnHidden(columnId, hidden) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n    column.hidden = hidden;\r\n  }\r\n\r\n  changeTreeExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.isTreeExpanded = !rowData.tableData.isTreeExpanded;\r\n  }\r\n\r\n  changeDetailPanelType(type) {\r\n    this.detailPanelType = type;\r\n  }\r\n\r\n  changeByDrag(result) {\r\n    let start = 0;\r\n\r\n    let groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n\r\n    if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"groups\") {\r\n      start = Math.min(result.destination.index, result.source.index);\r\n      const end = Math.max(result.destination.index, result.source.index);\r\n\r\n      groups = groups.slice(start, end + 1);\r\n\r\n      if (result.destination.index < result.source.index) {\r\n        // Take last and add as first\r\n        const last = groups.pop();\r\n        groups.unshift(last);\r\n      }\r\n      else {\r\n        // Take first and add as last\r\n        const last = groups.shift();\r\n        groups.push(last);\r\n      }\r\n    }\r\n    else if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"headers\") {\r\n      const newGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      groups.splice(result.destination.index, 0, newGroup);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"groups\") {\r\n      const removeGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      removeGroup.tableData.groupOrder = undefined;\r\n      groups.splice(result.source.index, 1);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"headers\") {\r\n      // Column reordering\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < groups.length; i++) {\r\n      groups[i].tableData.groupOrder = start + i;\r\n    }\r\n\r\n    this.sorted = this.grouped = false;\r\n  }\r\n\r\n  findDataByPath = (renderData, path) => {\r\n    if (this.isDataType(\"tree\")) {\r\n      const node = path.reduce((result, current) => {\r\n        return result.tableData.childRows[current];\r\n      }, { tableData: { childRows: renderData } });\r\n\r\n      return node;\r\n    }\r\n    else {\r\n      const data = { groups: renderData };\r\n\r\n      const node = path.reduce((result, current) => {\r\n        if (result.groups.length > 0) {\r\n          return result.groups[current];\r\n        }\r\n        else if (result.data) {\r\n          return result.data[current];\r\n        }\r\n        else {\r\n          return undefined;\r\n        }\r\n      }, data);\r\n      return node;\r\n    }\r\n  }\r\n\r\n  findGroupByGroupPath(renderData, path) {\r\n    const data = { groups: renderData };\r\n\r\n    const node = path.reduce((result, current) => {\r\n      if (!result) {\r\n        return undefined;\r\n      }\r\n\r\n      const group = result.groups.find(a => a.value === current);\r\n      return group;\r\n    }, data);\r\n    return node;\r\n  }\r\n\r\n  getFieldValue = (rowData, columnDef) => {\r\n    let value = (typeof rowData[columnDef.field] !== 'undefined' ? rowData[columnDef.field] : this.byString(rowData, columnDef.field));\r\n    if (columnDef.lookup) {\r\n      value = columnDef.lookup[value];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  byString(o, s) {\r\n    if (!s) {\r\n      return;\r\n    }\r\n\r\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n    s = s.replace(/^\\./, '');           // strip a leading dot\r\n    var a = s.split('.');\r\n    for (var i = 0, n = a.length; i < n; ++i) {\r\n      var x = a[i];\r\n      if (o && x in o) {\r\n        o = o[x];\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    return o;\r\n  }\r\n\r\n  isDataType(type) {\r\n    let dataType = \"normal\";\r\n\r\n    if (this.parentFunc) {\r\n      dataType = \"tree\";\r\n    }\r\n    else if (this.columns.find(a => a.tableData.groupOrder > -1)) {\r\n      dataType = \"group\";\r\n    }\r\n\r\n    return type === dataType;\r\n  }\r\n\r\n  sort(a, b, type) {\r\n    if (type === 'numeric') {\r\n      return a - b;\r\n    } else {\r\n      return a < b ? -1 : a > b ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  sortList(list) {\r\n    const columnDef = this.columns.find(_ => _.tableData.id === this.orderBy);\r\n    let result = list;\r\n\r\n    if (columnDef.customSort) {\r\n      if (this.orderDirection === 'desc') {\r\n        result = list.sort((a, b) => columnDef.customSort(b, a, 'row'));\r\n      }\r\n      else {\r\n        result = list.sort((a, b) => columnDef.customSort(a, b, 'row'));\r\n      }\r\n    }\r\n    else {\r\n      result = list.sort(\r\n        this.orderDirection === 'desc'\r\n          ? (a, b) => this.sort(this.getFieldValue(b, columnDef), this.getFieldValue(a, columnDef), columnDef.type)\r\n          : (a, b) => this.sort(this.getFieldValue(a, columnDef), this.getFieldValue(b, columnDef), columnDef.type)\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getRenderState = () => {\r\n    if (this.filtered === false) {\r\n      this.filterData();\r\n    }\r\n\r\n    if (this.searched === false) {\r\n      this.searchData();\r\n    }\r\n\r\n    if (this.grouped === false && this.isDataType(\"group\")) {\r\n      this.groupData();\r\n    }\r\n\r\n    if (this.treefied === false && this.isDataType(\"tree\")) {\r\n      this.treefyData();\r\n    }\r\n\r\n    if (this.sorted === false) {\r\n      this.sortData();\r\n    }\r\n\r\n    if (this.paged === false) {\r\n      this.pageData();\r\n    }\r\n\r\n    return {\r\n      columns: this.columns,\r\n      currentPage: this.currentPage,\r\n      data: this.sortedData,\r\n      lastEditingRow: this.lastEditingRow,\r\n      orderBy: this.orderBy,\r\n      orderDirection: this.orderDirection,\r\n      originalData: this.data,\r\n      pageSize: this.pageSize,\r\n      renderData: this.pagedData,\r\n      searchText: this.searchText,\r\n      selectedCount: this.selectedCount,\r\n      treefiedDataLength: this.treefiedDataLength\r\n    };\r\n  }\r\n\r\n  // =====================================================================================================\r\n  // DATA MANUPULATIONS\r\n  // =====================================================================================================\r\n\r\n  filterData = () => {\r\n    this.searched = this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.filteredData = [...this.data];\r\n\r\n    // if (this.filterSelectionChecked) {\r\n    //   this.filterData = this.filterData.filter(row => {\r\n    //     return row.tableData.checked;\r\n    //   });\r\n    // }\r\n\r\n    if (this.applyFilters) {\r\n      this.columns.filter(columnDef => columnDef.tableData.filterValue).forEach(columnDef => {\r\n        const { lookup, type, tableData, field } = columnDef;\r\n        if (columnDef.customFilterAndSearch) {\r\n          this.filteredData = this.filteredData.filter(row => !!columnDef.customFilterAndSearch(tableData.filterValue, row, columnDef));\r\n        }\r\n        else {\r\n          if (lookup) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return !tableData.filterValue ||\r\n                tableData.filterValue.length === 0 ||\r\n                tableData.filterValue.indexOf(row[field] && row[field].toString()) > -1;\r\n            });\r\n          } else if (type === 'numeric') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return (row[field] + \"\") === tableData.filterValue;\r\n            });\r\n          } else if (type === 'boolean' && tableData.filterValue) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return (row[field] && tableData.filterValue === 'checked') ||\r\n                (!row[field] && tableData.filterValue === 'unchecked');\r\n            });\r\n          } else if (['date', 'datetime'].includes(type)) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const currentDate = row[field] ? new Date(row[field]) : null;\r\n\r\n              if (currentDate && currentDate.toString() !== 'Invalid Date') {\r\n                const selectedDate = tableData.filterValue;\r\n                let currentDateToCompare = '';\r\n                let selectedDateToCompare = '';\r\n\r\n                if (type === 'date') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy');\r\n                } else if (type === 'datetime') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy - HH:mm');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy - HH:mm');\r\n                }\r\n\r\n                return currentDateToCompare === selectedDateToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else if (type === 'time') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const currentHour = row[field] || null;\r\n\r\n              if (currentHour) {\r\n                const selectedHour = tableData.filterValue;\r\n                const currentHourToCompare = formatDate(selectedHour, 'HH:mm');\r\n\r\n                return currentHour === currentHourToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return row[field] && row[field].toString().toUpperCase().includes(tableData.filterValue.toUpperCase());\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.filtered = true;\r\n  }\r\n\r\n  searchData = () => {\r\n    this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.searchedData = [...this.filteredData];\r\n\r\n    if (this.searchText && this.applySearch) {\r\n      this.searchedData = this.searchedData.filter(row => {\r\n        return this.columns\r\n          .filter(columnDef => { return columnDef.searchable === undefined ? !columnDef.hidden : columnDef.searchable })\r\n          .some(columnDef => {\r\n            if (columnDef.customFilterAndSearch) {\r\n              return !!columnDef.customFilterAndSearch(this.searchText, row, columnDef);\r\n            }\r\n            else if (columnDef.field) {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              if (value) {\r\n                return value.toString().toUpperCase().includes(this.searchText.toUpperCase());\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    this.searched = true;\r\n  }\r\n\r\n  groupData() {\r\n    this.sorted = this.paged = false;\r\n\r\n    const tmpData = [...this.searchedData];\r\n\r\n    const groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    const subData = tmpData.reduce((result, current) => {\r\n\r\n      let object = result;\r\n      object = groups.reduce((o, colDef) => {\r\n        const value = current[colDef.field] || this.byString(current, colDef.field);\r\n        let group = o.groups.find(g => g.value === value);\r\n        if (!group) {\r\n          const path = [...(o.path || []), value];\r\n          let oldGroup = this.findGroupByGroupPath(this.groupedData, path) || {};          \r\n\r\n          group = { value, groups: [], data: [], isExpanded: oldGroup.isExpanded, path: path };\r\n          o.groups.push(group);\r\n        }\r\n        return group;\r\n      }, object);\r\n\r\n      object.data.push(current);\r\n\r\n      return result;\r\n    }, { groups: [] });\r\n\r\n    this.groupedData = subData.groups;\r\n    this.grouped = true;\r\n  }\r\n\r\n  treefyData() {\r\n    this.sorted = this.paged = false;\r\n    this.data.forEach(a => a.tableData.childRows = null);\r\n    this.treefiedData = [];\r\n    this.treefiedDataLength = 0;\r\n\r\n    const addRow = (rowData) => {\r\n      let parent = this.parentFunc(rowData, this.data);      \r\n\r\n      if (parent) {\r\n        parent.tableData.childRows = parent.tableData.childRows || [];\r\n        // parent.tableData.isTreeExpanded = false;\r\n        if(!parent.tableData.childRows.includes(rowData)) {\r\n          parent.tableData.childRows.push(rowData);\r\n          this.treefiedDataLength++;\r\n        }\r\n\r\n        addRow(parent);\r\n      }\r\n      else {\r\n        if(!this.treefiedData.includes(rowData)) {\r\n          this.treefiedData.push(rowData);\r\n          this.treefiedDataLength++;\r\n        }\r\n      }\r\n    };\r\n\r\n    this.searchedData.forEach(rowData => {\r\n      addRow(rowData);\r\n    });\r\n\r\n    this.treefied = true;\r\n  }\r\n\r\n  sortData() {\r\n    this.paged = false;\r\n\r\n    if (this.isDataType(\"group\")) {\r\n      this.sortedData = [...this.groupedData];\r\n\r\n      const groups = this.columns\r\n        .filter(col => col.tableData.groupOrder > -1)\r\n        .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n      const sortGroups = (list, columnDef) => {\r\n        if (columnDef.customSort) {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => columnDef.customSort(b.value, a.value, 'group')\r\n              : (a, b) => columnDef.customSort(a.value, b.value, 'group')\r\n          );\r\n        }\r\n        else {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => this.sort(b.value, a.value, columnDef.type)\r\n              : (a, b) => this.sort(a.value, b.value, columnDef.type)\r\n          );\r\n        }\r\n      };\r\n\r\n      this.sortedData = sortGroups(this.sortedData, groups[0]);\r\n\r\n      const sortGroupData = (list, level) => {\r\n        list.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            const column = groups[level];\r\n            element.groups = sortGroups(element.groups, column);\r\n            sortGroupData(element.groups, level + 1);\r\n          }\r\n          else {\r\n            if (this.orderBy >= 0 && this.orderDirection) {\r\n              element.data = this.sortList(element.data);\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      sortGroupData(this.sortedData, 1);\r\n    }\r\n    else if (this.isDataType(\"tree\")) {\r\n      this.sortedData = [...this.treefiedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n\r\n        const sortTree = (list) => {\r\n          list.forEach(item => {\r\n            if (item.tableData.childRows) {\r\n              item.tableData.childRows = this.sortList(item.tableData.childRows);\r\n              sortTree(item.tableData.childRows);\r\n            }\r\n          });\r\n        };\r\n\r\n        sortTree(this.sortedData);\r\n      }\r\n    }\r\n    else if (this.isDataType(\"normal\")) {\r\n      this.sortedData = [...this.searchedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n      }\r\n    }\r\n\r\n    this.sorted = true;\r\n  }\r\n\r\n  pageData() {\r\n    this.pagedData = [...this.sortedData];\r\n\r\n    if (this.paging) {\r\n      const startIndex = this.currentPage * this.pageSize;\r\n      const endIndex = startIndex + this.pageSize;\r\n\r\n      this.pagedData = this.pagedData.slice(startIndex, endIndex);\r\n    }\r\n\r\n    this.paged = true;\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\nimport { Icon, Paper, Table, TableFooter, TablePagination, TableRow, CircularProgress, LinearProgress, withStyles } from '@material-ui/core';\r\nimport DoubleScrollbar from \"react-double-scrollbar\";\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport MTableActions from './m-table-actions';\r\nimport MTableBody from './m-table-body';\r\nimport MTableBodyRow from './m-table-body-row';\r\nimport MTableGroupbar from './m-table-groupbar';\r\nimport MTableGroupRow from './m-table-group-row';\r\nimport MTableCell from './m-table-cell';\r\nimport MTableEditRow from './m-table-edit-row';\r\nimport MTableFilterRow from './m-table-filter-row';\r\nimport MTableHeader from './m-table-header';\r\nimport MTablePagination from './m-table-pagination';\r\nimport MTableSteppedPagination from './m-table-stepped-pagination';\r\nimport MTableToolbar from './m-table-toolbar';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DataManager from './utils/data-manager';\r\nimport { debounce } from 'debounce';\r\n\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MaterialTable extends React.Component {\r\n  dataManager = new DataManager();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const calculatedProps = this.getProps(props);\r\n    this.setDataManagerFields(calculatedProps, true);\r\n\r\n    this.state = {\r\n      data: [],\r\n      ...this.dataManager.getRenderState(),\r\n      query: {\r\n        filters: [],\r\n        orderBy: null,\r\n        orderDirection: 'asc',\r\n        page: 0,\r\n        pageSize: calculatedProps.options.pageSize,\r\n        search: '',\r\n\r\n        totalCount: 0\r\n      },\r\n      showAddRow: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(this.dataManager.getRenderState(), () => {\r\n      if (this.isRemoteData()) {\r\n        this.onQueryChange(this.state.query);\r\n      }\r\n    });\r\n  }\r\n\r\n  setDataManagerFields(props, isInit) {\r\n    let defaultSortColumnIndex = -1;\r\n    let defaultSortDirection = '';\r\n    if (props) {\r\n      defaultSortColumnIndex = props.columns.findIndex(a => a.defaultSort);\r\n      defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : '';\r\n    }\r\n\r\n    this.dataManager.setColumns(props.columns);\r\n\r\n    if (this.isRemoteData()) {\r\n      this.dataManager.changeApplySearch(false);\r\n      this.dataManager.changeApplyFilters(false);\r\n    }\r\n    else {\r\n      this.dataManager.changeApplySearch(true);\r\n      this.dataManager.changeApplyFilters(true);\r\n      this.dataManager.setData(props.data);\r\n    }\r\n\r\n    isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);\r\n    isInit && this.dataManager.changePageSize(props.options.pageSize);\r\n    isInit && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);\r\n    isInit && this.dataManager.changePaging(props.options.paging);\r\n    isInit && this.dataManager.changeParentFunc(props.parentChildData);\r\n    this.dataManager.changeDetailPanelType(props.options.detailPanelType);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const props = this.getProps(nextProps);\r\n    this.setDataManagerFields(props);\r\n    this.setState(this.dataManager.getRenderState());\r\n  }\r\n\r\n  getProps(props) {\r\n    const calculatedProps = { ...(props || this.props) };\r\n\r\n    const localization = calculatedProps.localization.body;\r\n\r\n    calculatedProps.actions = [...(calculatedProps.actions || [])];\r\n    if (calculatedProps.editable) {\r\n      if (calculatedProps.editable.onRowAdd) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Add,\r\n          tooltip: localization.addTooltip,\r\n          isFreeAction: true,\r\n          onClick: () => {\r\n            this.dataManager.changeRowEditing();\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: !this.state.showAddRow\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowUpdate) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Edit,\r\n          tooltip: localization.editTooltip,\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"update\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowDelete) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Delete,\r\n          tooltip: localization.deleteTooltip,\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"delete\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    calculatedProps.components = { ...MaterialTable.defaultProps.components, ...calculatedProps.components };\r\n    calculatedProps.icons = { ...MaterialTable.defaultProps.icons, ...calculatedProps.icons };\r\n    calculatedProps.options = { ...MaterialTable.defaultProps.options, ...calculatedProps.options };\r\n\r\n    return calculatedProps;\r\n  }\r\n\r\n  onSelectionChange = () => {\r\n    if (this.props.onSelectionChange) {\r\n      const selectedRows = this.state.data.filter(row => row.tableData.checked);\r\n      this.props.onSelectionChange(selectedRows);\r\n    }\r\n  }\r\n\r\n  onChangePage = (...args) => {\r\n    this.props.onChangePage && this.props.onChangePage(...args);\r\n  }\r\n\r\n  onChangeRowsPerPage = (...args) => {\r\n    this.props.onChangeRowsPerPage && this.props.onChangeRowsPerPage(...args);\r\n  }\r\n\r\n  onOrderChange = (...args) => {\r\n    this.props.onOrderChange && this.props.onOrderChange(...args);\r\n  }\r\n\r\n  isRemoteData = () => !Array.isArray(this.props.data)\r\n\r\n  onQueryChange = (query) => {\r\n    this.setState({ isLoading: true }, () => {\r\n      this.props.data(query).then((result) => {\r\n        query.totalCount = result.totalCount;\r\n        query.page = result.page;\r\n        this.dataManager.setData(result.data);\r\n        this.setState({\r\n          isLoading: false,\r\n          ...this.dataManager.getRenderState(),\r\n          query\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearchChange = debounce(() => {\r\n    this.dataManager.changeSearchText(this.state.searchText);\r\n\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.page = 0;\r\n      query.search = this.state.searchText;\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  onFilterChange = debounce(() => {\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.filters = this.state.columns\r\n        .filter(a => a.tableData.filterValue)\r\n        .map(a => ({\r\n          column: a,\r\n          operator: \"=\",\r\n          value: a.tableData.filterValue\r\n        }));\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  renderFooter() {\r\n    const props = this.getProps();\r\n    if (props.options.paging) {\r\n      const localization = { ...MaterialTable.defaultProps.localization.pagination, ...this.props.localization.pagination };\r\n      return (\r\n        <Table>\r\n          <TableFooter style={{ display: 'grid' }}>\r\n            <TableRow>\r\n              <props.components.Pagination\r\n                classes={{\r\n                  toolbar: props.classes.paginationToolbar\r\n                }}\r\n                style={{ float: props.theme.direction === \"rtl\" ? \"left\" : \"right\", overflowX: 'auto' }}\r\n                colSpan={3}\r\n                count={this.isRemoteData() ? this.state.query.totalCount : this.state.data.length}\r\n                icons={props.icons}\r\n                rowsPerPage={this.state.pageSize}\r\n                rowsPerPageOptions={props.options.pageSizeOptions}\r\n                page={this.isRemoteData() ? this.state.query.page : this.state.currentPage}\r\n                onChangePage={(event, page) => {\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.page = page;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(page);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangePage(page);\r\n                    });\r\n                  }\r\n                }}\r\n                onChangeRowsPerPage={(event) => {\r\n                  this.dataManager.changePageSize(event.target.value);\r\n\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.pageSize = event.target.value;\r\n                    query.page = 0;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(0);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangeRowsPerPage(event.target.value);\r\n                    });\r\n                  }\r\n                }}\r\n                ActionsComponent={(subProps) => props.options.paginationType === 'normal' ?\r\n                  <MTablePagination {...subProps} icons={props.icons} localization={localization} /> :\r\n                  <MTableSteppedPagination {...subProps} icons={props.icons} localization={localization} />}\r\n                labelDisplayedRows={(row) => localization.labelDisplayedRows.replace('{from}', row.from).replace('{to}', row.to).replace('{count}', row.count)}\r\n                labelRowsPerPage={localization.labelRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.getProps();    \r\n\r\n    return (\r\n      <DragDropContext onDragEnd={result => {\r\n        this.dataManager.changeByDrag(result);\r\n        this.setState(this.dataManager.getRenderState());\r\n      }}>\r\n        <props.components.Container style={{ position: 'relative' }}>\r\n          {props.options.toolbar &&\r\n            <props.components.Toolbar\r\n              actions={props.actions}\r\n              components={props.components}\r\n              selectedRows={this.state.selectedCount > 0 ? this.state.originalData.filter(a => { return a.tableData.checked }) : []}\r\n              columns={this.state.columns}\r\n              columnsButton={props.options.columnsButton}\r\n              icons={props.icons}\r\n              exportButton={props.options.exportButton}\r\n              exportDelimiter={props.options.exportDelimiter}\r\n              exportFileName={props.options.exportFileName}\r\n              renderData={this.state.renderData}\r\n              search={props.options.search}\r\n              showTitle={props.options.showTitle}\r\n              toolbarButtonAlignment={props.options.toolbarButtonAlignment}\r\n              searchText={this.state.searchText}\r\n              searchFieldStyle={props.options.searchFieldStyle}\r\n              title={props.title}\r\n              onSearchChanged={searchText => this.setState({ searchText }, this.onSearchChange)}\r\n              onColumnsChanged={(columnId, hidden) => {\r\n                this.dataManager.changeColumnHidden(columnId, hidden);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              localization={{ ...MaterialTable.defaultProps.localization.toolbar, ...this.props.localization.toolbar }}\r\n            />\r\n          }\r\n          {props.options.grouping &&\r\n            <props.components.Groupbar\r\n              icons={props.icons}\r\n              localization={{ ...MaterialTable.defaultProps.localization.grouping, ...props.localization.grouping }}\r\n              groupColumns={this.state.columns\r\n                .filter(col => col.tableData.groupOrder > -1)\r\n                .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder)\r\n              }\r\n              onSortChanged={(groupedColumn) => {\r\n                this.dataManager.changeGroupOrder(groupedColumn.tableData.id);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              onGroupRemoved={(groupedColumn, index) => {\r\n                const result = {\r\n                  combine: null,\r\n                  destination: { droppableId: \"headers\", index: 0 },\r\n                  draggableId: groupedColumn.tableData.id,\r\n                  mode: \"FLUID\",\r\n                  reason: \"DROP\",\r\n                  source: { index, droppableId: \"groups\" },\r\n                  type: \"DEFAULT\"\r\n                };\r\n                this.dataManager.changeByDrag(result);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n            />\r\n          }\r\n          <ScrollBar double={props.options.doubleHorizontalScroll}>\r\n            <Droppable droppableId=\"headers\" direction=\"horizontal\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                //style={this.getListStyle(snapshot.isDraggingOver)}\r\n                >\r\n                  <div style={{ maxHeight: props.options.maxBodyHeight, overflowY: 'auto' }}>\r\n                    <Table>\r\n                      {props.options.header &&\r\n                        <props.components.Header\r\n                          localization={{ ...MaterialTable.defaultProps.localization.header, ...this.props.localization.header }}\r\n                          columns={this.state.columns}\r\n                          hasSelection={props.options.selection}\r\n                          headerStyle={props.options.headerStyle}\r\n                          selectedCount={this.state.selectedCount}\r\n                          dataCount={props.parentChildData ? this.state.treefiedDataLength : this.state.data.length}\r\n                          hasDetailPanel={!!props.detailPanel}\r\n                          showActionsColumn={props.actions && props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0}\r\n                          orderBy={this.state.orderBy}\r\n                          orderDirection={this.state.orderDirection}\r\n                          onAllSelected={(checked) => {\r\n                            this.dataManager.changeAllSelected(checked);\r\n                            this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                          }}\r\n                          onOrderChange={(orderBy, orderDirection) => {\r\n                            this.dataManager.changeOrder(orderBy, orderDirection);\r\n\r\n                            if (this.isRemoteData()) {\r\n                              const query = { ...this.state.query };\r\n                              query.page = 0;\r\n                              query.orderBy = this.state.columns.find(a => a.tableData.id === orderBy);\r\n                              query.orderDirection = orderDirection;\r\n                              this.onQueryChange(query);\r\n                            }\r\n                            else {\r\n                              this.setState(this.dataManager.getRenderState(), () => {\r\n                                this.onOrderChange(orderBy, orderDirection);\r\n                              });\r\n                            }\r\n                          }}\r\n                          actionsHeaderIndex={props.options.actionsColumnIndex}\r\n                          sorting={props.options.sorting}\r\n                          grouping={props.options.grouping}\r\n                          isTreeData={this.props.parentChildData !== undefined}\r\n                        />\r\n                      }\r\n\r\n\r\n                      <props.components.Body\r\n                        actions={props.actions}\r\n                        components={props.components}\r\n                        icons={props.icons}\r\n                        renderData={this.state.renderData}\r\n                        currentPage={this.state.currentPage}\r\n                        pageSize={this.state.pageSize}\r\n                        columns={this.state.columns}\r\n                        detailPanel={props.detailPanel}\r\n                        options={props.options}\r\n                        getFieldValue={this.dataManager.getFieldValue}\r\n                        isTreeData={this.props.parentChildData !== undefined}\r\n                        onFilterChanged={(columnId, value) => {\r\n                          this.dataManager.changeFilterValue(columnId, value);\r\n                          this.setState({}, () => this.onFilterChange());\r\n\r\n                        }}\r\n                        onFilterSelectionChanged={(event) => {\r\n                          this.dataManager.changeFilterSelectionChecked(event.target.checked);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onRowSelected={(event, path) => {\r\n                          this.dataManager.changeRowSelected(event.target.checked, path);\r\n                          this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                        }}\r\n                        onToggleDetailPanel={(path, render) => {\r\n                          this.dataManager.changeDetailPanelVisibility(path, render);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onGroupExpandChanged={(path) => {\r\n                          this.dataManager.changeGroupExpand(path);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onTreeExpandChanged={(path) => {\r\n                          this.dataManager.changeTreeExpand(path);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onEditingCanceled={(mode, rowData) => {\r\n                          if (mode === \"add\") {\r\n                            this.setState({ showAddRow: false });\r\n                          }\r\n                          else if (mode === \"update\" || mode === \"delete\") {\r\n                            this.dataManager.changeRowEditing(rowData);\r\n                            this.setState(this.dataManager.getRenderState());\r\n                          }\r\n                        }}\r\n                        onEditingApproved={(mode, newData, oldData) => {\r\n                          if (mode === \"add\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowAdd(newData)\r\n                                .then(result => {\r\n                                  this.setState({ isLoading: false, showAddRow: false }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n                          }\r\n                          else if (mode === \"update\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowUpdate(newData, oldData)\r\n                                .then(result => {\r\n                                  this.dataManager.changeRowEditing(oldData);\r\n                                  this.setState({\r\n                                    isLoading: false,\r\n                                    ...this.dataManager.getRenderState()\r\n                                  }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n\r\n                          }\r\n                          else if (mode === \"delete\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowDelete(oldData)\r\n                                .then(result => {\r\n                                  this.dataManager.changeRowEditing(oldData);\r\n                                  this.setState({\r\n                                    isLoading: false,\r\n                                    ...this.dataManager.getRenderState()\r\n                                  }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n                          }\r\n                        }}\r\n                        localization={{ ...MaterialTable.defaultProps.localization.body, ...this.props.localization.body }}\r\n                        onRowClick={this.props.onRowClick}\r\n                        showAddRow={this.state.showAddRow}\r\n                        hasAnyEditingRow={!!(this.state.lastEditingRow || this.state.showAddRow)}\r\n                        hasDetailPanel={!!props.detailPanel}\r\n                      />\r\n                    </Table>\r\n                  </div>\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n          </ScrollBar>\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === \"linear\" &&\r\n            <div style={{ position: 'relative', width: '100%' }}>\r\n              <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n                <LinearProgress />\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.renderFooter()}\r\n\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === 'overlay' &&\r\n            <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n              <div style={{ display: 'table', width: '100%', height: '100%', backgroundColor: '#FFFFFFAA' }}>\r\n                <div style={{ display: 'table-cell', width: '100%', height: '100%', verticalAlign: 'middle', textAlign: 'center' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </props.components.Container>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst ScrollBar = ({ double, children }) => {\r\n  if (double) {\r\n    return (\r\n      <DoubleScrollbar>\r\n        {children}\r\n      </DoubleScrollbar>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div style={{ overflowX: 'auto' }}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nMaterialTable.defaultProps = {\r\n  actions: [],\r\n  classes: {},\r\n  columns: [],\r\n  components: {\r\n    Actions: MTableActions,\r\n    Body: MTableBody,\r\n    Cell: MTableCell,\r\n    Container: Paper,\r\n    EditRow: MTableEditRow,\r\n    FilterRow: MTableFilterRow,\r\n    Groupbar: MTableGroupbar,\r\n    GroupRow: MTableGroupRow,\r\n    Header: MTableHeader,\r\n    Pagination: TablePagination,\r\n    Row: MTableBodyRow,\r\n    Toolbar: MTableToolbar,\r\n  },\r\n  data: [],\r\n  icons: {\r\n    /* eslint-disable react/display-name */\r\n    Add: (props) => <Icon {...props}>add_box</Icon>,\r\n    Check: (props) => <Icon {...props}>check</Icon>,\r\n    Clear: (props) => <Icon {...props}>clear</Icon>,\r\n    Delete: (props) => <Icon {...props}>delete_outline</Icon>,\r\n    DetailPanel: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    Edit: (props) => <Icon {...props}>edit</Icon>,\r\n    Export: (props) => <Icon {...props}>save_alt</Icon>,\r\n    Filter: (props) => <Icon {...props}>filter_list</Icon>,\r\n    FirstPage: (props) => <Icon {...props}>first_page</Icon>,\r\n    LastPage: (props) => <Icon {...props}>last_page</Icon>,\r\n    NextPage: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    PreviousPage: (props) => <Icon {...props}>chevron_left</Icon>,\r\n    ResetSearch: (props) => <Icon {...props}>clear</Icon>,\r\n    Search: (props) => <Icon {...props}>search</Icon>,\r\n    SortArrow: (props) => <Icon {...props}>arrow_upward</Icon>,\r\n    ThirdStateCheck: (props) => <Icon {...props}>remove</Icon>,\r\n    ViewColumn: (props) => <Icon {...props}>view_column</Icon>\r\n    /* eslint-enable react/display-name */\r\n  },\r\n  isLoading: false,\r\n  title: 'Table Title',\r\n  options: {\r\n    actionsColumnIndex: 0,\r\n    columnsButton: false,\r\n    detailPanelType: 'multiple',\r\n    debounceInterval: 200,\r\n    doubleHorizontalScroll: false,\r\n    emptyRowsWhenPaging: true,\r\n    exportButton: false,\r\n    exportDelimiter: ',',\r\n    filtering: false,\r\n    header: true,\r\n    loadingType: 'overlay',\r\n    paging: true,\r\n    pageSize: 5,\r\n    pageSizeOptions: [5, 10, 20],\r\n    paginationType: 'normal',\r\n    showEmptyDataSourceMessage: true,\r\n    search: true,\r\n    showTitle: true,\r\n    toolbarButtonAlignment: 'right',\r\n    searchFieldStyle: {},\r\n    selection: false,\r\n    sorting: true,\r\n    toolbar: true\r\n  },\r\n  localization: {\r\n    grouping: {\r\n      groupedBy: 'Grouped By:',\r\n      placeholder: 'Drag headers here to group by',\r\n    },\r\n    pagination: {\r\n      labelDisplayedRows: '{from}-{to} of {count}',\r\n      labelRowsPerPage: 'Rows per page:'\r\n    },\r\n    toolbar: {},\r\n    header: {},\r\n    body: {\r\n      filterRow: {},\r\n      editRow: {\r\n        saveTooltip: 'Save',\r\n        cancelTooltip: 'Cancel',\r\n        deleteText: 'Are you sure delete this row?',\r\n      },\r\n      addTooltip: 'Add',\r\n      deleteTooltip: 'Delete',\r\n      editTooltip: 'Edit'\r\n    }\r\n  }\r\n};\r\n\r\nMaterialTable.propTypes = {\r\n  actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]).isRequired,\r\n    isFreeAction: PropTypes.bool,\r\n    tooltip: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n    iconProps: PropTypes.object\r\n  })])),\r\n  columns: PropTypes.arrayOf(PropTypes.shape({\r\n    cellStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    currencySetting: PropTypes.shape({\r\n      locale: PropTypes.string,\r\n      currencyCode: PropTypes.string,\r\n      minimumFractionDigits: PropTypes.number,\r\n      maximumFractionDigits: PropTypes.number\r\n    }),\r\n    customFilterAndSearch: PropTypes.func,\r\n    customSort: PropTypes.func,\r\n    defaultFilter: PropTypes.any,\r\n    defaultSort: PropTypes.oneOf(['asc', 'desc']),\r\n    grouping: PropTypes.bool,\r\n    emptyValue: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.func]),\r\n    export: PropTypes.bool,\r\n    field: PropTypes.string,\r\n    filtering: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    hidden: PropTypes.bool,\r\n    lookup: PropTypes.object,\r\n    removable: PropTypes.bool,\r\n    render: PropTypes.func,\r\n    searchable: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    type: PropTypes.oneOf(['string', 'boolean', 'numeric', 'date', 'datetime', 'time', 'currency'])\r\n  })).isRequired,\r\n  components: PropTypes.shape({\r\n    Actions: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Body: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Cell: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Container: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    EditRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FilterRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Groupbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    GroupRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Header: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Row: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.func]).isRequired,\r\n  editable: PropTypes.shape({\r\n    onRowAdd: PropTypes.func,\r\n    onRowUpdate: PropTypes.func,\r\n    onRowDelete: PropTypes.func\r\n  }),\r\n  detailPanel: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({\r\n        disabled: PropTypes.bool,\r\n        icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        openIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        tooltip: PropTypes.string,\r\n        render: PropTypes.func.isRequired\r\n      })\r\n    ]))\r\n  ]),\r\n  icons: PropTypes.shape({\r\n    Add: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Check: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Clear: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Delete: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    DetailPanel: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Edit: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Export: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Filter: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FirstPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    LastPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    NextPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    PreviousPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ResetSearch: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Search: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    SortArrow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ThirdStateCheck: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ViewColumn: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  options: PropTypes.shape({\r\n    actionsColumnIndex: PropTypes.number,\r\n    columnsButton: PropTypes.bool,\r\n    debounceInterval: PropTypes.number,\r\n    detailPanelType: PropTypes.oneOf(['single', 'multiple']),\r\n    doubleHorizontalScroll: PropTypes.bool,\r\n    emptyRowsWhenPaging: PropTypes.bool,\r\n    exportButton: PropTypes.bool,\r\n    exportDelimiter: PropTypes.string,\r\n    exportFileName: PropTypes.string,\r\n    filtering: PropTypes.bool,\r\n    header: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    initialPage: PropTypes.number,\r\n    maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    loadingType: PropTypes.oneOf(['overlay', 'linear']),\r\n    paging: PropTypes.bool,\r\n    pageSize: PropTypes.number,\r\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\r\n    paginationType: PropTypes.oneOf(['normal', 'stepped']),\r\n    rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    showEmptyDataSourceMessage: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    toolbarButtonAlignment: PropTypes.string,\r\n    searchFieldStyle: PropTypes.object,\r\n    selection: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    toolbar: PropTypes.bool\r\n  }),\r\n  localization: PropTypes.shape({\r\n    grouping: PropTypes.shape({\r\n      groupedBy: PropTypes.string,\r\n      placeholder: PropTypes.string\r\n    }),\r\n    pagination: PropTypes.object,\r\n    toolbar: PropTypes.object,\r\n    header: PropTypes.object,\r\n    body: PropTypes.object\r\n  }),\r\n  onSelectionChange: PropTypes.func,\r\n  onChangeRowsPerPage: PropTypes.func,\r\n  onChangePage: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  onRowClick: PropTypes.func,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  paginationToolbar: {\r\n    padding: 0\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(MaterialTable);\r\n\r\nexport {\r\n  MTableActions, MTableBody, MTableCell,\r\n  MTableFilterRow, MTableHeader, MTableSteppedPagination, MTablePagination,\r\n  MTableBodyRow, MTableToolbar, MTableGroupRow\r\n};\r\n"],"sourceRoot":""}