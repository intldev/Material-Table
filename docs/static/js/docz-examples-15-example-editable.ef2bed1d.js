(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./docz/examples/15-example-editable.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return v});var a=n("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),i=n.n(a),o=n("./node_modules/@babel/runtime/helpers/classCallCheck.js"),r=n.n(o),s=n("./node_modules/@babel/runtime/helpers/createClass.js"),l=n.n(s),d=n("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"),u=n.n(d),m=n("./node_modules/@babel/runtime/helpers/getPrototypeOf.js"),c=n.n(m),p=n("./node_modules/@babel/runtime/helpers/inherits.js"),h=n.n(p),b=n("./node_modules/react/index.js"),f=n.n(b),w=n("./node_modules/@mdx-js/tag/dist/index.js"),y=n("./docz/utils/Playground.jsx"),x=n("./src/material-table.js"),v=function(e){function t(e){var n;return r()(this,t),(n=u()(this,c()(t).call(this,e))).layout=null,n}return h()(t,e),l()(t,[{key:"render",value:function(){var e=this.props,t=e.components,n=i()(e,["components"]);return f.a.createElement(w.MDXTag,{name:"wrapper",components:t},f.a.createElement(w.MDXTag,{name:"h1",components:t,props:{id:"editable-examples"}},"Editable Examples"),f.a.createElement(w.MDXTag,{name:"h2",components:t,props:{id:"editable-example"}},"Editable Example"),f.a.createElement(y.a,{__codesandbox:"undefined",__position:0,__code:"<MaterialTable\n  title=\"Editable Example\"\n  columns={[\n    { title: 'Name', field: 'name' },\n    { title: 'Surname', field: 'surname' },\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n    {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: { 34: '\u0130stanbul', 63: '\u015eanl\u0131urfa' },\n    },\n  ]}\n  data={[\n    { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n    { name: 'Zerya Bet\xfcl', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n  ]}\n  editable={{\n    onRowAdd: newData =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n        data.push(newData);\n        this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n    onRowUpdate: (newData, oldData) =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n    const index = data.indexOf(oldData);\n    data[index] = newData;                \n    this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n    onRowDelete: oldData =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* let data = this.state.data;\n    const index = data.indexOf(oldData);\n    data.splice(index, 1);\n    this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n  }}\n/>",__scope:{props:this?this.props:n,Playground:y.a,MaterialTable:x.b}},f.a.createElement(x.b,{title:"Editable Example",columns:[{title:"Name",field:"name"},{title:"Surname",field:"surname"},{title:"Birth Year",field:"birthYear",type:"numeric"},{title:"Birth Place",field:"birthCity",lookup:{34:"\u0130stanbul",63:"\u015eanl\u0131urfa"}}],data:[{name:"Mehmet",surname:"Baran",birthYear:1987,birthCity:63},{name:"Zerya Bet\xfcl",surname:"Baran",birthYear:2017,birthCity:34}],editable:{onRowAdd:function(e){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})},onRowUpdate:function(e,t){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})},onRowDelete:function(e){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})}}})),f.a.createElement(w.MDXTag,{name:"h2",components:t,props:{id:"readonly-columns-example"}},"Readonly Columns Example"),f.a.createElement(y.a,{__codesandbox:"undefined",__position:1,__code:"<MaterialTable\n  title=\"Readonly Columns Example\"\n  columns={[\n    { title: 'Name', field: 'name' },\n    { title: 'Surname', field: 'surname', readonly: true },\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n    {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: { 34: '\u0130stanbul', 63: '\u015eanl\u0131urfa' },\n    },\n  ]}\n  data={[\n    { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n    { name: 'Zerya Bet\xfcl', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n  ]}\n  editable={{\n    onRowAdd: newData =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n        data.push(newData);\n        this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n    onRowUpdate: (newData, oldData) =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n    const index = data.indexOf(oldData);\n    data[index] = newData;                \n    this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n    onRowDelete: oldData =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* let data = this.state.data;\n    const index = data.indexOf(oldData);\n    data.splice(index, 1);\n    this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n  }}\n/>",__scope:{props:this?this.props:n,Playground:y.a,MaterialTable:x.b}},f.a.createElement(x.b,{title:"Readonly Columns Example",columns:[{title:"Name",field:"name"},{title:"Surname",field:"surname",readonly:!0},{title:"Birth Year",field:"birthYear",type:"numeric"},{title:"Birth Place",field:"birthCity",lookup:{34:"\u0130stanbul",63:"\u015eanl\u0131urfa"}}],data:[{name:"Mehmet",surname:"Baran",birthYear:1987,birthCity:63},{name:"Zerya Bet\xfcl",surname:"Baran",birthYear:2017,birthCity:34}],editable:{onRowAdd:function(e){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})},onRowUpdate:function(e,t){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})},onRowDelete:function(e){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})}}})),f.a.createElement(w.MDXTag,{name:"h2",components:t,props:{id:"custom-edit-component"}},"Custom Edit Component"),f.a.createElement(y.a,{__codesandbox:"undefined",__position:2,__code:"<MaterialTable\n  title=\"Custom Edit Component\"\n  columns={[\n    { title: 'Name', field: 'name' },\n    {\n      title: 'Surname',\n      field: 'surname',\n      editComponent: props => (\n        <input\n          type=\"text\"\n          value={props.value}\n          onChange={e => props.onChange(e.target.value)}\n        />\n      ),\n    },\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n    {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: { 34: '\u0130stanbul', 63: '\u015eanl\u0131urfa' },\n    },\n  ]}\n  data={[\n    { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n    { name: 'Zerya Bet\xfcl', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n  ]}\n  editable={{\n    onRowAdd: newData =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n        data.push(newData);\n        this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n    onRowUpdate: (newData, oldData) =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n    const index = data.indexOf(oldData);\n    data[index] = newData;                \n    this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n    onRowDelete: oldData =>\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* let data = this.state.data;\n    const index = data.indexOf(oldData);\n    data.splice(index, 1);\n    this.setState({ data }, () => resolve()); */\n          }\n          resolve()\n        }, 1000)\n      }),\n  }}\n/>",__scope:{props:this?this.props:n,Playground:y.a,MaterialTable:x.b}},f.a.createElement(x.b,{title:"Custom Edit Component",columns:[{title:"Name",field:"name"},{title:"Surname",field:"surname",editComponent:function(e){return f.a.createElement("input",{type:"text",value:e.value,onChange:function(t){return e.onChange(t.target.value)}})}},{title:"Birth Year",field:"birthYear",type:"numeric"},{title:"Birth Place",field:"birthCity",lookup:{34:"\u0130stanbul",63:"\u015eanl\u0131urfa"}}],data:[{name:"Mehmet",surname:"Baran",birthYear:1987,birthCity:63},{name:"Zerya Bet\xfcl",surname:"Baran",birthYear:2017,birthCity:34}],editable:{onRowAdd:function(e){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})},onRowUpdate:function(e,t){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})},onRowDelete:function(e){return new Promise(function(e,t){setTimeout(function(){e()},1e3)})}}})))}}]),t}(f.a.Component);v.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./docz/utils/Playground.jsx":function(e,t,n){"use strict";var a=n("./node_modules/docz/dist/index.m.js"),i=n("./node_modules/codemirror/lib/codemirror.js");n.n(i).a.defaults.viewportMargin=1/0,t.a=a.e}}]);
//# sourceMappingURL=docz-examples-15-example-editable.a4f64ac164a695dd0dea.js.map