{"version":3,"sources":["webpack:///./src/m-table-action.js","webpack:///./src/m-table-actions.js","webpack:///./src/m-table-body.js","webpack:///./src/m-table-body-row.js","webpack:///./src/m-table-groupbar.js","webpack:///./src/m-table-group-row.js","webpack:///./src/m-table-cell.js","webpack:///./src/utils/index.js","webpack:///./src/m-table-edit-row.js","webpack:///./src/m-table-edit-field.js","webpack:///./src/m-table-filter-row.js","webpack:///./src/m-table-header.js","webpack:///./src/m-table-pagination.js","webpack:///./src/m-table-stepped-pagination.js","webpack:///./src/m-table-toolbar.js","webpack:///./src/utils/data-manager.js","webpack:///./src/material-table.js"],"names":["MTableAction","_this","this","action","props","data","button","react","index_es","color","disabled","onClick","event","stopPropagation","handleOnClick","icon","Object","assign","iconProps","fontSize","tooltip","title","React","defaultProps","MTableActions","actions","map","index","components","Action","key","MTableBody","emptyRowCount","renderData","localization","objectSpread_default","options","showEmptyDataSourceMessage","length","addColumn","selection","filter","a","isFreeAction","hasDetailPanel","isTreeData","style","height","paging","emptyRowsWhenPaging","pageSize","paddingTop","paddingBottom","textAlign","colSpan","columns","emptyDataSourceMessage","toConsumableArray_default","Array","r","_this2","tableData","editing","EditRow","columnDef","hidden","icons","editRow","mode","detailPanel","onEditingCanceled","onEditingApproved","Row","level","onRowSelected","getFieldValue","path","currentPage","onToggleDetailPanel","onRowClick","onTreeExpandChanged","hasAnyEditingRow","treeDataMaxLevel","groups","_this3","groupData","GroupRow","value","onGroupExpandChanged","_this4","col","groupOrder","sort","col1","col2","filtering","FilterRow","emptyCell","hasActions","actionsColumnIndex","onFilterChanged","onFilterSelectionChanged","filterRow","showAddRow","addRowPosition","initialFormData","renderGroupedRows","renderUngroupedRows","renderEmpty","MTableBodyRow","isOpen","transform","Cell","id","rowData","padding","width","display","Actions","checked","e","toString","onChange","paddingLeft","_this5","CustomIcon","_ref","transition","rotateIconStyle","showDetailPanel","DetailPanel","panel","render","iconButton","animation","openIcon","rowStyle","cursor","opacity","_this6","renderColumns","splice","renderSelectionColumn","push","renderActions","endPos","childRows","marginLeft","isTreeExpanded","renderDetailPanelColumn","forEach","_this$props","rowProps","objectWithoutProperties_default","selected","hover","getStyle","panelIndex","isArray","concat","MTableGroupbar","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","isDragging","draggableStyle","userSelect","margin","isDraggingOver","background","overflow","border","borderStyle","state","minHeight","react_beautiful_dnd_esm","droppableId","direction","placeholder","provided","snapshot","ref","innerRef","getListStyle","groupColumns","variant","groupedBy","draggableId","draggableProps","dragHandleProps","getItemStyle","onSortChanged","label","float","groupSort","SortArrow","boxShadow","textTransform","onDelete","onGroupRemoved","MTableGroupRow","detail","column","isExpanded","freeCells","i","lookup","undefined","emptyValue","MTableCell","disableClick","cellStyle","getEmptyValue","type","Check","ThirdStateCheck","Date","toLocaleDateString","toLocaleTimeString","toLocaleString","getCurrencyValue","currencySetting","Intl","NumberFormat","locale","currency","currencyCode","minimumFractionDigits","maximumFractionDigits","format","cellProps","align","indexOf","handleClickCell","children","getRenderValue","byString","o","s","replace","split","n","x","MTableEditRow","JSON","parse","stringify","field","readonly","EditComponent","editComponent","EditField","setState","saveTooltip","Clear","cancelTooltip","borderBottom","deleteText","MTableEditField","getProps","target","keys","material_ui_pickers_esm","utils","DateFnsUtils","clearable","InputProps","renderLookupField","renderBooleanField","renderDateField","renderTimeField","renderDateTimeField","renderCurrencyField","renderTextField","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MTableFilterRow","multiple","filterValue","input","renderValue","selecteds","join","primary","indeterminate","val","startAdornment","position","filterTooltip","Filter","dateInputElement","onDateInputChange","date","customFilterAndSearch","renderLookupFilter","renderBooleanFilter","includes","renderDateTypeFilter","renderDefaultFilter","getComponentForColumn","MTableHeader","_React$Component","apply","arguments","inherits_default","createClass_default","className","classes","header","headerStyle","sorting","active","orderBy","orderDirection","onOrderChange","grouping","isDragDisabled","showSelectAllCheckbox","selectedCount","dataCount","onAllSelected","headers","renderHeader","hasSelection","renderSelectionHeader","showActionsColumn","actionsHeaderIndex","renderActionsHeader","withStyles","theme","top","zIndex","backgroundColor","palette","paper","MTablePaginationInner","onChangePage","page","Math","max","ceil","count","rowsPerPage","root","firstTooltip","handleFirstPageButtonClick","aria-label","firstAriaLabel","LastPage","FirstPage","previousTooltip","handleBackButtonClick","previousAriaLabel","NextPage","PreviousPage","flex","lineHeight","labelDisplayedRows","min","nextTooltip","handleNextButtonClick","nextAriaLabel","lastTooltip","handleLastPageButtonClick","lastAriaLabel","labelRowsPerPage","MTablePagination","flexShrink","text","secondary","withTheme","number","maxPages","smDown","handleNumberButtonClick","spacing","unit","MTableToolbar","export","CsvBuilder","exportFileName","setDelimeter","exportDelimiter","setColumns","addRows","exportFile","exportCsv","defaultExportCsv","exportButtonAnchorEl","columnsButtonAnchorEl","search","searchFieldAlignment","showTitle","searchField","searchText","onSearchChanged","searchTooltip","Search","endAdornment","ResetSearch","searchFieldStyle","columnsButton","showColumnsTitle","currentTarget","showColumnsAriaLabel","ViewColumn","anchorEl","open","Boolean","onClose","fontWeight","addRemoveColumns","removable","control","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","Export","exportName","selectedRows","renderSelectedActions","renderDefaultActions","nRowsSelected","classNames","highlight","renderSearch","toolbarButtonAlignment","spacer","paddingRight","main","lighten","light","dark","DataManager","isDataType","reduce","result","current","filtered","filterData","searched","searchData","grouped","treefied","treefyData","sorted","sortData","paged","pageData","sortedData","lastEditingRow","originalData","pagedData","treefiedDataLength","filteredData","applyFilters","row","currentDate","selectedDate","currentDateToCompare","selectedDateToCompare","formatDate","currentHour","selectedHour","toUpperCase","searchedData","applySearch","searchable","some","defaultFilter","defaultGroupOrder","defaultGroupSort","expanded","defaultExpanded","parentFunc","columnId","filterSelectionChecked","findDataByPath","checkChildRows","childRow","detailPanelType","lastDetailPanelRow","setCheck","element","d","groupedData","find","c","start","destination","source","end","slice","last","pop","unshift","shift","newGroup","dataType","b","list","_","customSort","tmpData","subData","object","colDef","group","g","oldGroup","findGroupByGroupPath","treefiedData","addRow","parent","oldParent","isDefined","_this7","sortGroups","sortGroupData","sortList","sortTree","item","startIndex","endIndex","MaterialTable","onSelectionChange","findSelecteds","_this$props2","onChangeRowsPerPage","_this$props3","query","callback","isLoading","then","totalCount","dataManager","setData","getRenderState","debounce","changeSearchText","isRemoteData","onQueryChange","debounceInterval","filters","operator","calculatedProps","setDataManagerFields","isInit","defaultSortColumnIndex","defaultSortDirection","findIndex","defaultSort","setDefaultExpanded","changeApplySearch","changeApplyFilters","changeOrder","changeCurrentPage","initialPage","changePageSize","changePaging","changeParentFunc","parentChildData","changeDetailPanelType","nextProps","body","editable","onRowAdd","Add","addTooltip","changeRowEditing","onRowUpdate","Edit","editTooltip","onRowDelete","Delete","deleteTooltip","pagination","Pagination","paginationRoot","toolbar","paginationToolbar","caption","paginationCaption","selectRoot","paginationSelectRoot","overflowX","rowsPerPageOptions","pageSizeOptions","SelectProps","labelRowsSelect","ActionsComponent","subProps","paginationType","m_table_pagination","m_table_stepped_pagination","from","to","onDragEnd","changeByDrag","Container","Toolbar","onSearchChange","changeColumnHidden","Groupbar","groupedColumn","changeGroupOrder","combine","reason","material_table_ScrollBar","double","doubleHorizontalScroll","maxBodyHeight","overflowY","Header","changeAllSelected","Body","changeFilterValue","onFilterChange","changeFilterSelectionChecked","changeRowSelected","changeDetailPanelVisibility","changeGroupExpand","changeTreeExpand","onTreeExpandChange","newData","oldData","catch","loadingType","left","renderFooter","verticalAlign","ScrollBar","DoubleScrollbar_default","Paper","TablePagination","material_table_MaterialTable","tableRef"],"mappings":"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","file":"static/js/docz-examples-01-example-basic~docz-examples-02-example-column-types~docz-examples-03-example-action~ff3dd4d6.3268d5c4.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, IconButton, Tooltip } from '@material-ui/core';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableAction extends React.Component {\r\n  render() {\r\n    let action = this.props.action;\r\n    if (typeof action === 'function') {\r\n      action = action(this.props.data);\r\n      if (!action) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const handleOnClick = event => {\r\n      if (action.onClick) {\r\n        action.onClick(event, this.props.data);\r\n        event.stopPropagation();\r\n      }\r\n    };\r\n\r\n    const button = (\r\n      <span>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          disabled={action.disabled}\r\n          onClick={(event) => handleOnClick(event)}\r\n        >\r\n          {typeof action.icon === \"string\" ? (\r\n            <Icon {...action.iconProps} fontSize=\"small\">{action.icon}</Icon>\r\n          ) : (\r\n              <action.icon\r\n                {...action.iconProps}\r\n                disabled={action.disabled}                \r\n              />\r\n            )\r\n          }\r\n        </IconButton>\r\n      </span>\r\n    );\r\n\r\n    if (action.tooltip) {\r\n      return <Tooltip title={action.tooltip}>{button}</Tooltip>;\r\n    } else {\r\n      return button;\r\n    }\r\n  }\r\n}\r\n\r\nMTableAction.defaultProps = {\r\n  action: {},\r\n  data: {}\r\n};\r\n\r\nMTableAction.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\r\n};\r\n\r\nexport default MTableAction;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableActions extends React.Component {\r\n\r\n  render() {\r\n    if (this.props.actions) {\r\n      return this.props.actions.map((action, index) => <this.props.components.Action action={action} key={\"action-\" + index} data={this.props.data}/>);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nMTableActions.defaultProps = {  \r\n  actions: [],\r\n  data: {}\r\n};\r\n\r\nMTableActions.propTypes = {\r\n  components: PropTypes.object.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\r\n};\r\n\r\nexport default MTableActions;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableBody extends React.Component {\r\n  renderEmpty(emptyRowCount, renderData) {\r\n    const localization = { ...MTableBody.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {\r\n      let addColumn = 0;\r\n      if (this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)) {\r\n        addColumn++;\r\n      }\r\n      if (this.props.hasDetailPanel) {\r\n        addColumn++;\r\n      }\r\n      if (this.props.isTreeData) {\r\n        addColumn++;\r\n      }\r\n      return (\r\n        <TableRow style={{ height: 49 * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1) }} key={'empty-' + 0} >\r\n          <TableCell style={{ paddingTop: 0, paddingBottom: 0, textAlign: 'center' }} colSpan={this.props.columns.length + addColumn} key=\"empty-\">\r\n            {localization.emptyDataSourceMessage}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    } else if (this.props.options.emptyRowsWhenPaging) {\r\n      return (\r\n        <React.Fragment>\r\n          {[...Array(emptyRowCount)].map((r, index) => <TableRow style={{ height: 49 }} key={'empty-' + index} />)}\r\n          {emptyRowCount > 0 && <TableRow style={{ height: 1 }} key={'empty-last1'} />}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderUngroupedRows(renderData) {\r\n    return renderData.map((data, index) => {\r\n      if (data.tableData.editing) {\r\n        return (\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            data={data}\r\n            icons={this.props.icons}\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            key={index}\r\n            mode={data.tableData.editing}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            detailPanel={this.props.detailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <this.props.components.Row\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            data={data}\r\n            index={index}\r\n            key={index}\r\n            level={0}\r\n            options={this.props.options}\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            onRowSelected={this.props.onRowSelected}\r\n            actions={this.props.actions}\r\n            columns={this.props.columns}\r\n            getFieldValue={this.props.getFieldValue}\r\n            detailPanel={this.props.detailPanel}\r\n            path={[index + this.props.pageSize * this.props.currentPage]}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onRowClick={this.props.onRowClick}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n            treeDataMaxLevel={this.props.treeDataMaxLevel}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  renderGroupedRows(groups, renderData) {\r\n    return renderData.map((groupData, index) => (\r\n      <this.props.components.GroupRow\r\n        actions={this.props.actions}\r\n        key={groupData.value || (\"\" + index)}\r\n        columns={this.props.columns}\r\n        components={this.props.components}\r\n        detailPanel={this.props.detailPanel}\r\n        getFieldValue={this.props.getFieldValue}\r\n        groupData={groupData}\r\n        groups={groups}\r\n        icons={this.props.icons}\r\n        level={0}\r\n        path={[index + this.props.pageSize * this.props.currentPage]}\r\n        onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n        onRowSelected={this.props.onRowSelected}\r\n        onRowClick={this.props.onRowClick}\r\n        onEditingCanceled={this.props.onEditingCanceled}\r\n        onEditingApproved={this.props.onEditingApproved}\r\n        onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n        onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n        options={this.props.options}\r\n        isTreeData={this.props.isTreeData}\r\n        hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    let renderData = this.props.renderData;\r\n    const groups = this.props.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    let emptyRowCount = 0;\r\n    if (this.props.options.paging) {\r\n      emptyRowCount = this.props.pageSize - renderData.length;\r\n    }\r\n    return (\r\n      <TableBody>\r\n        {this.props.options.filtering &&\r\n          <this.props.components.FilterRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            icons={this.props.icons}\r\n            emptyCell={this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            hasActions={(this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            actionsColumnIndex={this.props.options.actionsColumnIndex}\r\n            onFilterChanged={this.props.onFilterChanged}\r\n            selection={this.props.options.selection}\r\n            onFilterSelectionChanged={this.props.onFilterSelectionChanged}\r\n            localization={{ ...MTableBody.defaultProps.localization.filterRow, ...this.props.localization.filterRow }}\r\n            hasDetailPanel={!!this.props.detailPanel}\r\n            isTreeData={this.props.isTreeData}\r\n          />\r\n        }\r\n\r\n        {this.props.showAddRow && this.props.options.addRowPosition === \"first\" &&\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            data={this.props.initialFormData}\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            key=\"key-add-row\"\r\n            mode=\"add\"\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            detailPanel={this.props.detailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        }\r\n\r\n        {groups.length > 0 ?\r\n          this.renderGroupedRows(groups, renderData) :\r\n          this.renderUngroupedRows(renderData)\r\n        }\r\n\r\n        {this.props.showAddRow && this.props.options.addRowPosition === \"last\" &&\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            data={this.props.initialFormData}\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            key=\"key-add-row\"\r\n            mode=\"add\"\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            detailPanel={this.props.detailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        }\r\n        {this.renderEmpty(emptyRowCount, renderData)}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBody.defaultProps = {\r\n  actions: [],\r\n  currentPage: 0,\r\n  pageSize: 5,\r\n  renderData: [],\r\n  selection: false,\r\n  localization: {\r\n    emptyDataSourceMessage: 'No records to display',\r\n    filterRow: {},\r\n    editRow: {}\r\n  }\r\n};\r\n\r\nMTableBody.propTypes = {\r\n  actions: PropTypes.array,\r\n  components: PropTypes.object.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  currentPage: PropTypes.number,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  icons: PropTypes.object.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  options: PropTypes.object.isRequired,\r\n  pageSize: PropTypes.number,\r\n  renderData: PropTypes.array,\r\n  initialFormData: PropTypes.object,\r\n  selection: PropTypes.bool.isRequired,\r\n  showAddRow: PropTypes.bool,\r\n  treeDataMaxLevel: PropTypes.number,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  localization: PropTypes.object,\r\n  onFilterChanged: PropTypes.func,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n};\r\n\r\nexport default MTableBody;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableBodyRow extends React.Component {\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.props.getFieldValue(this.props.data, columnDef);\r\n        return (\r\n          <this.props.components.Cell\r\n            icons={this.props.icons}\r\n            columnDef={columnDef}\r\n            value={value}\r\n            key={columnDef.tableData.id}\r\n            rowData={this.props.data}\r\n          />\r\n        );\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {\r\n    const actions = this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection);\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} components={this.props.components} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionColumn() {\r\n    return (\r\n      <TableCell padding=\"none\" key=\"key-selection-column\" style={{ width: 48 + 12 * (this.props.treeDataMaxLevel - 1) }}>\r\n        <Checkbox\r\n          checked={this.props.data.tableData.checked === true}\r\n          onClick={(e) => e.stopPropagation()}\r\n          value={this.props.data.tableData.id.toString()}\r\n          onChange={(event) => this.props.onRowSelected(event, this.props.path)}\r\n          style={{\r\n            paddingLeft: 12 + this.props.level * 12\r\n          }}\r\n        />\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  renderDetailPanelColumn() {\r\n\r\n    const CustomIcon = ({ icon, style }) => typeof icon === \"string\" ? <Icon style={style}>{icon}</Icon> : React.createElement(icon, { style });\r\n\r\n    if (typeof this.props.detailPanel == 'function') {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48, textAlign: 'center' }}>\r\n          <IconButton\r\n            style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.data.tableData.showDetailPanel) }}\r\n            onClick={(event) => {\r\n              this.props.onToggleDetailPanel(this.props.path, this.props.detailPanel);\r\n              event.stopPropagation();\r\n            }}\r\n          >\r\n            <this.props.icons.DetailPanel />\r\n          </IconButton>\r\n        </TableCell>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48 * this.props.detailPanel.length, textAlign: 'center' }}>\r\n          {this.props.detailPanel.map((panel, index) => {\r\n\r\n            if (typeof panel === \"function\") {\r\n              panel = panel(this.props.data);\r\n            }\r\n\r\n            const isOpen = (this.props.data.tableData.showDetailPanel || '').toString() === panel.render.toString();\r\n            \r\n            let iconButton = <this.props.icons.DetailPanel />;\r\n            let animation = true;\r\n            if (isOpen) {\r\n              if (panel.openIcon) {\r\n                iconButton = <CustomIcon icon={panel.openIcon} />;\r\n                animation = false;\r\n              }\r\n              else if (panel.icon) {\r\n                iconButton = <CustomIcon icon={panel.icon} />;\r\n              }\r\n            }\r\n            else if (panel.icon) {\r\n              iconButton = <CustomIcon icon={panel.icon} />;\r\n              animation = false;\r\n            }\r\n\r\n            iconButton = (\r\n              <IconButton\r\n                key={\"key-detail-panel-\" + index}\r\n                style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(animation && isOpen) }}\r\n                disabled={panel.disabled}\r\n                onClick={(event) => {\r\n                  this.props.onToggleDetailPanel(this.props.path, panel.render);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                {iconButton}\r\n              </IconButton>);\r\n\r\n            if (panel.tooltip) {\r\n              iconButton = <Tooltip key={\"key-detail-panel-\" + index} title={panel.tooltip}>{iconButton}</Tooltip>;\r\n            }\r\n\r\n            return iconButton;\r\n          })}\r\n        </TableCell>\r\n      );\r\n    }\r\n  }\r\n\r\n  getStyle() {\r\n    let style = {\r\n      transition: 'all ease 300ms',\r\n    };\r\n\r\n    if (typeof this.props.options.rowStyle === \"function\") {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle(this.props.data)\r\n      };\r\n    }\r\n    else if(this.props.options.rowStyle) {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle\r\n      };\r\n    }\r\n\r\n    if (this.props.onRowClick) {\r\n      style.cursor = 'pointer';\r\n    }\r\n\r\n    if(this.props.hasAnyEditingRow) {\r\n      style.opacity = 0.2;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const renderColumns = this.renderColumns();\r\n    if (this.props.options.selection) {\r\n      renderColumns.splice(0, 0, this.renderSelectionColumn());\r\n    }\r\n    if (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0) {\r\n      if (this.props.options.actionsColumnIndex === -1) {\r\n        renderColumns.push(this.renderActions());\r\n      } else if (this.props.options.actionsColumnIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.options.selection) {\r\n          endPos = 1;\r\n        }\r\n        renderColumns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n      }\r\n    }\r\n\r\n    if (this.props.isTreeData) {\r\n      if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {\r\n        renderColumns.splice(0, 0, (\r\n          <TableCell padding=\"none\" key={\"key-tree-data-column\"} style={{ width: 48 + 12 * (this.props.treeDataMaxLevel - 2) }}>\r\n            <IconButton\r\n              style={{\r\n                transition: 'all ease 200ms',\r\n                marginLeft: this.props.level * 12,\r\n                ...this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)\r\n              }}\r\n              onClick={(event) => {\r\n                this.props.onTreeExpandChanged(this.props.path, this.props.data);\r\n                event.stopPropagation();\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n          </TableCell>\r\n        ));\r\n      }\r\n      else {\r\n        renderColumns.splice(0, 0, <TableCell padding=\"none\" key={\"key-tree-data-column\"} />);\r\n      }\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      renderColumns.splice(0, 0, this.renderDetailPanelColumn());\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        renderColumns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const {\r\n      icons,\r\n      data,\r\n      columns,\r\n      components,\r\n      detailPanel,\r\n      getFieldValue,\r\n      isTreeData,\r\n      onRowClick,\r\n      onRowSelected,\r\n      onTreeExpandChanged,\r\n      onToggleDetailPanel,\r\n      onEditingCanceled,\r\n      onEditingApproved,\r\n      options,\r\n      hasAnyEditingRow,\r\n      treeDataMaxLevel,\r\n      ...rowProps } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          selected={hasAnyEditingRow}\r\n          {...rowProps}\r\n          hover={onRowClick ? true : false}\r\n          style={this.getStyle()}\r\n          onClick={(event) => {\r\n            onRowClick && onRowClick(event, this.props.data,\r\n              (panelIndex) => {\r\n                let panel = detailPanel;\r\n                if (Array.isArray(panel)) {\r\n                  panel = panel[panelIndex || 0].render;\r\n                }\r\n\r\n                onToggleDetailPanel(this.props.path, panel);\r\n              });\r\n          }}\r\n        >\r\n          {renderColumns}\r\n        </TableRow>\r\n        {this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded &&\r\n          this.props.data.tableData.childRows.map((data, index) => {\r\n            if (data.tableData.editing) {\r\n              return (\r\n                <this.props.components.EditRow\r\n                  columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n                  components={this.props.components}\r\n                  data={data}\r\n                  icons={this.props.icons}\r\n                  localization={this.props.localization}\r\n                  key={index}\r\n                  mode={data.tableData.editing}\r\n                  options={this.props.options}\r\n                  isTreeData={this.props.isTreeData}\r\n                  detailPanel={this.props.detailPanel}\r\n                  onEditingCanceled={onEditingCanceled}\r\n                  onEditingApproved={onEditingApproved}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <this.props.components.Row\r\n                  {...this.props}\r\n                  data={data}\r\n                  index={index}\r\n                  key={index}\r\n                  level={this.props.level + 1}\r\n                  path={[...this.props.path, index]}\r\n                  onEditingCanceled={onEditingCanceled}\r\n                  onEditingApproved={onEditingApproved}\r\n                  hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n                  treeDataMaxLevel={treeDataMaxLevel}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        }\r\n        {this.props.data.tableData && this.props.data.tableData.showDetailPanel &&\r\n          <TableRow\r\n          // selected={this.props.index % 2 === 0}\r\n          >\r\n            <TableCell colSpan={renderColumns.length} padding=\"none\">\r\n              {this.props.data.tableData.showDetailPanel(this.props.data)}\r\n            </TableCell>\r\n          </TableRow>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBodyRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  data: {},\r\n  options: {},\r\n  path: []\r\n};\r\n\r\nMTableBodyRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  treeDataMaxLevel: PropTypes.number,\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  columns: PropTypes.array,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, Toolbar, Chip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nclass MTableGroupbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    // padding: '8px 16px',\r\n    margin: `0 ${8}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    // background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  getListStyle = isDraggingOver => ({\r\n    // background: isDraggingOver ? 'lightblue' : '#0000000a',\r\n    background: '#0000000a',\r\n    display: 'flex',\r\n    width: '100%',\r\n    padding: 8,\r\n    overflow: 'auto',\r\n    border: '1px solid #ccc',\r\n    borderStyle: 'dashed'\r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <Toolbar style={{ padding: 0, minHeight: 'unset' }}>\r\n        <Droppable droppableId=\"groups\" direction=\"horizontal\" placeholder=\"Deneme\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={this.getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.props.groupColumns.length > 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.groupedBy}\r\n                </Typography>\r\n              }\r\n              {this.props.groupColumns.map((columnDef, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={columnDef.tableData.id}\r\n                    draggableId={columnDef.tableData.id.toString()}\r\n                    index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                      >\r\n                        <Chip\r\n                          {...provided.dragHandleProps}\r\n                          onClick={() => this.props.onSortChanged(columnDef)}\r\n                          label={\r\n                            <div>\r\n                              <div style={{ float: 'left' }}>{columnDef.title}</div>\r\n                              {columnDef.tableData.groupSort &&\r\n                                <this.props.icons.SortArrow\r\n                                  style={{\r\n                                    transition: '300ms ease all',\r\n                                    transform: columnDef.tableData.groupSort === \"desc\" ? 'rotate(-180deg)' : 'none',\r\n                                    fontSize: 18\r\n                                  }}\r\n                                />\r\n                              }\r\n                            </div>\r\n                          }\r\n                          style={{ boxShadow: 'none', textTransform: 'none' }}\r\n                          onDelete={() => this.props.onGroupRemoved(columnDef, index)}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {this.props.groupColumns.length === 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.placeholder}\r\n                </Typography>\r\n              }\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupbar.defaultProps = {\r\n};\r\n\r\nMTableGroupbar.propTypes = {\r\n  localization: PropTypes.shape({\r\n    groupedBy: PropTypes.string,\r\n    placeholder: PropTypes.string\r\n  }),\r\n};\r\n\r\nexport default MTableGroupbar;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableCell, TableRow, IconButton } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableGroupRow extends React.Component {\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  render() {\r\n    let colSpan = this.props.columns.filter(columnDef => !columnDef.hidden).length;\r\n    this.props.options.selection && colSpan++;    \r\n    this.props.detailPanel && colSpan++;\r\n    this.props.actions && this.props.actions.length > 0 && colSpan++;\r\n    const column = this.props.groups[this.props.level];\r\n\r\n    let detail;\r\n    if (this.props.groupData.isExpanded) {\r\n      if (this.props.groups.length > (this.props.level + 1)) { // Is there another group\r\n        detail = this.props.groupData.groups.map((groupData, index) => (\r\n          <this.props.components.GroupRow\r\n            actions={this.props.actions}\r\n            key={groupData.value || (\"\" + index)}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            groupData={groupData}\r\n            groups={this.props.groups}            \r\n            icons={this.props.icons}\r\n            level={this.props.level + 1}\r\n            path={[...this.props.path, index]}\r\n            onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            options={this.props.options}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n            isTreeData={this.props.isTreeData}\r\n          />\r\n        ));\r\n      }\r\n      else {\r\n        detail = this.props.groupData.data.map((rowData, index) => (\r\n          <this.props.components.Row\r\n            actions={this.props.actions}\r\n            key={index}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            data={rowData}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            icons={this.props.icons}\r\n            path={[...this.props.path, index]}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        ));\r\n      }\r\n    }\r\n\r\n    const freeCells = [];\r\n    for (let i = 0; i < this.props.level; i++) {\r\n      freeCells.push(<TableCell padding=\"checkbox\" />);\r\n    }\r\n\r\n    let value = this.props.groupData.value;\r\n    if(column.render) {\r\n      value = column.render(value, 'group');\r\n    }\r\n    else if (column.lookup) {\r\n      value = column.lookup[value];\r\n    }\r\n    if((value === undefined || value === null) && column.emptyValue) {\r\n      if (typeof column.emptyValue === 'function') {\r\n        value = column.emptyValue();\r\n      } else {\r\n        value = column.emptyValue;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableRow>\r\n          {freeCells}\r\n          <this.props.components.Cell colSpan={colSpan} padding=\"none\" value={value}>\r\n            <IconButton\r\n              style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.groupData.isExpanded) }}\r\n              onClick={(event) => {\r\n                this.props.onGroupExpandChanged(this.props.path);\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n            <b>{column.title + \": \"}</b>            \r\n          </this.props.components.Cell>\r\n        </TableRow>\r\n        {detail}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupRow.defaultProps = {\r\n  columns: [],\r\n  groups: [],\r\n  options: {},\r\n  level: 0\r\n};\r\n\r\nMTableGroupRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.arrayOf(PropTypes.object),\r\n  components: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n  getFieldValue: PropTypes.func,\r\n  groupData: PropTypes.object,\r\n  groups: PropTypes.arrayOf(PropTypes.object),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  icons: PropTypes.object,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  level: PropTypes.number,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onRowSelected: PropTypes.func,\r\n  onRowClick: PropTypes.func,  \r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  options: PropTypes.object,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport { Icon, TableCell } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport default class MTableCell extends React.Component {\r\n  getRenderValue() {\r\n    if (this.props.columnDef.emptyValue !== undefined && (this.props.value === undefined || this.props.value === null)) {\r\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\r\n    }\r\n    if (this.props.columnDef.render) {\r\n      return this.props.columnDef.render(this.props.rowData, 'row');\r\n    } else if (this.props.columnDef.type === 'boolean') {\r\n      const style = { textAlign: 'left', width: '48px' };\r\n      if (this.props.value) {\r\n        return <this.props.icons.Check style={style} />;\r\n      } else {\r\n        return <this.props.icons.ThirdStateCheck style={style} />;\r\n      }\r\n    } else if (this.props.columnDef.type === 'date') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleDateString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'time') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleTimeString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'datetime') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'currency') {\r\n      return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);\r\n    }\r\n\r\n    return this.props.value;\r\n  }\r\n\r\n  getEmptyValue(emptyValue) {\r\n    if (typeof emptyValue === 'function') {\r\n      return this.props.columnDef.emptyValue(this.props.rowData);\r\n    } else {\r\n      return emptyValue;\r\n    }\r\n  }\r\n\r\n  getCurrencyValue(currencySetting, value) {\r\n    if (currencySetting !== undefined) {\r\n      return new Intl.NumberFormat((currencySetting.locale !== undefined) ? currencySetting.locale : 'en-US',\r\n        {\r\n          style: 'currency',\r\n          currency: (currencySetting.currencyCode !== undefined) ? currencySetting.currencyCode : 'USD',\r\n          minimumFractionDigits: (currencySetting.minimumFractionDigits !== undefined) ? currencySetting.minimumFractionDigits : 2,\r\n          maximumFractionDigits: (currencySetting.maximumFractionDigits !== undefined) ? currencySetting.maximumFractionDigits : 2\r\n        }).format((value !== undefined) ? value : 0);\r\n    } else {\r\n      return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format((value !== undefined) ? value : 0);\r\n    }\r\n  }\r\n\r\n  handleClickCell = e => {\r\n    if (this.props.columnDef.disableClick) {\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  getStyle = () => {\r\n    let cellStyle = {};\r\n\r\n    if (typeof this.props.columnDef.cellStyle === 'function') {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle(this.props.value) };\r\n    } else {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle };\r\n    }\r\n\r\n    if (this.props.columnDef.disableClick) {\r\n      cellStyle.cursor = 'default';\r\n    }\r\n\r\n    return { ...this.props.style, ...cellStyle };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { icons, columnDef, rowData, ...cellProps } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        {...cellProps}\r\n        style={this.getStyle()}\r\n        align={['numeric'].indexOf(this.props.columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n        onClick={this.handleClickCell}\r\n      >\r\n        {this.props.children}\r\n        {this.getRenderValue()}\r\n      </TableCell>\r\n    );\r\n  }\r\n}\r\n\r\nMTableCell.defaultProps = {\r\n  columnDef: {},\r\n  value: undefined\r\n};\r\n\r\nMTableCell.propTypes = {\r\n  columnDef: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  rowData: PropTypes.object\r\n};\r\n","export const byString = (o, s) => {\r\n  if (!s) {\r\n    return;\r\n  }\r\n\r\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n  s = s.replace(/^\\./, '');           // strip a leading dot\r\n  var a = s.split('.');\r\n  for (var i = 0, n = a.length; i < n; ++i) {\r\n    var x = a[i];\r\n    if (o && x in o) {\r\n      o = o[x];\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  return o;\r\n};","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport MTableCell from './m-table-cell';\r\nimport { byString } from './utils';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableEditRow extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data ? JSON.parse(JSON.stringify(props.data)) : {}\r\n    };\r\n  }\r\n\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {        \r\n        const value = (typeof this.state.data[columnDef.field] !== 'undefined' ? this.state.data[columnDef.field] : byString(this.state.data, columnDef.field));\r\n        const style = {};\r\n        if (index === 0) {\r\n          style.paddingLeft = 24 + this.props.level * 20;\r\n        }\r\n\r\n        if (!columnDef.field || (this.props.mode !== 'add' && columnDef.readonly)) {\r\n          return (\r\n            <this.props.components.Cell\r\n              icons={this.props.icons}\r\n              columnDef={columnDef}\r\n              value={value}\r\n              key={columnDef.tableData.id}\r\n              rowData={this.props.data}\r\n            />\r\n          );\r\n        }\r\n        else {\r\n          const EditComponent = columnDef.editComponent || this.props.components.EditField;\r\n\r\n          return (\r\n            <TableCell\r\n              key={columnDef.tableData.id}\r\n              align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n            >\r\n              <EditComponent\r\n                key={columnDef.tableData.id}\r\n                columnDef={columnDef}\r\n                value={value}\r\n                onChange={value => {\r\n                  const data = { ...this.state.data };\r\n                  data[columnDef.field] = value;\r\n                  this.setState({ data });\r\n                }} />\r\n            </TableCell>\r\n          );\r\n        }\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {\r\n    const localization = { ...MTableEditRow.defaultProps.localization, ...this.props.localization };\r\n    const actions = [\r\n      {\r\n        icon: this.props.icons.Check,\r\n        tooltip: localization.saveTooltip,\r\n        onClick: () => {\r\n          const newData = this.state.data;\r\n          delete newData.tableData;\r\n          this.props.onEditingApproved(this.props.mode, this.state.data, this.props.data);\r\n        }\r\n      },\r\n      {\r\n        icon: this.props.icons.Clear,\r\n        tooltip: localization.cancelTooltip,\r\n        onClick: () => {\r\n          this.props.onEditingCanceled(this.props.mode, this.props.data);\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} components={this.props.components} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  getStyle() {\r\n    const style = {\r\n      // boxShadow: '1px 1px 1px 1px rgba(0,0,0,0.2)',\r\n      borderBottom: '1px solid red'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const localization = { ...MTableEditRow.defaultProps.localization, ...this.props.localization };\r\n\r\n    let columns;\r\n    if (this.props.mode === \"add\" || this.props.mode === \"update\") {\r\n      columns = this.renderColumns();\r\n    }\r\n    else {\r\n      const colSpan = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1)).length;\r\n      columns = [\r\n        <TableCell\r\n          padding={this.props.options.actionsColumnIndex === 0 ? \"none\" : undefined}\r\n          key=\"key-selection-cell\"\r\n          colSpan={colSpan}>\r\n          <Typography variant=\"h6\">\r\n            {localization.deleteText}\r\n          </Typography>\r\n        </TableCell>\r\n      ];\r\n    }\r\n\r\n\r\n    if (this.props.options.selection) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-selection-cell\" />);\r\n    }\r\n    if (this.props.isTreeData) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-tree-data-cell\" />);\r\n    }\r\n\r\n    if (this.props.options.actionsColumnIndex === -1) {\r\n      columns.push(this.renderActions());\r\n    } else if (this.props.options.actionsColumnIndex >= 0) {\r\n      let endPos = 0;\r\n      if (this.props.options.selection) {\r\n        endPos = 1;\r\n      }\r\n      if (this.props.isTreeData) {\r\n        endPos = 1;\r\n        if (this.props.options.selection) {\r\n          columns.splice(1, 1);\r\n        }\r\n      }\r\n      columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-cell\" />);\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const {\r\n      detailPanel,\r\n      isTreeData,\r\n      onRowClick,\r\n      onRowSelected,\r\n      onTreeExpandChanged,\r\n      onToggleDetailPanel,\r\n      onEditingApproved,\r\n      onEditingCanceled,\r\n      ...rowProps\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          {...rowProps}\r\n          style={this.getStyle()}\r\n        >\r\n          {columns}\r\n        </TableRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableEditRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  options: {},\r\n  path: [],\r\n  localization: {\r\n    saveTooltip: 'Save',\r\n    cancelTooltip: 'Cancel',\r\n    deleteText: 'Are you sure delete this row?',\r\n  }\r\n};\r\n\r\nMTableEditRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  columns: PropTypes.array,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n  localization: PropTypes.object\r\n};\r\n","import * as React from 'react';\r\nimport { TextField, Checkbox, Select, MenuItem } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MTableEditField extends React.Component {\r\n  getProps() {\r\n    const { columnDef, ...props } = this.props;\r\n    return props;\r\n  }\r\n\r\n  renderLookupField() {\r\n    return (\r\n      <Select\r\n        {...this.getProps()}\r\n        value={this.props.value === undefined ? '' : this.props.value}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        style={{\r\n          fontSize: 13,\r\n        }}\r\n      >\r\n        {Object.keys(this.props.columnDef.lookup).map(key => (\r\n          <MenuItem key={key} value={key}>{this.props.columnDef.lookup[key]}</MenuItem>)\r\n        )}\r\n      </Select>\r\n    );\r\n\r\n  }\r\n\r\n  renderBooleanField() {\r\n    return (\r\n      <Checkbox\r\n        {...this.getProps()}\r\n        checked={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.checked)}\r\n        style={{\r\n          paddingLeft: 0,\r\n          paddingTop: 0,\r\n          paddingBottom: 0\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          {...this.getProps()}\r\n          format=\"dd.MM.yyyy\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <TimePicker\r\n          {...this.getProps()}\r\n          format=\"HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderDateTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DateTimePicker\r\n          {...this.getProps()}\r\n          format=\"dd.MM.yyyy HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTextField() {\r\n    return (\r\n      <TextField\r\n        {...this.getProps()}\r\n        style={this.props.columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={this.props.columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        placeholder={this.props.columnDef.title}\r\n        value={this.props.value === undefined ? '' : this.props.value}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        InputProps={{\r\n          style: {\r\n            fontSize: 13,\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCurrencyField() {\r\n    return \"ok\";\r\n  }\r\n\r\n  render() {\r\n    let component = \"ok\";\r\n\r\n    if (this.props.columnDef.lookup) {\r\n      component = this.renderLookupField();\r\n    }\r\n    else if (this.props.columnDef.type === \"boolean\") {\r\n      component = this.renderBooleanField();\r\n    }\r\n    else if (this.props.columnDef.type === \"date\") {\r\n      component = this.renderDateField();\r\n    }\r\n    else if (this.props.columnDef.type === \"time\") {\r\n      component = this.renderTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"datetime\") {\r\n      component = this.renderDateTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"currency\") {\r\n      component = this.renderCurrencyField();\r\n    }\r\n    else {\r\n      component = this.renderTextField();\r\n    }\r\n\r\n    return component;\r\n\r\n  }\r\n}\r\n\r\nMTableEditField.propTypes = {\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n  columnDef: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MTableEditField;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableCell, TableRow, TextField,\r\n  FormControl, Select, Input,\r\n  MenuItem, Checkbox, ListItemText,\r\n  InputAdornment, Icon, Tooltip,\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MTableFilterRow extends React.Component {\r\n  renderLookupFilter = (columnDef) => (\r\n    <FormControl style={{ width: '100%' }}>\r\n      <Select\r\n        multiple\r\n        value={columnDef.tableData.filterValue || []}\r\n        onChange={event => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        input={<Input id=\"select-multiple-checkbox\" />}\r\n        renderValue={selecteds => selecteds.map(selected => columnDef.lookup[selected]).join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {\r\n          Object.keys(columnDef.lookup).map(key => (\r\n            <MenuItem key={key} value={key}>\r\n              <Checkbox checked={columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false} />\r\n              <ListItemText primary={columnDef.lookup[key]} />\r\n            </MenuItem>\r\n          ))\r\n        }\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n\r\n  renderBooleanFilter = (columnDef) => (\r\n    <Checkbox\r\n      indeterminate={columnDef.tableData.filterValue === undefined}\r\n      checked={columnDef.tableData.filterValue === 'checked'}\r\n      onChange={() => {\r\n        let val;\r\n        if (columnDef.tableData.filterValue === undefined) {\r\n          val = 'checked';\r\n        } else if (columnDef.tableData.filterValue === 'checked') {\r\n          val = 'unchecked';\r\n        }\r\n\r\n        this.props.onFilterChanged(columnDef.tableData.id, val);\r\n      }}\r\n    />\r\n  )\r\n\r\n  renderDefaultFilter = (columnDef) => {\r\n    const localization = { ...MTableFilterRow.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TextField\r\n        style={columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        value={columnDef.tableData.filterValue || ''}\r\n        onChange={(event) => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Tooltip title={localization.filterTooltip}>\r\n                <this.props.icons.Filter />\r\n              </Tooltip>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateTypeFilter = (columnDef) => {\r\n    let dateInputElement = null;\r\n    const onDateInputChange = date => this.props.onFilterChanged(columnDef.tableData.id, date);\r\n\r\n    if (columnDef.type === 'date') {\r\n      dateInputElement = (\r\n        <DatePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'datetime') {\r\n      dateInputElement = (\r\n        <DateTimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'time') {\r\n      dateInputElement = (\r\n        <TimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        {dateInputElement}\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  getComponentForColumn(columnDef) {\r\n    if (columnDef.filtering === false) {\r\n      return null;\r\n    }\r\n\r\n    if (columnDef.field || columnDef.customFilterAndSearch) {\r\n      if (columnDef.lookup) {\r\n        return this.renderLookupFilter(columnDef);\r\n      } else if (columnDef.type === 'boolean') {\r\n        return this.renderBooleanFilter(columnDef);\r\n      } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\r\n        return this.renderDateTypeFilter(columnDef);\r\n      } else {\r\n        return this.renderDefaultFilter(columnDef);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map(columnDef => (\r\n        <TableCell key={columnDef.tableData.id}>\r\n          {this.getComponentForColumn(columnDef)}\r\n        </TableCell>\r\n      ));\r\n\r\n    if (this.props.selection) {\r\n      columns.splice(0, 0, (\r\n        <TableCell padding=\"none\" key=\"key-selection-column\">\r\n          <Checkbox onChange={this.props.onFilterSelectionChanged} />\r\n        </TableCell>)\r\n      );\r\n    }\r\n    if (this.props.emptyCell && this.props.hasActions) {\r\n      if (this.props.actionsColumnIndex === -1) {\r\n        columns.push(<TableCell key=\"key-action-column\" />);\r\n      } else {\r\n        let endPos = 0;\r\n        if (this.props.selection) {\r\n          endPos = 1;\r\n        }\r\n        columns.splice(this.props.actionsColumnIndex + endPos, 0, <TableCell key=\"key-action-column\" />);\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-column\" />);\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      columns.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-filter\"}          \r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-filter\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    return (\r\n      <TableRow style={{ height: 10 }}>\r\n        {columns}\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nMTableFilterRow.defaultProps = {\r\n  emptyCell: false,\r\n  columns: [],\r\n  selection: false,\r\n  hasActions: false,\r\n  localization: {\r\n    filterTooltip: 'Filter'\r\n  }\r\n};\r\n\r\nMTableFilterRow.propTypes = {\r\n  emptyCell: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onFilterChanged: PropTypes.func.isRequired,\r\n  selection: PropTypes.bool.isRequired,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  actionsColumnIndex: PropTypes.number,\r\n  hasActions: PropTypes.bool,\r\n  localization: PropTypes.object\r\n};\r\n\r\nexport default MTableFilterRow;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableHead, TableRow, TableCell,\r\n  TableSortLabel, Checkbox, withStyles\r\n} from '@material-ui/core';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport class MTableHeader extends React.Component {\r\n  renderHeader() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => (\r\n        <TableCell\r\n          key={columnDef.tableData.id}\r\n          align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n          className={this.props.classes.header}\r\n          style={{ ...this.props.headerStyle, ...columnDef.headerStyle }}\r\n        >\r\n          {(columnDef.sort !== false && columnDef.sorting !== false && this.props.sorting)\r\n            ? <TableSortLabel\r\n              active={this.props.orderBy === columnDef.tableData.id}\r\n              direction={this.props.orderDirection || 'asc'}\r\n              onClick={() => {\r\n                const orderDirection = columnDef.tableData.id !== this.props.orderBy ? 'asc' : this.props.orderDirection === 'asc' ? 'desc' : 'asc';\r\n                this.props.onOrderChange(columnDef.tableData.id, orderDirection);\r\n              }}\r\n            >\r\n              {(this.props.grouping && columnDef.field)\r\n                ? <Draggable\r\n                  key={columnDef.tableData.id}\r\n                  draggableId={columnDef.tableData.id.toString()}\r\n                  isDragDisabled={columnDef.grouping === false}\r\n                  index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    // style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                    >\r\n                      {columnDef.title}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n                : columnDef.title\r\n              }\r\n            </TableSortLabel>\r\n            : columnDef.title\r\n          }\r\n        </TableCell>\r\n      ));\r\n    return mapArr;\r\n  }\r\n\r\n  renderActionsHeader() {\r\n    const localization = { ...MTableHeader.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TableCell\r\n        key=\"key-actions-column\"\r\n        padding=\"checkbox\"\r\n        className={this.props.classes.header}\r\n        style={{ ...this.props.headerStyle, textAlign: 'center' }}\r\n      >\r\n        <TableSortLabel>{localization.actions}</TableSortLabel>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionHeader() {\r\n    return (\r\n      <TableCell\r\n        padding=\"none\"\r\n        key=\"key-selection-column\"\r\n        className={this.props.classes.header}\r\n        style={{ ...this.props.headerStyle }}\r\n      >\r\n        {this.props.showSelectAllCheckbox &&\r\n          <Checkbox\r\n            indeterminate={this.props.selectedCount > 0 && this.props.selectedCount < this.props.dataCount}\r\n            checked={this.props.dataCount > 0 && this.props.selectedCount === this.props.dataCount}\r\n            onChange={(event, checked) => this.props.onAllSelected && this.props.onAllSelected(checked)}\r\n          />\r\n        }\r\n      </TableCell>\r\n    );\r\n  }\r\n  render() {\r\n    const headers = this.renderHeader();\r\n    if (this.props.hasSelection) {\r\n      headers.splice(0, 0, this.renderSelectionHeader());\r\n    }\r\n\r\n    if (this.props.showActionsColumn) {\r\n      if (this.props.actionsHeaderIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.hasSelection) {\r\n          endPos = 1;\r\n        }\r\n        headers.splice(this.props.actionsHeaderIndex + endPos, 0, this.renderActionsHeader());\r\n      } else if (this.props.actionsHeaderIndex === -1) {\r\n        headers.push(this.renderActionsHeader());\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key=\"key-detail-panel-column\"\r\n          className={this.props.classes.header}\r\n          style={{ ...this.props.headerStyle }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-header\"}\r\n          className={this.props.classes.header}\r\n          style={{ ...this.props.headerStyle }}\r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        headers.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-header\" + columnDef.tableData.id} className={this.props.classes.header} />);\r\n      });\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headers}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nMTableHeader.defaultProps = {\r\n  dataCount: 0,\r\n  hasSelection: false,\r\n  headerStyle: {},\r\n  selectedCount: 0,\r\n  sorting: true,\r\n  localization: {\r\n    actions: 'Actions'\r\n  },\r\n  orderBy: undefined,\r\n  orderDirection: 'asc',\r\n  actionsHeaderIndex: 0\r\n};\r\n\r\nMTableHeader.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  dataCount: PropTypes.number,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  hasSelection: PropTypes.bool,\r\n  headerStyle: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  selectedCount: PropTypes.number,\r\n  sorting: PropTypes.bool,\r\n  onAllSelected: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  orderBy: PropTypes.number,\r\n  orderDirection: PropTypes.string,\r\n  actionsHeaderIndex: PropTypes.number,\r\n  showActionsColumn: PropTypes.bool,\r\n  showSelectAllCheckbox: PropTypes.bool,\r\n};\r\n\r\n\r\nexport const styles = theme => ({\r\n  header: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: theme.palette.background.paper, // Change according to theme,\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableHeader);","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(event, Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1));\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage, theme } = this.props;\r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.firstTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.firstAriaLabel}\r\n            >\r\n              {theme.direction === 'rtl' ? <this.props.icons.LastPage /> : <this.props.icons.FirstPage />}\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              {theme.direction === 'rtl' ? <this.props.icons.NextPage /> : <this.props.icons.PreviousPage />}\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Typography variant=\"caption\" style={{ flex: 1, textAlign: 'center', lineHeight: 'inherit' }} >\r\n          {localization.labelDisplayedRows.replace('{from}', this.props.page * this.props.rowsPerPage + 1).replace('{to}', Math.min((this.props.page + 1) * this.props.rowsPerPage, this.props.count)).replace('{count}', this.props.count)}\r\n        </Typography>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              {theme.direction === 'rtl' ? <this.props.icons.PreviousPage /> : <this.props.icons.NextPage />}\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.lastTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleLastPageButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.lastAriaLabel}\r\n            >\r\n              {theme.direction === 'rtl' ? <this.props.icons.FirstPage /> : <this.props.icons.LastPage />}\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex', \r\n    lineHeight: '48px'\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  theme: PropTypes.any\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    firstTooltip: 'First Page',\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    lastTooltip: 'Last Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip, Hidden, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleNumberButtonClick = number => event => {\r\n    this.props.onChangePage(event, number);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage } = this.props;\r\n    \r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };\r\n    const maxPages = Math.ceil(count / rowsPerPage) - 1;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              <this.props.icons.PreviousPage/>\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Hidden smDown={true}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              aria-label={localization.firstAriaLabel}\r\n            ><Typography variant={page === 0 ? 'h6' : 'body1'}>1</Typography></IconButton></span>\r\n            {page > 2 && <span>..</span>}  \r\n            {page > 1 && <span><IconButton\r\n                onClick={this.handleNumberButtonClick(page-1)}\r\n                aria-label={localization.lastAriaLabel}\r\n              ><Typography variant='body1'>{page}</Typography></IconButton></span>}   \r\n            {page > 0 && page < maxPages &&<span> <IconButton\r\n                onClick={this.handleNumberButtonClick(page)}\r\n                aria-label={localization.lastAriaLabel}\r\n              >\r\n              <Typography variant='h6'>{page + 1}</Typography>\r\n            </IconButton></span>}    \r\n            {page < maxPages -1 && <span><IconButton\r\n                onClick={this.handleNumberButtonClick(page+1)}\r\n                aria-label={localization.lastAriaLabel}\r\n              ><Typography variant='body1'>{page + 2}</Typography></IconButton></span>}  \r\n              {page < maxPages -2 && <span>..</span>}  \r\n            {maxPages > 0 && <span> <IconButton\r\n                onClick={this.handleLastPageButtonClick}\r\n                aria-label={localization.lastAriaLabel}\r\n              >\r\n              <Typography variant={page === maxPages ? 'h6' : 'body1'}>{maxPages + 1}</Typography>\r\n            </IconButton></span>}\r\n        </Hidden>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= maxPages}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              <this.props.icons.NextPage/>\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, FormControlLabel, Icon, IconButton, InputAdornment, Menu, MenuItem, TextField, Toolbar, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport classNames from 'classnames';\r\nimport { CsvBuilder } from 'filefy';\r\nimport PropTypes, { oneOf } from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport class MTableToolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsButtonAnchorEl: null,\r\n      exportButtonAnchorEl: null\r\n    };\r\n  }\r\n\r\n  defaultExportCsv = () => {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => {\r\n        return !columnDef.hidden && columnDef.field && columnDef.export !== false;\r\n      });\r\n\r\n    const data = this.props.renderData.map(rowData =>\r\n      columns.map(columnDef => {\r\n        return this.props.getFieldValue(rowData, columnDef);\r\n      })\r\n    );\r\n\r\n    const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv');\r\n    builder\r\n      .setDelimeter(this.props.exportDelimiter)\r\n      .setColumns(columns.map(columnDef => columnDef.title))\r\n      .addRows(data)\r\n      .exportFile();\r\n  }\r\n\r\n  exportCsv = () => {\r\n    if (this.props.exportCsv) {\r\n      this.props.exportCsv(this.props.columns, this.props.data);\r\n    } else {\r\n      this.defaultExportCsv();\r\n    }\r\n    this.setState({ exportButtonAnchorEl: null });\r\n  }\r\n\r\n  renderSearch() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.search) {\r\n      return (\r\n        <TextField\r\n          className={this.props.searchFieldAlignment === 'left' && this.props.showTitle === false ? null : this.props.classes.searchField}\r\n          value={this.props.searchText}\r\n          onChange={event => this.props.onSearchChanged(event.target.value)}\r\n          color=\"inherit\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Tooltip title={localization.searchTooltip}>\r\n                  <this.props.icons.Search color=\"inherit\" fontSize=\"small\" />\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  disabled={!this.props.searchText}\r\n                  onClick={() => this.props.onSearchChanged(\"\")}\r\n                >\r\n                  <this.props.icons.ResetSearch color=\"inherit\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            style: this.props.searchFieldStyle\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderDefaultActions() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <div>\r\n        {this.props.columnsButton &&\r\n          <span>\r\n            <Tooltip title={localization.showColumnsTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ columnsButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.showColumnsAriaLabel}>\r\n\r\n                <this.props.icons.ViewColumn />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.columnsButtonAnchorEl}\r\n              open={Boolean(this.state.columnsButtonAnchorEl)}\r\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}>\r\n              <MenuItem key={\"text\"} disabled style={{ opacity: 1, fontWeight: 600, fontSize: 12 }}>\r\n                {localization.addRemoveColumns}\r\n              </MenuItem>\r\n              {\r\n                this.props.columns.map((col, index) => {\r\n                  return (\r\n                    <MenuItem key={col.tableData.id} disabled={col.removable === false}>\r\n                      <FormControlLabel\r\n                        label={col.title}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={!col.hidden}\r\n                            onChange={(event, checked) => {\r\n                              this.props.onColumnsChanged(col.tableData.id, !checked);\r\n                            }\r\n                            } />\r\n                        }\r\n                      />\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              }\r\n            </Menu>\r\n          </span>\r\n        }\r\n        {this.props.exportButton &&\r\n          <span>\r\n            <Tooltip title={localization.exportTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ exportButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.exportAriaLabel}>\r\n                <this.props.icons.Export />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.exportButtonAnchorEl}\r\n              open={Boolean(this.state.exportButtonAnchorEl)}\r\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\r\n            >\r\n              <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\r\n                {localization.exportName}\r\n              </MenuItem>\r\n            </Menu>\r\n          </span>\r\n\r\n        }\r\n        <this.props.components.Actions actions={this.props.actions && this.props.actions.filter(a => a.isFreeAction)} components={this.props.components} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelectedActions() {\r\n    return (\r\n      <React.Fragment>\r\n        <this.props.components.Actions actions={this.props.actions.filter(a => !a.isFreeAction)} data={this.props.selectedRows} components={this.props.components} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderActions() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.actions}>\r\n        <div>\r\n          {this.props.selectedRows && this.props.selectedRows.length > 0\r\n            ? this.renderSelectedActions()\r\n            : this.renderDefaultActions()\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    const title = this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.showTitle ? this.props.title : null;\r\n    return (\r\n      <Toolbar className={classNames(classes.root, { [classes.highlight]: this.props.selectedRows && this.props.selectedRows.length > 0 })}>\r\n        {title && <div className={classes.title}>\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n        </div>}\r\n        {this.props.searchFieldAlignment === 'left' && this.renderSearch()}\r\n        {this.props.toolbarButtonAlignment === 'left' && this.renderActions()}\r\n        <div className={classes.spacer} />\r\n        {this.props.searchFieldAlignment === 'right' && this.renderSearch()}\r\n        {this.props.toolbarButtonAlignment === 'right' && this.renderActions()}\r\n      </Toolbar >\r\n    );\r\n  }\r\n}\r\n\r\nMTableToolbar.defaultProps = {\r\n  actions: [],\r\n  columns: [],\r\n  columnsButton: false,\r\n  localization: {\r\n    addRemoveColumns: 'Add or remove columns',\r\n    nRowsSelected: '{0} row(s) selected',\r\n    showColumnsTitle: 'Show Columns',\r\n    showColumnsAriaLabel: 'Show Columns',\r\n    exportTitle: 'Export',\r\n    exportAriaLabel: 'Export',\r\n    exportName: 'Export as CSV',\r\n    searchTooltip: 'Search'\r\n  },\r\n  search: true,\r\n  showTitle: true,\r\n  toolbarButtonAlignment: 'right',\r\n  searchFieldAlignment: 'right',\r\n  searchText: '',\r\n  selectedRows: [],\r\n  title: 'No Title!'\r\n};\r\n\r\nMTableToolbar.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.array,\r\n  columnsButton: PropTypes.bool,\r\n  components: PropTypes.object.isRequired,\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  localization: PropTypes.object.isRequired,\r\n  onColumnsChanged: PropTypes.func.isRequired,\r\n  onSearchChanged: PropTypes.func.isRequired,\r\n  search: PropTypes.bool.isRequired,\r\n  searchFieldStyle: PropTypes.object,\r\n  searchText: PropTypes.string.isRequired,\r\n  selectedRows: PropTypes.array,\r\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  showTitle: PropTypes.bool.isRequired,\r\n  toolbarButtonAlignment: PropTypes.string.isRequired,\r\n  searchFieldAlignment: PropTypes.string.isRequired,\r\n  renderData: PropTypes.array,\r\n  data: PropTypes.array,\r\n  exportButton: PropTypes.bool,\r\n  exportDelimiter: PropTypes.string,\r\n  exportFileName: PropTypes.string,\r\n  exportCsv: PropTypes.func,\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport const styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark\r\n      },\r\n  spacer: {\r\n    flex: '1 1 10%'\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto'\r\n  },\r\n  searchField: {\r\n    paddingLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableToolbar);\r\n","import formatDate from 'date-fns/format';\r\nimport { byString } from './';\r\n\r\nexport default class DataManager {\r\n  applyFilters = false;\r\n  applySearch = false;\r\n  currentPage = 0;\r\n  detailPanelType = 'multiple'\r\n  filterSelectionChecked = false;\r\n  lastDetailPanelRow = undefined;\r\n  lastEditingRow = undefined;\r\n  orderBy = -1;\r\n  orderDirection = '';\r\n  pageSize = 5;\r\n  paging = true;\r\n  parentFunc = null;\r\n  searchText = '';\r\n  selectedCount = 0;\r\n  treefiedDataLength = 0;\r\n  treeDataMaxLevel = 0;\r\n  defaultExpanded = false;\r\n\r\n  data = [];\r\n  columns = [];\r\n\r\n  filteredData = [];\r\n  searchedData = [];\r\n  groupedData = [];\r\n  treefiedData = [];\r\n  sortedData = [];\r\n  pagedData = [];\r\n  renderData = [];\r\n\r\n  filtered = false;\r\n  searched = false;\r\n  grouped = false;\r\n  treefied = false;\r\n  sorted = false;\r\n  paged = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setData(data) {\r\n    this.selectedCount = 0;\r\n\r\n    this.data = data.map((row, index) => {\r\n      row.tableData = { ...row.tableData, id: index };\r\n      if (row.tableData.checked) {\r\n        this.selectedCount++;\r\n      }\r\n      return row;\r\n    });\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  setColumns(columns) {\r\n    this.columns = columns.map((columnDef, index) => {\r\n      columnDef.tableData = {\r\n        filterValue: columnDef.defaultFilter,\r\n        groupOrder: columnDef.defaultGroupOrder,\r\n        groupSort: columnDef.defaultGroupSort || 'asc',\r\n        ...columnDef.tableData,\r\n        id: index\r\n      };\r\n      return columnDef;\r\n    });\r\n  }\r\n\r\n  setDefaultExpanded(expanded) {\r\n    this.defaultExpanded = expanded;\r\n  }\r\n\r\n  changeApplySearch(applySearch) {\r\n    this.applySearch = applySearch;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeApplyFilters(applyFilters) {\r\n    this.applyFilters = applyFilters;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changePaging(paging) {\r\n    this.paging = paging;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeCurrentPage(currentPage) {\r\n    this.currentPage = currentPage;\r\n    this.paged = false;\r\n  }\r\n\r\n  changePageSize(pageSize) {\r\n    this.pageSize = pageSize;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeParentFunc(parentFunc) {\r\n    this.parentFunc = parentFunc;\r\n  }\r\n\r\n  changeFilterValue(columnId, value) {\r\n    this.columns[columnId].tableData.filterValue = value;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeFilterSelectionChecked(checked) {\r\n    this.filterSelectionChecked = checked;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeRowSelected(checked, path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.checked = checked;\r\n    this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n\r\n    const checkChildRows = rowData => {\r\n      if (rowData.tableData.childRows) {\r\n        rowData.tableData.childRows.forEach(childRow => {\r\n          childRow.tableData.checked = checked;\r\n          this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n          checkChildRows(childRow);\r\n        });\r\n      }\r\n    };\r\n\r\n    checkChildRows(rowData);\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeDetailPanelVisibility(path, render) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n\r\n    if ((rowData.tableData.showDetailPanel || '').toString() === render.toString()) {\r\n      rowData.tableData.showDetailPanel = undefined;\r\n    }\r\n    else {\r\n      rowData.tableData.showDetailPanel = render;\r\n    }\r\n\r\n    if (this.detailPanelType === 'single' && this.lastDetailPanelRow && this.lastDetailPanelRow != rowData) {\r\n      this.lastDetailPanelRow.tableData.showDetailPanel = undefined;\r\n    }\r\n\r\n    this.lastDetailPanelRow = rowData;\r\n  }\r\n\r\n  changeGroupExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.isExpanded = !rowData.isExpanded;\r\n  }\r\n\r\n  changeSearchText(searchText) {\r\n    this.searchText = searchText;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeRowEditing(rowData, mode) {\r\n    if (rowData) {\r\n      rowData.tableData.editing = mode;\r\n\r\n      if (this.lastEditingRow && this.lastEditingRow != rowData) {\r\n        this.lastEditingRow.tableData.editing = undefined;\r\n      }\r\n\r\n      if (mode) {\r\n        this.lastEditingRow = rowData;\r\n      }\r\n      else {\r\n        this.lastEditingRow = undefined;\r\n      }\r\n    }\r\n    else if (this.lastEditingRow) {\r\n      this.lastEditingRow.tableData.editing = undefined;\r\n      this.lastEditingRow = undefined;\r\n    }\r\n  }\r\n\r\n  changeAllSelected(checked) {\r\n    let selectedCount = 0;\r\n    if (this.isDataType(\"group\")) {\r\n      const setCheck = (data) => {\r\n        data.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            setCheck(element.groups);\r\n          }\r\n          else {\r\n            element.data.forEach(d => {\r\n              d.tableData.checked = checked;\r\n              selectedCount++;\r\n            });\r\n          }\r\n        });\r\n      };\r\n\r\n      setCheck(this.groupedData);\r\n    }\r\n    else {\r\n      this.searchedData.map(row => {\r\n        row.tableData.checked = checked;\r\n        return row;\r\n      });\r\n      selectedCount = this.searchedData.length;\r\n    }\r\n\r\n    this.selectedCount = checked ? selectedCount : 0;\r\n  }\r\n\r\n  changeOrder(orderBy, orderDirection) {\r\n    this.orderBy = orderBy;\r\n    this.orderDirection = orderDirection;\r\n    this.currentPage = 0;\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeGroupOrder(columnId) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n\r\n    if (column.tableData.groupSort === 'asc') {\r\n      column.tableData.groupSort = 'desc';\r\n    }\r\n    else {\r\n      column.tableData.groupSort = 'asc';\r\n    }\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeColumnHidden(columnId, hidden) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n    column.hidden = hidden;\r\n  }\r\n\r\n  changeTreeExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.isTreeExpanded = !rowData.tableData.isTreeExpanded;\r\n  }\r\n\r\n  changeDetailPanelType(type) {\r\n    this.detailPanelType = type;\r\n  }\r\n\r\n  changeByDrag(result) {\r\n    let start = 0;\r\n\r\n    let groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n\r\n    if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"groups\") {\r\n      start = Math.min(result.destination.index, result.source.index);\r\n      const end = Math.max(result.destination.index, result.source.index);\r\n\r\n      groups = groups.slice(start, end + 1);\r\n\r\n      if (result.destination.index < result.source.index) {\r\n        // Take last and add as first\r\n        const last = groups.pop();\r\n        groups.unshift(last);\r\n      }\r\n      else {\r\n        // Take first and add as last\r\n        const last = groups.shift();\r\n        groups.push(last);\r\n      }\r\n    }\r\n    else if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"headers\") {\r\n      const newGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      groups.splice(result.destination.index, 0, newGroup);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"groups\") {\r\n      const removeGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      removeGroup.tableData.groupOrder = undefined;\r\n      groups.splice(result.source.index, 1);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"headers\") {\r\n      // Column reordering\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < groups.length; i++) {\r\n      groups[i].tableData.groupOrder = start + i;\r\n    }\r\n\r\n    this.sorted = this.grouped = false;\r\n  }\r\n\r\n  findDataByPath = (renderData, path) => {\r\n    if (this.isDataType(\"tree\")) {\r\n      const node = path.reduce((result, current) => {\r\n        return result.tableData.childRows[current];\r\n      }, { tableData: { childRows: renderData } });\r\n\r\n      return node;\r\n    }\r\n    else {\r\n      const data = { groups: renderData };\r\n\r\n      const node = path.reduce((result, current) => {\r\n        if (result.groups.length > 0) {\r\n          return result.groups[current];\r\n        }\r\n        else if (result.data) {\r\n          return result.data[current];\r\n        }\r\n        else {\r\n          return undefined;\r\n        }\r\n      }, data);\r\n      return node;\r\n    }\r\n  }\r\n\r\n  findGroupByGroupPath(renderData, path) {\r\n    const data = { groups: renderData };\r\n\r\n    const node = path.reduce((result, current) => {\r\n      if (!result) {\r\n        return undefined;\r\n      }\r\n\r\n      const group = result.groups.find(a => a.value === current);\r\n      return group;\r\n    }, data);\r\n    return node;\r\n  }\r\n\r\n  getFieldValue = (rowData, columnDef) => {\r\n    let value = (typeof rowData[columnDef.field] !== 'undefined' ? rowData[columnDef.field] : byString(rowData, columnDef.field));\r\n    if (columnDef.lookup) {\r\n      value = columnDef.lookup[value];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  isDataType(type) {\r\n    let dataType = \"normal\";\r\n\r\n    if (this.parentFunc) {\r\n      dataType = \"tree\";\r\n    }\r\n    else if (this.columns.find(a => a.tableData.groupOrder > -1)) {\r\n      dataType = \"group\";\r\n    }\r\n\r\n    return type === dataType;\r\n  }\r\n\r\n  sort(a, b, type) {\r\n    if (type === 'numeric') {\r\n      return a - b;\r\n    } else {\r\n      if (a !== b) { // to find nulls\r\n        if (!a) return -1;\r\n        if (!b) return 1;\r\n      }\r\n      return a < b ? -1 : a > b ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  sortList(list) {\r\n    const columnDef = this.columns.find(_ => _.tableData.id === this.orderBy);\r\n    let result = list;\r\n\r\n    if (columnDef.customSort) {\r\n      if (this.orderDirection === 'desc') {\r\n        result = list.sort((a, b) => columnDef.customSort(b, a, 'row'));\r\n      }\r\n      else {\r\n        result = list.sort((a, b) => columnDef.customSort(a, b, 'row'));\r\n      }\r\n    }\r\n    else {\r\n      result = list.sort(\r\n        this.orderDirection === 'desc'\r\n          ? (a, b) => this.sort(this.getFieldValue(b, columnDef), this.getFieldValue(a, columnDef), columnDef.type)\r\n          : (a, b) => this.sort(this.getFieldValue(a, columnDef), this.getFieldValue(b, columnDef), columnDef.type)\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getRenderState = () => {\r\n    if (this.filtered === false) {\r\n      this.filterData();\r\n    }\r\n\r\n    if (this.searched === false) {\r\n      this.searchData();\r\n    }\r\n\r\n    if (this.grouped === false && this.isDataType(\"group\")) {\r\n      this.groupData();\r\n    }\r\n\r\n    if (this.treefied === false && this.isDataType(\"tree\")) {\r\n      this.treefyData();\r\n    }\r\n\r\n    if (this.sorted === false) {\r\n      this.sortData();\r\n    }\r\n\r\n    if (this.paged === false) {\r\n      this.pageData();\r\n    }\r\n\r\n    return {\r\n      columns: this.columns,\r\n      currentPage: this.currentPage,\r\n      data: this.sortedData,\r\n      lastEditingRow: this.lastEditingRow,\r\n      orderBy: this.orderBy,\r\n      orderDirection: this.orderDirection,\r\n      originalData: this.data,\r\n      pageSize: this.pageSize,\r\n      renderData: this.pagedData,\r\n      searchText: this.searchText,\r\n      selectedCount: this.selectedCount,\r\n      treefiedDataLength: this.treefiedDataLength,\r\n      treeDataMaxLevel: this.treeDataMaxLevel\r\n    };\r\n  }\r\n\r\n  // =====================================================================================================\r\n  // DATA MANUPULATIONS\r\n  // =====================================================================================================\r\n\r\n  filterData = () => {\r\n    this.searched = this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.filteredData = [...this.data];\r\n\r\n    // if (this.filterSelectionChecked) {\r\n    //   this.filterData = this.filterData.filter(row => {\r\n    //     return row.tableData.checked;\r\n    //   });\r\n    // }\r\n\r\n    if (this.applyFilters) {\r\n      this.columns.filter(columnDef => columnDef.tableData.filterValue).forEach(columnDef => {\r\n        const { lookup, type, tableData } = columnDef;\r\n        if (columnDef.customFilterAndSearch) {\r\n          this.filteredData = this.filteredData.filter(row => !!columnDef.customFilterAndSearch(tableData.filterValue, row, columnDef));\r\n        }\r\n        else {\r\n          if (lookup) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              return !tableData.filterValue ||\r\n                tableData.filterValue.length === 0 ||\r\n                tableData.filterValue.indexOf(value !== undefined && value.toString()) > -1;\r\n            });\r\n          } else if (type === 'numeric') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              return (value + \"\") === tableData.filterValue;\r\n            });\r\n          } else if (type === 'boolean' && tableData.filterValue) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              return (value && tableData.filterValue === 'checked') ||\r\n                (!value && tableData.filterValue === 'unchecked');\r\n            });\r\n          } else if (['date', 'datetime'].includes(type)) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const value = this.getFieldValue(row, columnDef);\r\n\r\n              const currentDate = value ? new Date(value) : null;\r\n\r\n              if (currentDate && currentDate.toString() !== 'Invalid Date') {\r\n                const selectedDate = tableData.filterValue;\r\n                let currentDateToCompare = '';\r\n                let selectedDateToCompare = '';\r\n\r\n                if (type === 'date') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy');\r\n                } else if (type === 'datetime') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy - HH:mm');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy - HH:mm');\r\n                }\r\n\r\n                return currentDateToCompare === selectedDateToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else if (type === 'time') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              const currentHour = value || null;\r\n\r\n              if (currentHour) {\r\n                const selectedHour = tableData.filterValue;\r\n                const currentHourToCompare = formatDate(selectedHour, 'HH:mm');\r\n\r\n                return currentHour === currentHourToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              return value && value.toString().toUpperCase().includes(tableData.filterValue.toUpperCase());\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.filtered = true;\r\n  }\r\n\r\n  searchData = () => {\r\n    this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.searchedData = [...this.filteredData];\r\n\r\n    if (this.searchText && this.applySearch) {\r\n      this.searchedData = this.searchedData.filter(row => {\r\n        return this.columns\r\n          .filter(columnDef => { return columnDef.searchable === undefined ? !columnDef.hidden : columnDef.searchable })\r\n          .some(columnDef => {\r\n            if (columnDef.customFilterAndSearch) {\r\n              return !!columnDef.customFilterAndSearch(this.searchText, row, columnDef);\r\n            }\r\n            else if (columnDef.field) {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              if (value) {\r\n                return value.toString().toUpperCase().includes(this.searchText.toUpperCase());\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    this.searched = true;\r\n  }\r\n\r\n  groupData() {\r\n    this.sorted = this.paged = false;\r\n\r\n    const tmpData = [...this.searchedData];\r\n\r\n    const groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    const subData = tmpData.reduce((result, current) => {\r\n\r\n      let object = result;\r\n      object = groups.reduce((o, colDef) => {\r\n        const value = current[colDef.field] || byString(current, colDef.field);\r\n        let group = o.groups.find(g => g.value === value);\r\n        if (!group) {\r\n          const path = [...(o.path || []), value];\r\n          let oldGroup = this.findGroupByGroupPath(this.groupedData, path) || {};\r\n\r\n          group = { value, groups: [], data: [], isExpanded: oldGroup.isExpanded, path: path };\r\n          o.groups.push(group);\r\n        }\r\n        return group;\r\n      }, object);\r\n\r\n      object.data.push(current);\r\n\r\n      return result;\r\n    }, { groups: [] });\r\n\r\n    this.groupedData = subData.groups;\r\n    this.grouped = true;\r\n  }\r\n\r\n  treefyData() {\r\n    this.sorted = this.paged = false;\r\n    this.data.forEach(a => a.tableData.childRows = null);\r\n    this.treefiedData = [];\r\n    this.treefiedDataLength = 0;\r\n    this.treeDataMaxLevel = 0;\r\n\r\n    const addRow = (rowData) => {\r\n      let parent = this.parentFunc(rowData, this.data);\r\n\r\n      if (parent) {\r\n        parent.tableData.childRows = parent.tableData.childRows || [];\r\n        let oldParent = parent.tableData.path && this.findDataByPath(this.treefiedData, parent.tableData.path);\r\n        let isDefined = oldParent && oldParent.tableData.isTreeExpanded !== undefined;\r\n\r\n        parent.tableData.isTreeExpanded = isDefined ? oldParent.tableData.isTreeExpanded : (this.defaultExpanded ? true : false);\r\n        if (!parent.tableData.childRows.includes(rowData)) {\r\n          parent.tableData.childRows.push(rowData);\r\n          this.treefiedDataLength++;\r\n        }\r\n\r\n        addRow(parent);\r\n\r\n        rowData.tableData.path = [...parent.tableData.path, parent.tableData.childRows.length - 1];\r\n        this.treeDataMaxLevel = Math.max(this.treeDataMaxLevel, rowData.tableData.path.length);\r\n      }\r\n      else {\r\n        if (!this.treefiedData.includes(rowData)) {\r\n          this.treefiedData.push(rowData);\r\n          this.treefiedDataLength++;\r\n          rowData.tableData.path = [this.treefiedData.length - 1];\r\n        }\r\n      }\r\n    };\r\n\r\n    this.searchedData.forEach(rowData => {\r\n      addRow(rowData);\r\n    });\r\n\r\n    this.treefied = true;\r\n  }\r\n\r\n  sortData() {\r\n    this.paged = false;\r\n\r\n    if (this.isDataType(\"group\")) {\r\n      this.sortedData = [...this.groupedData];\r\n\r\n      const groups = this.columns\r\n        .filter(col => col.tableData.groupOrder > -1)\r\n        .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n      const sortGroups = (list, columnDef) => {\r\n        if (columnDef.customSort) {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => columnDef.customSort(b.value, a.value, 'group')\r\n              : (a, b) => columnDef.customSort(a.value, b.value, 'group')\r\n          );\r\n        }\r\n        else {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => this.sort(b.value, a.value, columnDef.type)\r\n              : (a, b) => this.sort(a.value, b.value, columnDef.type)\r\n          );\r\n        }\r\n      };\r\n\r\n      this.sortedData = sortGroups(this.sortedData, groups[0]);\r\n\r\n      const sortGroupData = (list, level) => {\r\n        list.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            const column = groups[level];\r\n            element.groups = sortGroups(element.groups, column);\r\n            sortGroupData(element.groups, level + 1);\r\n          }\r\n          else {\r\n            if (this.orderBy >= 0 && this.orderDirection) {\r\n              element.data = this.sortList(element.data);\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      sortGroupData(this.sortedData, 1);\r\n    }\r\n    else if (this.isDataType(\"tree\")) {\r\n      this.sortedData = [...this.treefiedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n\r\n        const sortTree = (list) => {\r\n          list.forEach(item => {\r\n            if (item.tableData.childRows) {\r\n              item.tableData.childRows = this.sortList(item.tableData.childRows);\r\n              sortTree(item.tableData.childRows);\r\n            }\r\n          });\r\n        };\r\n\r\n        sortTree(this.sortedData);\r\n      }\r\n    }\r\n    else if (this.isDataType(\"normal\")) {\r\n      this.sortedData = [...this.searchedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n      }\r\n    }\r\n\r\n    this.sorted = true;\r\n  }\r\n\r\n  pageData() {\r\n    this.pagedData = [...this.sortedData];\r\n\r\n    if (this.paging) {\r\n      const startIndex = this.currentPage * this.pageSize;\r\n      const endIndex = startIndex + this.pageSize;\r\n\r\n      this.pagedData = this.pagedData.slice(startIndex, endIndex);\r\n    }\r\n\r\n    this.paged = true;\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\nimport { Icon, Paper, Table, TableFooter, TablePagination, TableRow, CircularProgress, LinearProgress, withStyles } from '@material-ui/core';\r\nimport DoubleScrollbar from \"react-double-scrollbar\";\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport MTableAction from './m-table-action';\r\nimport MTableActions from './m-table-actions';\r\nimport MTableBody from './m-table-body';\r\nimport MTableBodyRow from './m-table-body-row';\r\nimport MTableGroupbar from './m-table-groupbar';\r\nimport MTableGroupRow from './m-table-group-row';\r\nimport MTableCell from './m-table-cell';\r\nimport MTableEditRow from './m-table-edit-row';\r\nimport MTableEditField from './m-table-edit-field';\r\nimport MTableFilterRow from './m-table-filter-row';\r\nimport MTableHeader from './m-table-header';\r\nimport MTablePagination from './m-table-pagination';\r\nimport MTableSteppedPagination from './m-table-stepped-pagination';\r\nimport MTableToolbar from './m-table-toolbar';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport DataManager from './utils/data-manager';\r\nimport { debounce } from 'debounce';\r\n\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MaterialTable extends React.Component {\r\n  dataManager = new DataManager();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const calculatedProps = this.getProps(props);\r\n    this.setDataManagerFields(calculatedProps, true);\r\n\r\n    this.state = {\r\n      data: [],\r\n      ...this.dataManager.getRenderState(),\r\n      query: {\r\n        filters: [],\r\n        orderBy: null,\r\n        orderDirection: 'asc',\r\n        page: 0,\r\n        pageSize: calculatedProps.options.pageSize,\r\n        search: '',\r\n\r\n        totalCount: 0\r\n      },\r\n      showAddRow: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(this.dataManager.getRenderState(), () => {\r\n      if (this.isRemoteData()) {\r\n        this.onQueryChange(this.state.query);\r\n      }\r\n    });\r\n  }\r\n\r\n  setDataManagerFields(props, isInit) {\r\n    let defaultSortColumnIndex = -1;\r\n    let defaultSortDirection = '';\r\n    if (props) {\r\n      defaultSortColumnIndex = props.columns.findIndex(a => a.defaultSort);\r\n      defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : '';\r\n    }\r\n\r\n    this.dataManager.setColumns(props.columns);\r\n    this.dataManager.setDefaultExpanded(props.options.defaultExpanded);\r\n\r\n    if (this.isRemoteData()) {\r\n      this.dataManager.changeApplySearch(false);\r\n      this.dataManager.changeApplyFilters(false);\r\n    }\r\n    else {\r\n      this.dataManager.changeApplySearch(true);\r\n      this.dataManager.changeApplyFilters(true);\r\n      this.dataManager.setData(props.data);\r\n    }\r\n\r\n    isInit && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);\r\n    isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);\r\n    isInit && this.dataManager.changePageSize(props.options.pageSize);\r\n    isInit && this.dataManager.changePaging(props.options.paging);\r\n    isInit && this.dataManager.changeParentFunc(props.parentChildData);\r\n    this.dataManager.changeDetailPanelType(props.options.detailPanelType);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const props = this.getProps(nextProps);\r\n    this.setDataManagerFields(props);\r\n    this.setState(this.dataManager.getRenderState());\r\n  }\r\n\r\n  getProps(props) {\r\n    const calculatedProps = { ...(props || this.props) };\r\n\r\n    const localization = calculatedProps.localization.body;\r\n\r\n    calculatedProps.actions = [...(calculatedProps.actions || [])];\r\n    if (calculatedProps.editable) {\r\n      if (calculatedProps.editable.onRowAdd) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Add,\r\n          tooltip: localization.addTooltip,\r\n          isFreeAction: true,\r\n          onClick: () => {\r\n            this.dataManager.changeRowEditing();\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: !this.state.showAddRow\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowUpdate) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Edit,\r\n          tooltip: localization.editTooltip,\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"update\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowDelete) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Delete,\r\n          tooltip: localization.deleteTooltip,\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"delete\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    calculatedProps.components = { ...MaterialTable.defaultProps.components, ...calculatedProps.components };\r\n    calculatedProps.icons = { ...MaterialTable.defaultProps.icons, ...calculatedProps.icons };\r\n    calculatedProps.options = { ...MaterialTable.defaultProps.options, ...calculatedProps.options };\r\n\r\n    return calculatedProps;\r\n  }\r\n\r\n  onSelectionChange = () => {\r\n    if (this.props.onSelectionChange) {\r\n      const selectedRows = [];\r\n\r\n      const findSelecteds = list => {\r\n        list.forEach(row => {\r\n          if (row.tableData.checked) {\r\n            selectedRows.push(row);\r\n          }\r\n\r\n          row.tableData.childRows && findSelecteds(row.tableData.childRows);\r\n        });\r\n      };\r\n\r\n      findSelecteds(this.state.data);\r\n      this.props.onSelectionChange(selectedRows);\r\n    }\r\n  }\r\n\r\n  onChangePage = (...args) => {\r\n    this.props.onChangePage && this.props.onChangePage(...args);\r\n  }\r\n\r\n  onChangeRowsPerPage = (...args) => {\r\n    this.props.onChangeRowsPerPage && this.props.onChangeRowsPerPage(...args);\r\n  }\r\n\r\n  onOrderChange = (...args) => {\r\n    this.props.onOrderChange && this.props.onOrderChange(...args);\r\n  }\r\n\r\n  isRemoteData = () => !Array.isArray(this.props.data)\r\n\r\n  onQueryChange = (query, callback) => {\r\n    query = { ...this.state.query, ...query };\r\n\r\n    this.setState({ isLoading: true }, () => {\r\n      this.props.data(query).then((result) => {\r\n        query.totalCount = result.totalCount;\r\n        query.page = result.page;\r\n        this.dataManager.setData(result.data);\r\n        this.setState({\r\n          isLoading: false,\r\n          ...this.dataManager.getRenderState(),\r\n          query\r\n        }, () => {\r\n          callback && callback();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearchChange = debounce(() => {\r\n    this.dataManager.changeSearchText(this.state.searchText);\r\n\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.page = 0;\r\n      query.search = this.state.searchText;\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  onFilterChange = debounce(() => {\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.filters = this.state.columns\r\n        .filter(a => a.tableData.filterValue)\r\n        .map(a => ({\r\n          column: a,\r\n          operator: \"=\",\r\n          value: a.tableData.filterValue\r\n        }));\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  renderFooter() {\r\n    const props = this.getProps();\r\n    if (props.options.paging) {\r\n      const localization = { ...MaterialTable.defaultProps.localization.pagination, ...this.props.localization.pagination };\r\n      return (\r\n        <Table>\r\n          <TableFooter style={{ display: 'grid' }}>\r\n            <TableRow>\r\n              <props.components.Pagination\r\n                classes={{\r\n                  root: props.classes.paginationRoot,\r\n                  toolbar: props.classes.paginationToolbar,\r\n                  caption: props.classes.paginationCaption,\r\n                  selectRoot: props.classes.paginationSelectRoot,\r\n                }}\r\n                style={{ float: props.theme.direction === \"rtl\" ? \"\" : \"right\", overflowX: 'auto' }}\r\n                colSpan={3}\r\n                count={this.isRemoteData() ? this.state.query.totalCount : this.state.data.length}\r\n                icons={props.icons}\r\n                rowsPerPage={this.state.pageSize}\r\n                rowsPerPageOptions={props.options.pageSizeOptions}\r\n                SelectProps={{\r\n                  renderValue: value => <div style={{ padding: '0px 5px' }}>{value + ' ' + localization.labelRowsSelect + ' '}</div>\r\n                }}\r\n                page={this.isRemoteData() ? this.state.query.page : this.state.currentPage}\r\n                onChangePage={(event, page) => {\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.page = page;\r\n                    this.onQueryChange(query, () => this.onChangePage(page));\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(page);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangePage(page);\r\n                    });\r\n                  }\r\n                }}\r\n                onChangeRowsPerPage={(event) => {\r\n                  this.dataManager.changePageSize(event.target.value);\r\n\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.pageSize = event.target.value;\r\n                    query.page = 0;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(0);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangeRowsPerPage(event.target.value);\r\n                    });\r\n                  }\r\n                }}\r\n                ActionsComponent={(subProps) => props.options.paginationType === 'normal' ?\r\n                  <MTablePagination {...subProps} icons={props.icons} localization={localization} /> :\r\n                  <MTableSteppedPagination {...subProps} icons={props.icons} localization={localization} />}\r\n                labelDisplayedRows={(row) => localization.labelDisplayedRows.replace('{from}', row.from).replace('{to}', row.to).replace('{count}', row.count)}\r\n                labelRowsPerPage={localization.labelRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.getProps();\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={result => {\r\n        this.dataManager.changeByDrag(result);\r\n        this.setState(this.dataManager.getRenderState());\r\n      }}>\r\n        <props.components.Container style={{ position: 'relative' }}>\r\n          {props.options.toolbar &&\r\n            <props.components.Toolbar\r\n              actions={props.actions}\r\n              components={props.components}\r\n              selectedRows={this.state.selectedCount > 0 ? this.state.originalData.filter(a => { return a.tableData.checked }) : []}\r\n              columns={this.state.columns}\r\n              columnsButton={props.options.columnsButton}\r\n              icons={props.icons}\r\n              exportButton={props.options.exportButton}\r\n              exportDelimiter={props.options.exportDelimiter}\r\n              exportFileName={props.options.exportFileName}\r\n              exportCsv={props.options.exportCsv}\r\n              getFieldValue={this.dataManager.getFieldValue}\r\n              data={this.state.data}\r\n              renderData={this.state.renderData}\r\n              search={props.options.search}\r\n              showTitle={props.options.showTitle}\r\n              toolbarButtonAlignment={props.options.toolbarButtonAlignment}\r\n              searchFieldAlignment={props.options.searchFieldAlignment}\r\n              searchText={this.state.searchText}\r\n              searchFieldStyle={props.options.searchFieldStyle}\r\n              title={props.title}\r\n              onSearchChanged={searchText => this.setState({ searchText }, this.onSearchChange)}\r\n              onColumnsChanged={(columnId, hidden) => {\r\n                this.dataManager.changeColumnHidden(columnId, hidden);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              localization={{ ...MaterialTable.defaultProps.localization.toolbar, ...this.props.localization.toolbar }}\r\n            />\r\n          }\r\n          {props.options.grouping &&\r\n            <props.components.Groupbar\r\n              icons={props.icons}\r\n              localization={{ ...MaterialTable.defaultProps.localization.grouping, ...props.localization.grouping }}\r\n              groupColumns={this.state.columns\r\n                .filter(col => col.tableData.groupOrder > -1)\r\n                .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder)\r\n              }\r\n              onSortChanged={(groupedColumn) => {\r\n                this.dataManager.changeGroupOrder(groupedColumn.tableData.id);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              onGroupRemoved={(groupedColumn, index) => {\r\n                const result = {\r\n                  combine: null,\r\n                  destination: { droppableId: \"headers\", index: 0 },\r\n                  draggableId: groupedColumn.tableData.id,\r\n                  mode: \"FLUID\",\r\n                  reason: \"DROP\",\r\n                  source: { index, droppableId: \"groups\" },\r\n                  type: \"DEFAULT\"\r\n                };\r\n                this.dataManager.changeByDrag(result);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n            />\r\n          }\r\n          <ScrollBar double={props.options.doubleHorizontalScroll}>\r\n            <Droppable droppableId=\"headers\" direction=\"horizontal\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                //style={this.getListStyle(snapshot.isDraggingOver)}\r\n                >\r\n                  <div style={{ maxHeight: props.options.maxBodyHeight, overflowY: 'auto' }}>\r\n                    <Table>\r\n                      {props.options.header &&\r\n                        <props.components.Header\r\n                          localization={{ ...MaterialTable.defaultProps.localization.header, ...this.props.localization.header }}\r\n                          columns={this.state.columns}\r\n                          hasSelection={props.options.selection}\r\n                          headerStyle={props.options.headerStyle}\r\n                          selectedCount={this.state.selectedCount}\r\n                          dataCount={props.parentChildData ? this.state.treefiedDataLength : this.state.data.length}\r\n                          hasDetailPanel={!!props.detailPanel}\r\n                          showActionsColumn={props.actions && props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0}\r\n                          showSelectAllCheckbox={props.options.showSelectAllCheckbox}\r\n                          orderBy={this.state.orderBy}\r\n                          orderDirection={this.state.orderDirection}\r\n                          onAllSelected={(checked) => {\r\n                            this.dataManager.changeAllSelected(checked);\r\n                            this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                          }}\r\n                          onOrderChange={(orderBy, orderDirection) => {\r\n                            this.dataManager.changeOrder(orderBy, orderDirection);\r\n\r\n                            if (this.isRemoteData()) {\r\n                              const query = { ...this.state.query };\r\n                              query.page = 0;\r\n                              query.orderBy = this.state.columns.find(a => a.tableData.id === orderBy);\r\n                              query.orderDirection = orderDirection;\r\n                              this.onQueryChange(query);\r\n                            }\r\n                            else {\r\n                              this.setState(this.dataManager.getRenderState(), () => {\r\n                                this.onOrderChange(orderBy, orderDirection);\r\n                              });\r\n                            }\r\n                          }}\r\n                          actionsHeaderIndex={props.options.actionsColumnIndex}\r\n                          sorting={props.options.sorting}\r\n                          grouping={props.options.grouping}\r\n                          isTreeData={this.props.parentChildData !== undefined}\r\n                        />\r\n                      }\r\n\r\n\r\n                      <props.components.Body\r\n                        actions={props.actions}\r\n                        components={props.components}\r\n                        icons={props.icons}\r\n                        renderData={this.state.renderData}\r\n                        currentPage={this.state.currentPage}\r\n                        initialFormData={props.initialFormData}\r\n                        pageSize={this.state.pageSize}\r\n                        columns={this.state.columns}\r\n                        detailPanel={props.detailPanel}\r\n                        options={props.options}\r\n                        getFieldValue={this.dataManager.getFieldValue}\r\n                        isTreeData={this.props.parentChildData !== undefined}\r\n                        onFilterChanged={(columnId, value) => {\r\n                          this.dataManager.changeFilterValue(columnId, value);\r\n                          this.setState({}, () => this.onFilterChange());\r\n                        }}\r\n                        onFilterSelectionChanged={(event) => {\r\n                          this.dataManager.changeFilterSelectionChecked(event.target.checked);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onRowSelected={(event, path) => {\r\n                          this.dataManager.changeRowSelected(event.target.checked, path);\r\n                          this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                        }}\r\n                        onToggleDetailPanel={(path, render) => {\r\n                          this.dataManager.changeDetailPanelVisibility(path, render);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onGroupExpandChanged={(path) => {                          \r\n                          this.dataManager.changeGroupExpand(path);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onTreeExpandChanged={(path, data) => {                          \r\n                          this.dataManager.changeTreeExpand(path);\r\n                          this.setState(this.dataManager.getRenderState(), () => {\r\n                            this.props.onTreeExpandChange && this.props.onTreeExpandChange(data, data.tableData.isTreeExpanded);\r\n                          });\r\n                        }}\r\n                        onEditingCanceled={(mode, rowData) => {\r\n                          if (mode === \"add\") {\r\n                            this.setState({ showAddRow: false });\r\n                          }\r\n                          else if (mode === \"update\" || mode === \"delete\") {\r\n                            this.dataManager.changeRowEditing(rowData);\r\n                            this.setState(this.dataManager.getRenderState());\r\n                          }\r\n                        }}\r\n                        onEditingApproved={(mode, newData, oldData) => {\r\n                          if (mode === \"add\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowAdd(newData)\r\n                                .then(result => {\r\n                                  this.setState({ isLoading: false, showAddRow: false }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n                          }\r\n                          else if (mode === \"update\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowUpdate(newData, oldData)\r\n                                .then(result => {\r\n                                  this.dataManager.changeRowEditing(oldData);\r\n                                  this.setState({\r\n                                    isLoading: false,\r\n                                    ...this.dataManager.getRenderState()\r\n                                  }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n\r\n                          }\r\n                          else if (mode === \"delete\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowDelete(oldData)\r\n                                .then(result => {\r\n                                  this.dataManager.changeRowEditing(oldData);\r\n                                  this.setState({\r\n                                    isLoading: false,\r\n                                    ...this.dataManager.getRenderState()\r\n                                  }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n                          }\r\n                        }}\r\n                        localization={{ ...MaterialTable.defaultProps.localization.body, ...this.props.localization.body }}\r\n                        onRowClick={this.props.onRowClick}\r\n                        showAddRow={this.state.showAddRow}\r\n                        hasAnyEditingRow={!!(this.state.lastEditingRow || this.state.showAddRow)}\r\n                        hasDetailPanel={!!props.detailPanel}\r\n                        treeDataMaxLevel={this.state.treeDataMaxLevel}\r\n                      />\r\n                    </Table>\r\n                  </div>\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n          </ScrollBar>\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === \"linear\" &&\r\n            <div style={{ position: 'relative', width: '100%' }}>\r\n              <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n                <LinearProgress />\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.renderFooter()}\r\n\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === 'overlay' &&\r\n            <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n              <div style={{ display: 'table', width: '100%', height: '100%', backgroundColor: '#FFFFFFAA' }}>\r\n                <div style={{ display: 'table-cell', width: '100%', height: '100%', verticalAlign: 'middle', textAlign: 'center' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </props.components.Container>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst ScrollBar = ({ double, children }) => {\r\n  if (double) {\r\n    return (\r\n      <DoubleScrollbar>\r\n        {children}\r\n      </DoubleScrollbar>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div style={{ overflowX: 'auto' }}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nMaterialTable.defaultProps = {\r\n  actions: [],\r\n  classes: {},\r\n  columns: [],\r\n  components: {\r\n    Action: MTableAction,\r\n    Actions: MTableActions,\r\n    Body: MTableBody,\r\n    Cell: MTableCell,\r\n    Container: Paper,\r\n    EditField: MTableEditField,\r\n    EditRow: MTableEditRow,\r\n    FilterRow: MTableFilterRow,\r\n    Groupbar: MTableGroupbar,\r\n    GroupRow: MTableGroupRow,\r\n    Header: MTableHeader,\r\n    Pagination: TablePagination,\r\n    Row: MTableBodyRow,\r\n    Toolbar: MTableToolbar    \r\n  },\r\n  data: [],\r\n  icons: {\r\n    /* eslint-disable react/display-name */\r\n    Add: (props) => <Icon {...props}>add_box</Icon>,\r\n    Check: (props) => <Icon {...props}>check</Icon>,\r\n    Clear: (props) => <Icon {...props}>clear</Icon>,\r\n    Delete: (props) => <Icon {...props}>delete_outline</Icon>,\r\n    DetailPanel: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    Edit: (props) => <Icon {...props}>edit</Icon>,\r\n    Export: (props) => <Icon {...props}>save_alt</Icon>,\r\n    Filter: (props) => <Icon {...props}>filter_list</Icon>,\r\n    FirstPage: (props) => <Icon {...props}>first_page</Icon>,\r\n    LastPage: (props) => <Icon {...props}>last_page</Icon>,\r\n    NextPage: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    PreviousPage: (props) => <Icon {...props}>chevron_left</Icon>,\r\n    ResetSearch: (props) => <Icon {...props}>clear</Icon>,\r\n    Search: (props) => <Icon {...props}>search</Icon>,\r\n    SortArrow: (props) => <Icon {...props}>arrow_upward</Icon>,\r\n    ThirdStateCheck: (props) => <Icon {...props}>remove</Icon>,\r\n    ViewColumn: (props) => <Icon {...props}>view_column</Icon>\r\n    /* eslint-enable react/display-name */\r\n  },\r\n  isLoading: false,\r\n  title: 'Table Title',\r\n  options: {\r\n    actionsColumnIndex: 0,\r\n    addRowPosition: 'last',\r\n    columnsButton: false,\r\n    detailPanelType: 'multiple',\r\n    debounceInterval: 200,\r\n    doubleHorizontalScroll: false,\r\n    emptyRowsWhenPaging: true,\r\n    exportButton: false,\r\n    exportDelimiter: ',',\r\n    filtering: false,\r\n    header: true,\r\n    loadingType: 'overlay',\r\n    paging: true,\r\n    pageSize: 5,\r\n    pageSizeOptions: [5, 10, 20],\r\n    paginationType: 'normal',\r\n    showEmptyDataSourceMessage: true,\r\n    showSelectAllCheckbox: true,\r\n    search: true,\r\n    showTitle: true,\r\n    toolbarButtonAlignment: 'right',\r\n    searchFieldAlignment: 'right',\r\n    searchFieldStyle: {},\r\n    selection: false,\r\n    sorting: true,\r\n    toolbar: true,\r\n    defaultExpanded: false\r\n  },\r\n  localization: {\r\n    grouping: {\r\n      groupedBy: 'Grouped By:',\r\n      placeholder: 'Drag headers here to group by',\r\n    },\r\n    pagination: {\r\n      labelDisplayedRows: '{from}-{to} of {count}',\r\n      labelRowsPerPage: 'Rows per page:',\r\n      labelRowsSelect: 'rows'\r\n    },\r\n    toolbar: {},\r\n    header: {},\r\n    body: {\r\n      filterRow: {},\r\n      editRow: {\r\n        saveTooltip: 'Save',\r\n        cancelTooltip: 'Cancel',\r\n        deleteText: 'Are you sure delete this row?',\r\n      },\r\n      addTooltip: 'Add',\r\n      deleteTooltip: 'Delete',\r\n      editTooltip: 'Edit'\r\n    }\r\n  }\r\n};\r\n\r\nMaterialTable.propTypes = {\r\n  actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]).isRequired,\r\n    isFreeAction: PropTypes.bool,\r\n    tooltip: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n    iconProps: PropTypes.object\r\n  })])),\r\n  columns: PropTypes.arrayOf(PropTypes.shape({\r\n    cellStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    currencySetting: PropTypes.shape({\r\n      locale: PropTypes.string,\r\n      currencyCode: PropTypes.string,\r\n      minimumFractionDigits: PropTypes.number,\r\n      maximumFractionDigits: PropTypes.number\r\n    }),\r\n    customFilterAndSearch: PropTypes.func,\r\n    customSort: PropTypes.func,\r\n    defaultFilter: PropTypes.any,\r\n    defaultSort: PropTypes.oneOf(['asc', 'desc']),\r\n    editComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    emptyValue: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.func]),    \r\n    export: PropTypes.bool,\r\n    field: PropTypes.string,\r\n    filtering: PropTypes.bool,\r\n    grouping: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    hidden: PropTypes.bool,\r\n    lookup: PropTypes.object,\r\n    readonly: PropTypes.bool,\r\n    removable: PropTypes.bool,\r\n    render: PropTypes.func,\r\n    searchable: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    type: PropTypes.oneOf(['string', 'boolean', 'numeric', 'date', 'datetime', 'time', 'currency'])\r\n  })).isRequired,\r\n  components: PropTypes.shape({\r\n    Action: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Actions: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Body: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Cell: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Container: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    EditField: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    EditRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FilterRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Groupbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    GroupRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Header: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Row: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func])    \r\n  }),\r\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.func]).isRequired,\r\n  editable: PropTypes.shape({\r\n    onRowAdd: PropTypes.func,\r\n    onRowUpdate: PropTypes.func,\r\n    onRowDelete: PropTypes.func\r\n  }),\r\n  detailPanel: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({\r\n        disabled: PropTypes.bool,\r\n        icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        openIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        tooltip: PropTypes.string,\r\n        render: PropTypes.func.isRequired\r\n      })\r\n    ]))\r\n  ]),\r\n  icons: PropTypes.shape({\r\n    Add: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Check: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Clear: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Delete: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    DetailPanel: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Edit: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Export: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Filter: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FirstPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    LastPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    NextPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    PreviousPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ResetSearch: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Search: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    SortArrow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ThirdStateCheck: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ViewColumn: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  options: PropTypes.shape({\r\n    actionsColumnIndex: PropTypes.number,\r\n    addRowPosition: PropTypes.oneOf(['first', 'last']),\r\n    columnsButton: PropTypes.bool,\r\n    defaultExpanded: PropTypes.bool,\r\n    debounceInterval: PropTypes.number,\r\n    detailPanelType: PropTypes.oneOf(['single', 'multiple']),\r\n    doubleHorizontalScroll: PropTypes.bool,\r\n    emptyRowsWhenPaging: PropTypes.bool,\r\n    exportButton: PropTypes.bool,\r\n    exportDelimiter: PropTypes.string,\r\n    exportFileName: PropTypes.string,\r\n    exportCsv: PropTypes.func,\r\n    filtering: PropTypes.bool,\r\n    header: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    initialPage: PropTypes.number,\r\n    maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    loadingType: PropTypes.oneOf(['overlay', 'linear']),\r\n    paging: PropTypes.bool,\r\n    pageSize: PropTypes.number,\r\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\r\n    paginationType: PropTypes.oneOf(['normal', 'stepped']),\r\n    rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    showEmptyDataSourceMessage: PropTypes.bool,\r\n    showSelectAllCheckbox: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    toolbarButtonAlignment: PropTypes.oneOf(['left', 'right']),\r\n    searchFieldAlignment: PropTypes.oneOf(['left', 'right']),\r\n    searchFieldStyle: PropTypes.object,\r\n    selection: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    toolbar: PropTypes.bool,\r\n  }),\r\n  localization: PropTypes.shape({\r\n    grouping: PropTypes.shape({\r\n      groupedBy: PropTypes.string,\r\n      placeholder: PropTypes.string\r\n    }),\r\n    pagination: PropTypes.object,\r\n    toolbar: PropTypes.object,\r\n    header: PropTypes.object,\r\n    body: PropTypes.object\r\n  }),\r\n  initialFormData: PropTypes.object,\r\n  onSelectionChange: PropTypes.func,\r\n  onChangeRowsPerPage: PropTypes.func,\r\n  onChangePage: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  onRowClick: PropTypes.func,\r\n  onTreeExpandChange: PropTypes.func,\r\n  tableRef: PropTypes.any\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  paginationRoot: {\r\n    width: '100%'\r\n  },\r\n  paginationToolbar: {\r\n    padding: 0,\r\n    width: '100%'\r\n  },\r\n  paginationCaption: {\r\n    display: 'none'\r\n  },\r\n  paginationSelectRoot: {\r\n    margin: 0\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(props => <MaterialTable {...props} ref={props.tableRef} />);\r\n\r\nexport {\r\n  MTableAction, MTableActions, MTableBody, MTableCell, MTableEditRow, MTableEditField,\r\n  MTableFilterRow, MTableHeader, MTableSteppedPagination, MTablePagination,\r\n  MTableBodyRow, MTableToolbar, MTableGroupRow\r\n};\r\n"],"sourceRoot":""}